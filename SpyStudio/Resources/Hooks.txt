<?xml version="1.0" encoding="utf-8"?>
<hooks>
  <context name="INTERNETFEATURELIST" type="uint">
    <value name="FEATURE_OBJECT_CACHING">0</value>
    <value name="FEATURE_ZONE_ELEVATION">1</value>
    <value name="FEATURE_MIME_HANDLING">2</value>
    <value name="FEATURE_MIME_SNIFFING">3</value>
    <value name="FEATURE_WINDOW_RESTRICTIONS">4</value>
    <value name="FEATURE_WEBOC_POPUPMANAGEMENT">5</value>
    <value name="FEATURE_BEHAVIORS">6</value>
    <value name="FEATURE_DISABLE_MK_PROTOCOL">7</value>
    <value name="FEATURE_LOCALMACHINE_LOCKDOWN">8</value>
    <value name="FEATURE_SECURITYBAND">9</value>
    <value name="FEATURE_RESTRICT_ACTIVEXINSTALL">10</value>
    <value name="FEATURE_VALIDATE_NAVIGATE_URL">11</value>
    <value name="FEATURE_RESTRICT_FILEDOWNLOAD">12</value>
    <value name="FEATURE_ADDON_MANAGEMENT">13</value>
    <value name="FEATURE_PROTOCOL_LOCKDOWN">14</value>
    <value name="FEATURE_HTTP_USERNAME_PASSWORD_DISABLE">15</value>
    <value name="FEATURE_SAFE_BINDTOOBJECT">16</value>
    <value name="FEATURE_UNC_SAVEDFILECHECK">17</value>
    <value name="FEATURE_GET_URL_DOM_FILEPATH_UNENCODED">18</value>
    <value name="FEATURE_TABBED_BROWSING">19</value>
    <value name="FEATURE_SSLUX">20</value>
    <value name="FEATURE_DISABLE_NAVIGATION_SOUNDS">21</value>
    <value name="FEATURE_DISABLE_LEGACY_COMPRESSION">22</value>
    <value name="FEATURE_FORCE_ADDR_AND_STATUS">23</value>
    <value name="FEATURE_XMLHTTP">24</value>
    <value name="FEATURE_DISABLE_TELNET_PROTOCOL">25</value>
    <value name="FEATURE_FEEDS">26</value>
    <value name="FEATURE_BLOCK_INPUT_PROMPTS">27</value>
    <value name="FEATURE_ENTRY_COUNT">28</value>
  </context>
  <context name="INTERNETCONNECTIONSTATE" type="uint" flag="true">
    <value name="INTERNET_CONNECTION_CONFIGURED">0x40</value>
    <value name="INTERNET_CONNECTION_LAN">0x02</value>
    <value name="INTERNET_CONNECTION_MODEM">0x01</value>
    <value name="INTERNET_CONNECTION_MODEM_BUSY">0x08</value>
    <value name="INTERNET_CONNECTION_OFFLINE">0x20</value>
    <value name="INTERNET_CONNECTION_PROXY">0x04</value>
    <value name="INTERNET_RAS_INSTALLED">0x10</value>
    <value name="INTERNET_CONNECTION_MODEM">0x01</value>
    <value name="INTERNET_CONNECTION_MODEM">0x01</value>
    <value name="INTERNET_CONNECTION_MODEM">0x01</value>
    <value name="INTERNET_CONNECTION_MODEM">0x01</value>
  </context>
  <context name="INTERNET_OPTION" type="uint">
    <value name="INTERNET_OPTION_CALLBACK">1</value>
    <value name="INTERNET_OPTION_CONNECT_TIMEOUT">2</value>
    <value name="INTERNET_OPTION_CONNECT_RETRIES">3</value>
    <value name="INTERNET_OPTION_CONNECT_BACKOFF">4</value>
    <value name="INTERNET_OPTION_SEND_TIMEOUT">5</value>
    <value name="INTERNET_OPTION_RECEIVE_TIMEOUT">6</value>
    <value name="INTERNET_OPTION_DATA_SEND_TIMEOUT">7</value>
    <value name="INTERNET_OPTION_DATA_RECEIVE_TIMEOUT">8</value>
    <value name="INTERNET_OPTION_HANDLE_TYPE">9</value>
    <value name="INTERNET_OPTION_LISTEN_TIMEOUT">11</value>
    <value name="INTERNET_OPTION_READ_BUFFER_SIZE">12</value>
    <value name="INTERNET_OPTION_WRITE_BUFFER_SIZE">13</value>
    <value name="INTERNET_OPTION_ASYNC_ID">15</value>
    <value name="INTERNET_OPTION_ASYNC_PRIORITY">16</value>
    <value name="INTERNET_OPTION_PARENT_HANDLE">21</value>
    <value name="INTERNET_OPTION_KEEP_CONNECTION">22</value>
    <value name="INTERNET_OPTION_REQUEST_FLAGS">23</value>
    <value name="INTERNET_OPTION_EXTENDED_ERROR">24</value>
    <value name="INTERNET_OPTION_OFFLINE_MODE">26</value>
    <value name="INTERNET_OPTION_CACHE_STREAM_HANDLE">27</value>
    <value name="INTERNET_OPTION_USERNAME">28</value>
    <value name="INTERNET_OPTION_PASSWORD">29</value>
    <value name="INTERNET_OPTION_ASYNC">30</value>
    <value name="INTERNET_OPTION_SECURITY_FLAGS">31</value>
    <value name="INTERNET_OPTION_SECURITY_CERTIFICATE_STRUCT">32</value>
    <value name="INTERNET_OPTION_DATAFILE_NAME">33</value>
    <value name="INTERNET_OPTION_URL">34</value>
    <value name="INTERNET_OPTION_SECURITY_CERTIFICATE">35</value>
    <value name="INTERNET_OPTION_SECURITY_KEY_BITNESS">36</value>
    <value name="INTERNET_OPTION_REFRESH">37</value>
    <value name="INTERNET_OPTION_PROXY">38</value>
    <value name="INTERNET_OPTION_SETTINGS_CHANGED">39</value>
    <value name="INTERNET_OPTION_VERSION">40</value>
    <value name="INTERNET_OPTION_USER_AGENT">41</value>
    <value name="INTERNET_OPTION_END_BROWSER_SESSION">42</value>
    <value name="INTERNET_OPTION_PROXY_USERNAME">43</value>
    <value name="INTERNET_OPTION_PROXY_PASSWORD">44</value>
    <value name="INTERNET_OPTION_CONTEXT_VALUE">45</value>
    <value name="INTERNET_OPTION_CONNECT_LIMIT">46</value>
    <value name="INTERNET_OPTION_SECURITY_SELECT_CLIENT_CERT">47</value>
    <value name="INTERNET_OPTION_POLICY">48</value>
    <value name="INTERNET_OPTION_DISCONNECTED_TIMEOUT">49</value>
    <value name="INTERNET_OPTION_CONNECTED_STATE">50</value>
    <value name="INTERNET_OPTION_IDLE_STATE">51</value>
    <value name="INTERNET_OPTION_OFFLINE_SEMANTICS">52</value>
    <value name="INTERNET_OPTION_SECONDARY_CACHE_KEY">53</value>
    <value name="INTERNET_OPTION_CALLBACK_FILTER">54</value>
    <value name="INTERNET_OPTION_CONNECT_TIME">55</value>
    <value name="INTERNET_OPTION_SEND_THROUGHPUT">56</value>
    <value name="INTERNET_OPTION_RECEIVE_THROUGHPUT">57</value>
    <value name="INTERNET_OPTION_REQUEST_PRIORITY">58</value>
    <value name="INTERNET_OPTION_HTTP_VERSION">59</value>
    <value name="INTERNET_OPTION_RESET_URLCACHE_SESSION">60</value>
    <value name="INTERNET_OPTION_ERROR_MASK">62</value>
    <value name="INTERNET_OPTION_FROM_CACHE_TIMEOUT">63</value>
    <value name="INTERNET_OPTION_BYPASS_EDITED_ENTRY">64</value>
    <value name="INTERNET_OPTION_HTTP_DECODING">65</value>
    <value name="INTERNET_OPTION_DIAGNOSTIC_SOCKET_INFO">67</value>
    <value name="INTERNET_OPTION_CODEPAGE">68</value>
    <value name="INTERNET_OPTION_CACHE_TIMESTAMPS">69</value>
    <value name="INTERNET_OPTION_DISABLE_AUTODIAL">70</value>
    <value name="INTERNET_OPTION_MAX_CONNS_PER_SERVER">73</value>
    <value name="INTERNET_OPTION_MAX_CONNS_PER_1_0_SERVER">74</value>
    <value name="INTERNET_OPTION_PER_CONNECTION_OPTION">75</value>
    <value name="INTERNET_OPTION_DIGEST_AUTH_UNLOAD">76</value>
    <value name="INTERNET_OPTION_IGNORE_OFFLINE">77</value>
    <value name="INTERNET_OPTION_IDENTITY">78</value>
    <value name="INTERNET_OPTION_REMOVE_IDENTITY">79</value>
    <value name="INTERNET_OPTION_ALTER_IDENTITY">80</value>
    <value name="INTERNET_OPTION_SUPPRESS_BEHAVIOR">81</value>
    <value name="INTERNET_OPTION_AUTODIAL_MODE">82</value>
    <value name="INTERNET_OPTION_AUTODIAL_CONNECTION">83</value>
    <value name="INTERNET_OPTION_CLIENT_CERT_CONTEXT">84</value>
    <value name="INTERNET_OPTION_AUTH_FLAGS">85</value>
    <value name="INTERNET_OPTION_COOKIES_3RD_PARTY">86</value>
    <value name="INTERNET_OPTION_DISABLE_PASSPORT_AUTH">87</value>
    <value name="INTERNET_OPTION_SEND_UTF8_SERVERNAME_TO_PROXY">88</value>
    <value name="INTERNET_OPTION_EXEMPT_CONNECTION_LIMIT">89</value>
    <value name="INTERNET_OPTION_ENABLE_PASSPORT_AUTH">90</value>
    <value name="INTERNET_OPTION_HIBERNATE_INACTIVE_WORKER_THREADS">91</value>
    <value name="INTERNET_OPTION_ACTIVATE_WORKER_THREADS">92</value>
    <value name="INTERNET_OPTION_RESTORE_WORKER_THREAD_DEFAULTS">93</value>
    <value name="INTERNET_OPTION_SOCKET_SEND_BUFFER_LENGTH">94</value>
    <value name="INTERNET_OPTION_PROXY_SETTINGS_CHANGED">95</value>
    <value name="INTERNET_OPTION_DATAFILE_EXT">96</value>
    <value name="INTERNET_OPTION_CODEPAGE_PATH">100</value>
    <value name="INTERNET_OPTION_CODEPAGE_EXTRA">101</value>
    <value name="INTERNET_OPTION_IDN">102</value>
    <value name="INTERNET_OPTION_MAX_CONNS_PER_PROXY">103</value>
    <value name="INTERNET_OPTION_SUPPRESS_SERVER_AUTH">104</value>
    <value name="INTERNET_OPTION_SERVER_CERT_CHAIN_CONTEXT">105</value>
  </context>
  <context name="InternetCookieState" type="uint">
    <value name="COOKIE_STATE_UNKNOWN">0x0</value>
    <value name="COOKIE_STATE_ACCEPT">0x1</value>
    <value name="COOKIE_STATE_PROMPT">0x2</value>
    <value name="COOKIE_STATE_LEASH">0x3</value>
    <value name="COOKIE_STATE_DOWNGRADE">0x4</value>
    <value name="COOKIE_STATE_REJECT">0x5</value>
  </context>
  <context name="WH_HOOKS_TYPE" type="int">
    <value name="WH_CALLWNDPROC">4</value>
    <value name="WH_CALLWNDPROCRET">12</value>
    <value name="WH_CBT">5</value>
    <value name="WH_DEBUG">9</value>
    <value name="WH_FOREGROUNDIDLE">11</value>
    <value name="WH_GETMESSAGE">3</value>
    <value name="WH_JOURNALPLAYBACK">1</value>
    <value name="WH_JOURNALRECORD">0</value>
    <value name="WH_KEYBOARD">2</value>
    <value name="WH_KEYBOARD_LL">13</value>
    <value name="WH_MOUSE">7</value>
    <value name="WH_MOUSE_LL">14</value>
    <value name="WH_MSGFILTER">-1</value>
    <value name="WH_SHELL">10</value>
    <value name="WH_SYSMSGFILTER">6</value>
  </context>
  <context name="SSF_SHELL_CONSTANTS" type="uint">
    <value name="SSF_SHOWALLOBJECTS">0x00000001</value>
    <value name="SSF_SHOWEXTENSIONS">0x00000002</value>
    <value name="SSF_HIDDENFILEEXTS">0x00000004</value>
    <value name="SSF_SERVERADMINUI">0x00000004</value>
    <value name="SSF_SHOWCOMPCOLOR">0x00000008</value>
    <value name="SSF_SORTCOLUMNS">0x00000010</value>
    <value name="SSF_SHOWSYSFILES">0x00000020</value>
    <value name="SSF_DOUBLECLICKINWEBVIEW">0x00000080</value>
    <value name="SSF_SHOWATTRIBCOL">0x00000100</value>
    <value name="SSF_DESKTOPHTML">0x00000200</value>
    <value name="SSF_WIN95CLASSIC">0x00000400</value>
    <value name="SSF_DONTPRETTYPATH">0x00000800</value>
    <value name="SSF_MAPNETDRVBUTTON">0x00001000</value>
    <value name="SSF_SHOWINFOTIP">0x00002000</value>
    <value name="SSF_HIDEICONS">0x00004000</value>
    <value name="SSF_NOCONFIRMRECYCLE">0x00008000</value>
    <value name="SSF_FILTER">0x00010000</value>
    <value name="SSF_WEBVIEW">0x00020000</value>
    <value name="SSF_SHOWSUPERHIDDEN">0x00040000</value>
    <value name="SSF_SEPPROCESS">0x00080000</value>
    <value name="SSF_NONETCRAWLING">0x00100000</value>
    <value name="SSF_STARTPANELON">0x00200000</value>
    <value name="SSF_SHOWSTARTPAGE">0x00400000</value>
    <value name="SSF_AUTOCHECKSELECT">0x00800000</value>
    <value name="SSF_ICONSONLY">0x01000000</value>
    <value name="SSF_SHOWTYPEOVERLAY">0x02000000</value>
    <value name="SSF_SHOWSTATUSBAR">0x04000000</value>
  </context>
  <context name="SW_CONSTANTS" type="uint">
    <value name="SW_FORCEMINIMIZE">11</value>
    <value name="SW_HIDE">0</value>
    <value name="SW_MAXIMIZE">3</value>
    <value name="SW_MINIMIZE">6</value>
    <value name="SW_RESTORE">9</value>
    <value name="SW_SHOW">5</value>
    <value name="SW_SHOWDEFAULT">10</value>
    <value name="SW_SHOWMAXIMIZED">3</value>
    <value name="SW_SHOWMINIMIZED">2</value>
    <value name="SW_SHOWMINNOACTIVE">7</value>
    <value name="SW_SHOWNA">8</value>
    <value name="SW_SHOWNOACTIVATE">4</value>
    <value name="SW_SHOWNORMAL">1</value>
  </context>
  <context name="AW_CONSTANTS" type="uint">
    <value name="AW_ACTIVATE">0x00020000</value>
    <value name="AW_BLEND">0x00080000</value>
    <value name="AW_CENTER">0x00000010</value>
    <value name="AW_HIDE">0x00010000</value>
    <value name="AW_HOR_POSITIVE">0x00000001</value>
    <value name="AW_HOR_NEGATIVE">0x00000002</value>
    <value name="AW_SLIDE">0x00040000</value>
    <value name="AW_VER_POSITIVE">0x00000004</value>
    <value name="AW_VER_NEGATIVE">0x00000008</value>
  </context>
  <context name="ACCESS_MASK" type="uint" flag="true">
    <value name="DELETE">0x00010000</value>
    <value name="READ_CONTROL">0x00020000</value>
    <value name="WRITE_DAC">0x00040000</value>
    <value name="WRITE_OWNER">0x00080000</value>
    <value name="SYNCHRONIZE">0x00100000</value>
    <value name="STANDARD_RIGHTS_REQUIRED">0x000F0000</value>
    <value name="FILE_READ_DATA">0x0001</value>
    <value name="FILE_WRITE_DATA">0x0002</value>
    <value name="FILE_READ_ATTRIBUTES">0x0080</value>
    <value name="FILE_READ_EA">0x0008</value>
    <value name="FILE_WRITE_ATTRIBUTES">0x0100</value>
    <value name="FILE_WRITE_EA">0x0010</value>
    <value name="FILE_APPEND_DATA">0x0004</value>
    <value name="FILE_EXECUTE">0x0020</value>
  </context>
  <context name="SHARE_MASK" type="uint" flag="true">
    <value name="FILE_SHARE_READ">0x00000001</value>
    <value name="FILE_SHARE_WRITE">0x00000002</value>
    <value name="FILE_SHARE_DELETE">0x00000004</value>
  </context>
  <context name="CREATE_DISPOSITION_MASK" type="uint">
    <value name="FILE_SUPERSEDE">0x00000000</value>
    <value name="FILE_OPEN">0x00000001</value>
    <value name="FILE_CREATE">0x00000002</value>
    <value name="FILE_OPEN_IF">0x00000003</value>
    <value name="FILE_OVERWRITE">0x00000004</value>
    <value name="FILE_OVERWRITE_IF">0x00000005</value>
  </context>
  <context name="FILE_OPEN_OPTIONS" type="uint" flag="true">
    <value name="FILE_DIRECTORY_FILE">0x00000001</value>
    <value name="FILE_WRITE_THROUGH">0x00000002</value>
    <value name="FILE_SEQUENTIAL_ONLY">0x00000004</value>
    <value name="FILE_NO_INTERMEDIATE_BUFFERING">0x00000008</value>
    <value name="FILE_SYNCHRONOUS_IO_ALERT">0x00000010</value>
    <value name="FILE_SYNCHRONOUS_IO_NONALERT">0x00000020</value>
    <value name="FILE_NON_DIRECTORY_FILE">0x00000040</value>
    <value name="FILE_CREATE_TREE_CONNECTION">0x00000080</value>
    <value name="FILE_COMPLETE_IF_OPLOCKED">0x00000100</value>
    <value name="FILE_NO_EA_KNOWLEDGE">0x00000200</value>
    <value name="FILE_OPEN_REMOTE_INSTANCE">0x00000400</value>
    <value name="FILE_RANDOM_ACCESS">0x00000800</value>
    <value name="FILE_DELETE_ON_CLOSE">0x00001000</value>
    <value name="FILE_OPEN_BY_FILE_ID">0x00002000</value>
    <value name="FILE_OPEN_FOR_BACKUP_INTENT">0x00004000</value>
    <value name="FILE_NO_COMPRESSION">0x00008000</value>
  </context>

  <context name="FILE_ATTRIBUTE" type="uint">
	<value name="FILE_ATTRIBUTE_READONLY">0x00000001</value>
	<value name="FILE_ATTRIBUTE_HIDDEN">0x00000002</value>
	<value name="FILE_ATTRIBUTE_SYSTEM">0x00000004</value>
	<value name="FILE_ATTRIBUTE_DIRECTORY">0x00000010</value>
	<value name="FILE_ATTRIBUTE_ARCHIVE">0x00000020</value>
	<value name="FILE_ATTRIBUTE_DEVICE">0x00000040</value>
	<value name="FILE_ATTRIBUTE_NORMAL">0x00000080</value>
	<value name="FILE_ATTRIBUTE_TEMPORARY">0x00000100</value>
	<value name="FILE_ATTRIBUTE_SPARSE_FILE">0x00000200</value>
	<value name="FILE_ATTRIBUTE_REPARSE_POINT">0x00000400</value>
	<value name="FILE_ATTRIBUTE_COMPRESSED">0x00000800</value>
	<value name="FILE_ATTRIBUTE_OFFLINE">0x00001000</value>
	<value name="FILE_ATTRIBUTE_NOT_CONTENT_INDEXED">0x00002000</value>
	<value name="FILE_ATTRIBUTE_ENCRYPTED">0x00004000</value>
	<value name="FILE_ATTRIBUTE_VIRTUAL">0x00010000</value>
  </context>

  <context name="OBJECT_INFORMATION_CLASS" type="uint">
    <value name="ObjectBasicInformation">0</value>
    <value name="ObjectTypeInformation">0x0002</value>
  </context>

  <context name="FileInformationClass" type="int">
	<value name="FileDirectoryInformation">1</value>
	<value name="FileFullDirectoryInformation">2</value>
	<value name="FileBothDirectoryInformation">3</value>
	<value name="FileBasicInformation">4</value>
	<value name="FileStandardInformation">5</value>
	<value name="FileInternalInformation">6</value>
	<value name="FileEaInformation">7</value>
	<value name="FileAccessInformation">8</value>
	<value name="FileNameInformation">9</value>
	<value name="FileRenameInformation">10</value>
	<value name="FileLinkInformation">11</value>
	<value name="FileNamesInformation">12</value>
	<value name="FileDispositionInformation">13</value>
	<value name="FilePositionInformation">14</value>
	<value name="FileFullEaInformation">15</value>
	<value name="FileModeInformation">16</value>
	<value name="FileAlignmentInformation">17</value>
	<value name="FileAllInformation">18</value>
	<value name="FileAllocationInformation">19</value>
	<value name="FileEndOfFileInformation">20</value>
	<value name="FileAlternateNameInformation">21</value>
	<value name="FileStreamInformation">22</value>
	<value name="FilePipeInformation">23</value>
	<value name="FilePipeLocalInformation">24</value>
	<value name="FilePipeRemoteInformation">25</value>
	<value name="FileMailslotQueryInformation">26</value>
	<value name="FileMailslotSetInformation">27</value>
	<value name="FileCompressionInformation">28</value>
	<value name="FileObjectIdInformation">29</value>
	<value name="FileCompletionInformation">30</value>
	<value name="FileMoveClusterInformation">31</value>
	<value name="FileQuotaInformation">32</value>
	<value name="FileReparsePointInformation">33</value>
	<value name="FileNetworkOpenInformation">34</value>
	<value name="FileAttributeTagInformation">35</value>
	<value name="FileTrackingInformation">36</value>
	<value name="FileIdBothDirectoryInformation">37</value>
	<value name="FileIdFullDirectoryInformation">38</value>
	<value name="FileValidDataLengthInformation">39</value>
	<value name="FileShortNameInformation">40</value>
	<value name="FileIoCompletionNotificationInformation">41</value>
	<value name="FileIoStatusBlockRangeInformation">42</value>
	<value name="FileIoPriorityHintInformation">43</value>
	<value name="FileSfioReserveInformation">44</value>
	<value name="FileSfioVolumeInformation">45</value>
	<value name="FileHardLinkInformation">46</value>
	<value name="FileProcessIdsUsingFileInformation">47</value>
	<value name="FileNormalizedNameInformation">48</value>
	<value name="FileNetworkPhysicalNameInformation">49</value>
	<value name="FileIdGlobalTxDirectoryInformation">50</value>
	<value name="FileIsRemoteDeviceInformation">51</value>
	<value name="FileAttributeCacheInformation">52</value>
	<value name="FileNumaNodeInformation">53</value>
	<value name="FileStandardLinkInformation">54</value>
	<value name="FileRemoteProtocolInformation">55</value>
	<value name="FileMaximumInformation">56</value>
  </context>

  <context name="DROPEFFECT" type="uint" flag="true">
	<value name="DROPEFFECT_NONE">0</value>
	<value name="DROPEFFECT_COPY">1</value>
	<value name="DROPEFFECT_MOVE">2</value>
	<value name="DROPEFFECT_LINK">4</value>
	<value name="DROPEFFECT_SCROLL">8</value>
  </context>

  <context name="MSGCODE" type="DWORD">
	<value name="WM_NULL">0</value>
	<value name="WM_CREATE">1</value>
	<value name="M_DESTROY">2</value>
	<value name="M_MOVE">3</value>
	<value name="M_SIZE">5</value>
	<value name="M_ACTIVATE">6</value>
	<value name="WM_SETFOCUS">7</value>
	<value name="WM_KILLFOCUS">8</value>
	<value name="WM_ENABLE">10</value>
	<value name="WM_SETREDRAW">11</value>
	<value name="WM_SETTEXT">12</value>
	<value name="WM_GETTEXT">13</value>
	<value name="WM_GETTEXTLENGTH">14</value>
	<value name="WM_PAINT">15</value>
	<value name="WM_CLOSE">16</value>
	<value name="WM_QUERYENDSESSION">17</value>
	<value name="WM_QUIT">18</value>
	<value name="WM_QUERYOPEN">19</value>
	<value name="WM_ERASEBKGND">20</value>
	<value name="WM_SYSCOLORCHANGE">21</value>
	<value name="WM_ENDSESSION">22</value>
	<value name="WM_SHOWWINDOW">24</value>
	<value name="WM_CTLCOLOR">25</value>
	<value name="WM_WININICHANGE">26</value>
	<value name="WM_DEVMODECHANGE">27</value>
	<value name="WM_ACTIVATEAPP">28</value>
	<value name="WM_FONTCHANGE">29</value>
	<value name="WM_TIMECHANGE">30</value>
	<value name="WM_CANCELMODE">31</value>
	<value name="WM_SETCURSOR">32</value>
	<value name="WM_MOUSEACTIVATE">33</value>
	<value name="WM_CHILDACTIVATE">34</value>
	<value name="WM_QUEUESYNC">35</value>
	<value name="WM_GETMINMAXINFO">36</value>
	<value name="WM_PAINTICON">38</value>
	<value name="WM_ICONERASEBKGND">39</value>
	<value name="WM_NEXTDLGCTL">40</value>
	<value name="WM_SPOOLERSTATUS">42</value>
	<value name="WM_DRAWITEM">43</value>
	<value name="WM_MEASUREITEM">44</value>
	<value name="WM_DELETEITEM">45</value>
	<value name="WM_VKEYTOITEM">46</value>
	<value name="WM_CHARTOITEM">47</value>
	<value name="WM_SETFONT">48</value>
	<value name="WM_GETFONT">49</value>
	<value name="WM_SETHOTKEY">50</value>
	<value name="WM_GETHOTKEY">51</value>
	<value name="WM_QUERYDRAGICON">55</value>
	<value name="WM_COMPAREITEM">57</value>
	<value name="WM_GETOBJECT">61</value>
	<value name="WM_COMPACTING">65</value>
	<value name="WM_COMMNOTIFY">68</value>
	<value name="WM_WINDOWPOSCHANGING">70</value>
	<value name="WM_WINDOWPOSCHANGED">71</value>
	<value name="WM_POWER">72</value>
	<value name="WM_COPYGLOBALDATA">73</value>
	<value name="WM_COPYDATA">74</value>
	<value name="WM_CANCELJOURNAL">75</value>
	<value name="WM_NOTIFY">78</value>
	<value name="WM_INPUTLANGCHANGEREQUEST">80</value>
	<value name="WM_INPUTLANGCHANGE">81</value>
	<value name="WM_TCARD">82</value>
	<value name="WM_HELP">83</value>
	<value name="WM_USERCHANGED">84</value>
	<value name="WM_NOTIFYFORMAT">85</value>
	<value name="WM_CONTEXTMENU">123</value>
	<value name="WM_STYLECHANGING">124</value>
	<value name="WM_STYLECHANGED">125</value>
	<value name="WM_DISPLAYCHANGE">126</value>
	<value name="WM_GETICON">127</value>
	<value name="WM_SETICON">128</value>
	<value name="WM_NCCREATE">129</value>
	<value name="WM_NCDESTROY">130</value>
	<value name="WM_NCCALCSIZE">131</value>
	<value name="WM_NCHITTEST">132</value>
	<value name="WM_NCPAINT">133</value>
	<value name="WM_NCACTIVATE">134</value>
	<value name="WM_GETDLGCODE">135</value>
	<value name="WM_SYNCPAINT">136</value>
	<value name="WM_NCMOUSEMOVE">160</value>
	<value name="WM_NCLBUTTONDOWN">161</value>
	<value name="WM_NCLBUTTONUP">162</value>
	<value name="WM_NCLBUTTONDBLCLK">163</value>
	<value name="WM_NCRBUTTONDOWN">164</value>
	<value name="WM_NCRBUTTONUP">165</value>
	<value name="WM_NCRBUTTONDBLCLK">166</value>
	<value name="WM_NCMBUTTONDOWN">167</value>
	<value name="WM_NCMBUTTONUP">168</value>
	<value name="WM_NCMBUTTONDBLCLK">169</value>
	<value name="WM_NCXBUTTONDOWN">171</value>
	<value name="WM_NCXBUTTONUP">172</value>
	<value name="WM_NCXBUTTONDBLCLK">173</value>
	<value name="EM_GETSEL">176</value>
	<value name="EM_SETSEL">177</value>
	<value name="EM_GETRECT">178</value>
	<value name="EM_SETRECT">179</value>
	<value name="EM_SETRECTNP">180</value>
	<value name="EM_SCROLL">181</value>
	<value name="EM_LINESCROLL">182</value>
	<value name="EM_SCROLLCARET">183</value>
	<value name="EM_GETMODIFY">185</value>
	<value name="EM_SETMODIFY">187</value>
	<value name="EM_GETLINECOUNT">188</value>
	<value name="EM_LINEINDEX">189</value>
	<value name="EM_SETHANDLE">190</value>
	<value name="EM_GETHANDLE">191</value>
	<value name="EM_GETTHUMB">192</value>
	<value name="EM_LINELENGTH">193</value>
	<value name="EM_REPLACESEL">194</value>
	<value name="EM_SETFONT">195</value>
	<value name="EM_GETLINE">196</value>
	<value name="EM_LIMITTEXT">197</value>
	<value name="EM_SETLIMITTEXT">197</value>
	<value name="EM_CANUNDO">198</value>
	<value name="EM_UNDO">199</value>
	<value name="EM_FMTLINES">200</value>
	<value name="EM_LINEFROMCHAR">201</value>
	<value name="EM_SETWORDBREAK">202</value>
	<value name="EM_SETTABSTOPS">203</value>
	<value name="EM_SETPASSWORDCHAR">204</value>
	<value name="EM_EMPTYUNDOBUFFER">205</value>
	<value name="EM_GETFIRSTVISIBLELINE">206</value>
	<value name="EM_SETREADONLY">207</value>
	<value name="EM_SETWORDBREAKPROC">209</value>
	<value name="EM_GETWORDBREAKPROC">209</value>
	<value name="EM_GETPASSWORDCHAR">210</value>
	<value name="EM_SETMARGINS">211</value>
	<value name="EM_GETMARGINS">212</value>
	<value name="EM_GETLIMITTEXT">213</value>
	<value name="EM_POSFROMCHAR">214</value>
	<value name="EM_CHARFROMPOS">215</value>
	<value name="EM_SETIMESTATUS">216</value>
	<value name="EM_GETIMESTATUS">217</value>
	<value name="SBM_SETPOS">224</value>
	<value name="SBM_GETPOS">225</value>
	<value name="SBM_SETRANGE">226</value>
	<value name="SBM_GETRANGE">227</value>
	<value name="SBM_ENABLE_ARROWS">228</value>
	<value name="SBM_SETRANGEREDRAW">230</value>
	<value name="SBM_SETSCROLLINFO">233</value>
	<value name="SBM_GETSCROLLINFO">234</value>
	<value name="SBM_GETSCROLLBARINFO">235</value>
	<value name="BM_GETCHECK">240</value>
	<value name="BM_SETCHECK">241</value>
	<value name="BM_GETSTATE">242</value>
	<value name="BM_SETSTATE">243</value>
	<value name="BM_SETSTYLE">244</value>
	<value name="BM_CLICK">245</value>
	<value name="BM_GETIMAGE">246</value>
	<value name="BM_SETIMAGE">247</value>
	<value name="BM_SETDONTCLICK">248</value>
	<value name="WM_INPUT">255</value>
	<value name="WM_KEYDOWN">256</value>
	<value name="WM_KEYFIRST">256</value>
	<value name="WM_KEYUP">257</value>
	<value name="WM_CHAR">258</value>
	<value name="WM_DEADCHAR">259</value>
	<value name="WM_SYSKEYDOWN">260</value>
	<value name="WM_SYSKEYUP">261</value>
	<value name="WM_SYSCHAR">262</value>
	<value name="WM_SYSDEADCHAR">263</value>
	<value name="WM_KEYLAST">264</value>
	<value name="WM_UNICHAR">265</value>
	<value name="WM_WNT_CONVERTREQUESTEX">265</value>
	<value name="WM_CONVERTREQUEST">266</value>
	<value name="WM_CONVERTRESULT">267</value>
	<value name="WM_INTERIM">268</value>
	<value name="WM_IME_STARTCOMPOSITION">269</value>
	<value name="WM_IME_ENDCOMPOSITION">270</value>
	<value name="WM_IME_COMPOSITION">271</value>
	<value name="WM_IME_KEYLAST">271</value>
	<value name="WM_INITDIALOG">272</value>
	<value name="WM_COMMAND">273</value>
	<value name="WM_SYSCOMMAND">274</value>
	<value name="WM_TIMER">275</value>
	<value name="WM_HSCROLL">276</value>
	<value name="WM_VSCROLL">277</value>
	<value name="WM_INITMENU">278</value>
	<value name="WM_INITMENUPOPUP">279</value>
	<value name="WM_SYSTIMER">280</value>
	<value name="WM_MENUSELECT">287</value>
	<value name="WM_MENUCHAR">288</value>
	<value name="WM_ENTERIDLE">289</value>
	<value name="WM_MENURBUTTONUP">290</value>
	<value name="WM_MENUDRAG">291</value>
	<value name="WM_MENUGETOBJECT">292</value>
	<value name="WM_UNINITMENUPOPUP">293</value>
	<value name="WM_MENUCOMMAND">294</value>
	<value name="WM_CHANGEUISTATE">295</value>
	<value name="WM_UPDATEUISTATE">296</value>
	<value name="WM_QUERYUISTATE">297</value>
	<value name="WM_CTLCOLORMSGBOX">306</value>
	<value name="WM_CTLCOLOREDIT">307</value>
	<value name="WM_CTLCOLORLISTBOX">308</value>
	<value name="WM_CTLCOLORBTN">309</value>
	<value name="WM_CTLCOLORDLG">310</value>
	<value name="WM_CTLCOLORSCROLLBAR">311</value>
	<value name="WM_CTLCOLORSTATIC">312</value>
	<value name="WM_MOUSEFIRST">512</value>
	<value name="WM_MOUSEMOVE">512</value>
	<value name="WM_LBUTTONDOWN">513</value>
	<value name="WM_LBUTTONUP">514</value>
	<value name="WM_LBUTTONDBLCLK">515</value>
	<value name="WM_RBUTTONDOWN">516</value>
	<value name="WM_RBUTTONUP">517</value>
	<value name="WM_RBUTTONDBLCLK">518</value>
	<value name="WM_MBUTTONDOWN">519</value>
	<value name="WM_MBUTTONUP">520</value>
	<value name="WM_MBUTTONDBLCLK">521</value>
	<value name="WM_MOUSELAST">521</value>
	<value name="WM_MOUSEWHEEL">522</value>
	<value name="WM_XBUTTONDOWN">523</value>
	<value name="WM_XBUTTONUP">524</value>
	<value name="WM_XBUTTONDBLCLK">525</value>
	<value name="WM_PARENTNOTIFY">528</value>
	<value name="WM_ENTERMENULOOP">529</value>
	<value name="WM_EXITMENULOOP">530</value>
	<value name="WM_NEXTMENU">531</value>
	<value name="WM_SIZING">532</value>
	<value name="WM_CAPTURECHANGED">533</value>
	<value name="WM_MOVING">534</value>
	<value name="WM_POWERBROADCAST">536</value>
	<value name="WM_DEVICECHANGE">537</value>
	<value name="WM_MDICREATE">544</value>
	<value name="WM_MDIDESTROY">545</value>
	<value name="WM_MDIACTIVATE">546</value>
	<value name="WM_MDIRESTORE">547</value>
	<value name="WM_MDINEXT">548</value>
	<value name="WM_MDIMAXIMIZE">549</value>
	<value name="WM_MDITILE">550</value>
	<value name="WM_MDICASCADE">551</value>
	<value name="WM_MDIICONARRANGE">552</value>
	<value name="WM_MDIGETACTIVE">553</value>
	<value name="WM_MDISETMENU">560</value>
	<value name="WM_ENTERSIZEMOVE">561</value>
	<value name="WM_EXITSIZEMOVE">562</value>
	<value name="WM_DROPFILES">563</value>
	<value name="WM_MDIREFRESHMENU">564</value>
	<value name="WM_IME_REPORT">640</value>
	<value name="WM_IME_SETCONTEXT">641</value>
	<value name="WM_IME_NOTIFY">642</value>
	<value name="WM_IME_CONTROL">643</value>
	<value name="WM_IME_COMPOSITIONFULL">644</value>
	<value name="WM_IME_SELECT">645</value>
	<value name="WM_IME_CHAR">646</value>
	<value name="WM_IME_REQUEST">648</value>
	<value name="WM_IMEKEYDOWN">656</value>
	<value name="WM_IME_KEYDOWN">656</value>
	<value name="WM_IMEKEYUP">657</value>
	<value name="WM_IME_KEYUP">657</value>
	<value name="WM_NCMOUSEHOVER">672</value>
	<value name="WM_MOUSEHOVER">673</value>
	<value name="WM_NCMOUSELEAVE">674</value>
	<value name="WM_MOUSELEAVE">675</value>
	<value name="WM_CUT">768</value>
	<value name="WM_COPY">769</value>
	<value name="WM_PASTE">770</value>
	<value name="WM_CLEAR">771</value>
	<value name="WM_UNDO">772</value>
	<value name="WM_RENDERFORMAT">773</value>
	<value name="WM_RENDERALLFORMATS">774</value>
	<value name="WM_DESTROYCLIPBOARD">775</value>
	<value name="WM_DRAWCLIPBOARD">776</value>
	<value name="WM_PAINTCLIPBOARD">777</value>
	<value name="WM_VSCROLLCLIPBOARD">778</value>
	<value name="WM_SIZECLIPBOARD">779</value>
	<value name="WM_ASKCBFORMATNAME">780</value>
	<value name="WM_CHANGECBCHAIN">781</value>
	<value name="WM_HSCROLLCLIPBOARD">782</value>
	<value name="WM_QUERYNEWPALETTE">783</value>
	<value name="WM_PALETTEISCHANGING">784</value>
	<value name="WM_PALETTECHANGED">785</value>
	<value name="WM_HOTKEY">786</value>
	<value name="WM_PRINT">791</value>
	<value name="WM_PRINTCLIENT">792</value>
	<value name="WM_APPCOMMAND">793</value>
	<value name="WM_HANDHELDFIRST">856</value>
	<value name="WM_HANDHELDLAST">863</value>
	<value name="WM_AFXFIRST">864</value>
	<value name="WM_AFXLAST">895</value>
	<value name="WM_PENWINFIRST">896</value>
	<value name="WM_RCRESULT">897</value>
	<value name="WM_HOOKRCRESULT">898</value>
	<value name="WM_GLOBALRCCHANGE">899</value>
	<value name="WM_PENMISCINFO">899</value>
	<value name="WM_SKB">900</value>
	<value name="WM_HEDITCTL">901</value>
	<value name="WM_PENCTL">901</value>
	<value name="WM_PENMISC">902</value>
	<value name="WM_CTLINIT">903</value>
	<value name="WM_PENEVENT">904</value>
	<value name="WM_PENWINLAST">911</value>
	<value name="DDM_SETFMT">1024</value>
	<value name="DM_GETDEFID">1024</value>
	<value name="NIN_SELECT">1024</value>
	<value name="TBM_GETPOS">1024</value>
	<value name="WM_PSD_PAGESETUPDLG">1024</value>
	<value name="WM_USER">1024</value>
	<value name="CBEM_INSERTITEMA">1025</value>
	<value name="DDM_DRAW">1025</value>
	<value name="DM_SETDEFID">1025</value>
	<value name="HKM_SETHOTKEY">1025</value>
	<value name="PBM_SETRANGE">1025</value>
	<value name="RB_INSERTBANDA">1025</value>
	<value name="SB_SETTEXTA">1025</value>
	<value name="TB_ENABLEBUTTON">1025</value>
	<value name="TBM_GETRANGEMIN">1025</value>
	<value name="TTM_ACTIVATE">1025</value>
	<value name="WM_CHOOSEFONT_GETLOGFONT">1025</value>
	<value name="WM_PSD_FULLPAGERECT">1025</value>
	<value name="CBEM_SETIMAGELIST">1026</value>
	<value name="DDM_CLOSE">1026</value>
	<value name="DM_REPOSITION">1026</value>
	<value name="HKM_GETHOTKEY">1026</value>
	<value name="PBM_SETPOS">1026</value>
	<value name="RB_DELETEBAND">1026</value>
	<value name="SB_GETTEXTA">1026</value>
	<value name="TB_CHECKBUTTON">1026</value>
	<value name="TBM_GETRANGEMAX">1026</value>
	<value name="WM_PSD_MINMARGINRECT">1026</value>
	<value name="CBEM_GETIMAGELIST">1027</value>
	<value name="DDM_BEGIN">1027</value>
	<value name="HKM_SETRULES">1027</value>
	<value name="PBM_DELTAPOS">1027</value>
	<value name="RB_GETBARINFO">1027</value>
	<value name="SB_GETTEXTLENGTHA">1027</value>
	<value name="TBM_GETTIC">1027</value>
	<value name="TB_PRESSBUTTON">1027</value>
	<value name="TTM_SETDELAYTIME">1027</value>
	<value name="WM_PSD_MARGINRECT">1027</value>
	<value name="CBEM_GETITEMA">1028</value>
	<value name="DDM_END">1028</value>
	<value name="PBM_SETSTEP">1028</value>
	<value name="RB_SETBARINFO">1028</value>
	<value name="SB_SETPARTS">1028</value>
	<value name="TB_HIDEBUTTON">1028</value>
	<value name="TBM_SETTIC">1028</value>
	<value name="TTM_ADDTOOLA">1028</value>
	<value name="WM_PSD_GREEKTEXTRECT">1028</value>
	<value name="CBEM_SETITEMA">1029</value>
	<value name="PBM_STEPIT">1029</value>
	<value name="TB_INDETERMINATE">1029</value>
	<value name="TBM_SETPOS">1029</value>
	<value name="TTM_DELTOOLA">1029</value>
	<value name="WM_PSD_ENVSTAMPRECT">1029</value>
	<value name="CBEM_GETCOMBOCONTROL">1030</value>
	<value name="PBM_SETRANGE32">1030</value>
	<value name="RB_SETBANDINFOA">1030</value>
	<value name="SB_GETPARTS">1030</value>
	<value name="TB_MARKBUTTON">1030</value>
	<value name="TBM_SETRANGE">1030</value>
	<value name="TTM_NEWTOOLRECTA">1030</value>
	<value name="WM_PSD_YAFULLPAGERECT">1030</value>
	<value name="CBEM_GETEDITCONTROL">1031</value>
	<value name="PBM_GETRANGE">1031</value>
	<value name="RB_SETPARENT">1031</value>
	<value name="SB_GETBORDERS">1031</value>
	<value name="TBM_SETRANGEMIN">1031</value>
	<value name="TTM_RELAYEVENT">1031</value>
	<value name="CBEM_SETEXSTYLE">1032</value>
	<value name="PBM_GETPOS">1032</value>
	<value name="RB_HITTEST">1032</value>
	<value name="SB_SETMINHEIGHT">1032</value>
	<value name="TBM_SETRANGEMAX">1032</value>
	<value name="TTM_GETTOOLINFOA">1032</value>
	<value name="CBEM_GETEXSTYLE">1033</value>
	<value name="CBEM_GETEXTENDEDSTYLE">1033</value>
	<value name="PBM_SETBARCOLOR">1033</value>
	<value name="RB_GETRECT">1033</value>
	<value name="SB_SIMPLE">1033</value>
	<value name="TB_ISBUTTONENABLED">1033</value>
	<value name="TBM_CLEARTICS">1033</value>
	<value name="TTM_SETTOOLINFOA">1033</value>
	<value name="CBEM_HASEDITCHANGED">1034</value>
	<value name="RB_INSERTBANDW">1034</value>
	<value name="SB_GETRECT">1034</value>
	<value name="TB_ISBUTTONCHECKED">1034</value>
	<value name="TBM_SETSEL">1034</value>
	<value name="TTM_HITTESTA">1034</value>
	<value name="WIZ_QUERYNUMPAGES">1034</value>
	<value name="CBEM_INSERTITEMW">1035</value>
	<value name="RB_SETBANDINFOW">1035</value>
	<value name="SB_SETTEXTW">1035</value>
	<value name="TB_ISBUTTONPRESSED">1035</value>
	<value name="TBM_SETSELSTART">1035</value>
	<value name="TTM_GETTEXTA">1035</value>
	<value name="WIZ_NEXT">1035</value>
	<value name="CBEM_SETITEMW">1036</value>
	<value name="RB_GETBANDCOUNT">1036</value>
	<value name="SB_GETTEXTLENGTHW">1036</value>
	<value name="TB_ISBUTTONHIDDEN">1036</value>
	<value name="TBM_SETSELEND">1036</value>
	<value name="TTM_UPDATETIPTEXTA">1036</value>
	<value name="WIZ_PREV">1036</value>
	<value name="CBEM_GETITEMW">1037</value>
	<value name="RB_GETROWCOUNT">1037</value>
	<value name="SB_GETTEXTW">1037</value>
	<value name="TB_ISBUTTONINDETERMINATE">1037</value>
	<value name="TTM_GETTOOLCOUNT">1037</value>
	<value name="CBEM_SETEXTENDEDSTYLE">1038</value>
	<value name="RB_GETROWHEIGHT">1038</value>
	<value name="SB_ISSIMPLE">1038</value>
	<value name="TB_ISBUTTONHIGHLIGHTED">1038</value>
	<value name="TBM_GETPTICS">1038</value>
	<value name="TTM_ENUMTOOLSA">1038</value>
	<value name="SB_SETICON">1039</value>
	<value name="TBM_GETTICPOS">1039</value>
	<value name="TTM_GETCURRENTTOOLA">1039</value>
	<value name="RB_IDTOINDEX">1040</value>
	<value name="SB_SETTIPTEXTA">1040</value>
	<value name="TBM_GETNUMTICS">1040</value>
	<value name="TTM_WINDOWFROMPOINT">1040</value>
	<value name="RB_GETTOOLTIPS">1041</value>
	<value name="SB_SETTIPTEXTW">1041</value>
	<value name="TBM_GETSELSTART">1041</value>
	<value name="TB_SETSTATE">1041</value>
	<value name="TTM_TRACKACTIVATE">1041</value>
	<value name="RB_SETTOOLTIPS">1042</value>
	<value name="SB_GETTIPTEXTA">1042</value>
	<value name="TB_GETSTATE">1042</value>
	<value name="TBM_GETSELEND">1042</value>
	<value name="TTM_TRACKPOSITION">1042</value>
	<value name="RB_SETBKCOLOR">1043</value>
	<value name="SB_GETTIPTEXTW">1043</value>
	<value name="TB_ADDBITMAP">1043</value>
	<value name="TBM_CLEARSEL">1043</value>
	<value name="TTM_SETTIPBKCOLOR">1043</value>
	<value name="RB_GETBKCOLOR">1044</value>
	<value name="SB_GETICON">1044</value>
	<value name="TB_ADDBUTTONSA">1044</value>
	<value name="TBM_SETTICFREQ">1044</value>
	<value name="TTM_SETTIPTEXTCOLOR">1044</value>
	<value name="RB_SETTEXTCOLOR">1045</value>
	<value name="TB_INSERTBUTTONA">1045</value>
	<value name="TBM_SETPAGESIZE">1045</value>
	<value name="TTM_GETDELAYTIME">1045</value>
	<value name="RB_GETTEXTCOLOR">1046</value>
	<value name="TB_DELETEBUTTON">1046</value>
	<value name="TBM_GETPAGESIZE">1046</value>
	<value name="TTM_GETTIPBKCOLOR">1046</value>
	<value name="RB_SIZETORECT">1047</value>
	<value name="TB_GETBUTTON">1047</value>
	<value name="TBM_SETLINESIZE">1047</value>
	<value name="TTM_GETTIPTEXTCOLOR">1047</value>
	<value name="RB_BEGINDRAG">1048</value>
	<value name="TB_BUTTONCOUNT">1048</value>
	<value name="TBM_GETLINESIZE">1048</value>
	<value name="TTM_SETMAXTIPWIDTH">1048</value>
	<value name="RB_ENDDRAG">1049</value>
	<value name="TB_COMMANDTOINDEX">1049</value>
	<value name="TBM_GETTHUMBRECT">1049</value>
	<value name="TTM_GETMAXTIPWIDTH">1049</value>
	<value name="RB_DRAGMOVE">1050</value>
	<value name="TBM_GETCHANNELRECT">1050</value>
	<value name="TB_SAVERESTOREA">1050</value>
	<value name="TTM_SETMARGIN">1050</value>
	<value name="RB_GETBARHEIGHT">1051</value>
	<value name="TB_CUSTOMIZE">1051</value>
	<value name="TBM_SETTHUMBLENGTH">1051</value>
	<value name="TTM_GETMARGIN">1051</value>
	<value name="RB_GETBANDINFOW">1052</value>
	<value name="TB_ADDSTRINGA">1052</value>
	<value name="TBM_GETTHUMBLENGTH">1052</value>
	<value name="TTM_POP">1052</value>
	<value name="RB_GETBANDINFOA">1053</value>
	<value name="TB_GETITEMRECT">1053</value>
	<value name="TBM_SETTOOLTIPS">1053</value>
	<value name="TTM_UPDATE">1053</value>
	<value name="RB_MINIMIZEBAND">1054</value>
	<value name="TB_BUTTONSTRUCTSIZE">1054</value>
	<value name="TBM_GETTOOLTIPS">1054</value>
	<value name="TTM_GETBUBBLESIZE">1054</value>
	<value name="RB_MAXIMIZEBAND">1055</value>
	<value name="TBM_SETTIPSIDE">1055</value>
	<value name="TB_SETBUTTONSIZE">1055</value>
	<value name="TTM_ADJUSTRECT">1055</value>
	<value name="TBM_SETBUDDY">1056</value>
	<value name="TB_SETBITMAPSIZE">1056</value>
	<value name="TTM_SETTITLEA">1056</value>
	<value name="MSG_FTS_JUMP_VA">1057</value>
	<value name="TB_AUTOSIZE">1057</value>
	<value name="TBM_GETBUDDY">1057</value>
	<value name="TTM_SETTITLEW">1057</value>
	<value name="RB_GETBANDBORDERS">1058</value>
	<value name="MSG_FTS_JUMP_QWORD">1059</value>
	<value name="RB_SHOWBAND">1059</value>
	<value name="TB_GETTOOLTIPS">1059</value>
	<value name="MSG_REINDEX_REQUEST">1060</value>
	<value name="TB_SETTOOLTIPS">1060</value>
	<value name="MSG_FTS_WHERE_IS_IT">1061</value>
	<value name="RB_SETPALETTE">1061</value>
	<value name="TB_SETPARENT">1061</value>
	<value name="RB_GETPALETTE">1062</value>
	<value name="RB_MOVEBAND">1063</value>
	<value name="TB_SETROWS">1063</value>
	<value name="TB_GETROWS">1064</value>
	<value name="TB_GETBITMAPFLAGS">1065</value>
	<value name="TB_SETCMDID">1066</value>
	<value name="RB_PUSHCHEVRON">1067</value>
	<value name="TB_CHANGEBITMAP">1067</value>
	<value name="TB_GETBITMAP">1068</value>
	<value name="MSG_GET_DEFFONT">1069</value>
	<value name="TB_GETBUTTONTEXTA">1069</value>
	<value name="TB_REPLACEBITMAP">1070</value>
	<value name="TB_SETINDENT">1071</value>
	<value name="TB_SETIMAGELIST">1072</value>
	<value name="TB_GETIMAGELIST">1073</value>
	<value name="TB_LOADIMAGES">1074</value>
	<value name="EM_CANPASTE">1074</value>
	<value name="TTM_ADDTOOLW">1074</value>
	<value name="EM_DISPLAYBAND">1075</value>
	<value name="TB_GETRECT">1075</value>
	<value name="TTM_DELTOOLW">1075</value>
	<value name="EM_EXGETSEL">1076</value>
	<value name="TB_SETHOTIMAGELIST">1076</value>
	<value name="TTM_NEWTOOLRECTW">1076</value>
	<value name="EM_EXLIMITTEXT">1077</value>
	<value name="TB_GETHOTIMAGELIST">1077</value>
	<value name="TTM_GETTOOLINFOW">1077</value>
	<value name="EM_EXLINEFROMCHAR">1078</value>
	<value name="TB_SETDISABLEDIMAGELIST">1078</value>
	<value name="TTM_SETTOOLINFOW">1078</value>
	<value name="EM_EXSETSEL">1079</value>
	<value name="TB_GETDISABLEDIMAGELIST">1079</value>
	<value name="TTM_HITTESTW">1079</value>
	<value name="EM_FINDTEXT">1080</value>
	<value name="TB_SETSTYLE">1080</value>
	<value name="TTM_GETTEXTW">1080</value>
	<value name="EM_FORMATRANGE">1081</value>
	<value name="TB_GETSTYLE">1081</value>
	<value name="TTM_UPDATETIPTEXTW">1081</value>
	<value name="EM_GETCHARFORMAT">1082</value>
	<value name="TB_GETBUTTONSIZE">1082</value>
	<value name="TTM_ENUMTOOLSW">1082</value>
	<value name="EM_GETEVENTMASK">1083</value>
	<value name="TB_SETBUTTONWIDTH">1083</value>
	<value name="TTM_GETCURRENTTOOLW">1083</value>
	<value name="EM_GETOLEINTERFACE">1084</value>
	<value name="TB_SETMAXTEXTROWS">1084</value>
	<value name="EM_GETPARAFORMAT">1085</value>
	<value name="TB_GETTEXTROWS">1085</value>
	<value name="EM_GETSELTEXT">1086</value>
	<value name="TB_GETOBJECT">1086</value>
	<value name="EM_HIDESELECTION">1087</value>
	<value name="TB_GETBUTTONINFOW">1087</value>
	<value name="EM_PASTESPECIAL">1088</value>
	<value name="TB_SETBUTTONINFOW">1088</value>
	<value name="EM_REQUESTRESIZE">1089</value>
	<value name="TB_GETBUTTONINFOA">1089</value>
	<value name="EM_SELECTIONTYPE">1090</value>
	<value name="TB_SETBUTTONINFOA">1090</value>
	<value name="EM_SETBKGNDCOLOR">1091</value>
	<value name="TB_INSERTBUTTONW">1091</value>
	<value name="EM_SETCHARFORMAT">1092</value>
	<value name="TB_ADDBUTTONSW">1092</value>
	<value name="EM_SETEVENTMASK">1093</value>
	<value name="TB_HITTEST">1093</value>
	<value name="EM_SETOLECALLBACK">1094</value>
	<value name="TB_SETDRAWTEXTFLAGS">1094</value>
	<value name="EM_SETPARAFORMAT">1095</value>
	<value name="TB_GETHOTITEM">1095</value>
	<value name="EM_SETTARGETDEVICE">1096</value>
	<value name="TB_SETHOTITEM">1096</value>
	<value name="EM_STREAMIN">1097</value>
	<value name="TB_SETANCHORHIGHLIGHT">1097</value>
	<value name="EM_STREAMOUT">1098</value>
	<value name="TB_GETANCHORHIGHLIGHT">1098</value>
	<value name="EM_GETTEXTRANGE">1099</value>
	<value name="TB_GETBUTTONTEXTW">1099</value>
	<value name="EM_FINDWORDBREAK">1100</value>
	<value name="TB_SAVERESTOREW">1100</value>
	<value name="EM_SETOPTIONS">1101</value>
	<value name="TB_ADDSTRINGW">1101</value>
	<value name="EM_GETOPTIONS">1102</value>
	<value name="TB_MAPACCELERATORA">1102</value>
	<value name="EM_FINDTEXTEX">1103</value>
	<value name="TB_GETINSERTMARK">1103</value>
	<value name="EM_GETWORDBREAKPROCEX">1104</value>
	<value name="TB_SETINSERTMARK">1104</value>
	<value name="EM_SETWORDBREAKPROCEX">1105</value>
	<value name="TB_INSERTMARKHITTEST">1105</value>
	<value name="EM_SETUNDOLIMIT">1106</value>
	<value name="TB_MOVEBUTTON">1106</value>
	<value name="TB_GETMAXSIZE">1107</value>
	<value name="EM_REDO">1108</value>
	<value name="TB_SETEXTENDEDSTYLE">1108</value>
	<value name="EM_CANREDO">1109</value>
	<value name="TB_GETEXTENDEDSTYLE">1109</value>
	<value name="EM_GETUNDONAME">1110</value>
	<value name="TB_GETPADDING">1110</value>
	<value name="EM_GETREDONAME">1111</value>
	<value name="TB_SETPADDING">1111</value>
	<value name="EM_STOPGROUPTYPING">1112</value>
	<value name="TB_SETINSERTMARKCOLOR">1112</value>
	<value name="EM_SETTEXTMODE">1113</value>
	<value name="TB_GETINSERTMARKCOLOR">1113</value>
	<value name="EM_GETTEXTMODE">1114</value>
	<value name="TB_MAPACCELERATORW">1114</value>
	<value name="EM_AUTOURLDETECT">1115</value>
	<value name="TB_GETSTRINGW">1115</value>
	<value name="EM_GETAUTOURLDETECT">1116</value>
	<value name="TB_GETSTRINGA">1116</value>
	<value name="EM_SETPALETTE">1117</value>
	<value name="EM_GETTEXTEX">1118</value>
	<value name="EM_GETTEXTLENGTHEX">1119</value>
	<value name="EM_SHOWSCROLLBAR">1120</value>
	<value name="EM_SETTEXTEX">1121</value>
	<value name="TAPI_REPLY">1123</value>
	<value name="ACM_OPENA">1124</value>
	<value name="BFFM_SETSTATUSTEXTA">1124</value>
	<value name="CDM_FIRST">1124</value>
	<value name="CDM_GETSPEC">1124</value>
	<value name="EM_SETPUNCTUATION">1124</value>
	<value name="IPM_CLEARADDRESS">1124</value>
	<value name="WM_CAP_UNICODE_START">1124</value>
	<value name="ACM_PLAY">1125</value>
	<value name="BFFM_ENABLEOK">1125</value>
	<value name="CDM_GETFILEPATH">1125</value>
	<value name="EM_GETPUNCTUATION">1125</value>
	<value name="IPM_SETADDRESS">1125</value>
	<value name="PSM_SETCURSEL">1125</value>
	<value name="UDM_SETRANGE">1125</value>
	<value name="WM_CHOOSEFONT_SETLOGFONT">1125</value>
	<value name="ACM_STOP">1126</value>
	<value name="BFFM_SETSELECTIONA">1126</value>
	<value name="CDM_GETFOLDERPATH">1126</value>
	<value name="EM_SETWORDWRAPMODE">1126</value>
	<value name="IPM_GETADDRESS">1126</value>
	<value name="PSM_REMOVEPAGE">1126</value>
	<value name="UDM_GETRANGE">1126</value>
	<value name="WM_CAP_SET_CALLBACK_ERRORW">1126</value>
	<value name="WM_CHOOSEFONT_SETFLAGS">1126</value>
	<value name="ACM_OPENW">1127</value>
	<value name="BFFM_SETSELECTIONW">1127</value>
	<value name="CDM_GETFOLDERIDLIST">1127</value>
	<value name="EM_GETWORDWRAPMODE">1127</value>
	<value name="IPM_SETRANGE">1127</value>
	<value name="PSM_ADDPAGE">1127</value>
	<value name="UDM_SETPOS">1127</value>
	<value name="WM_CAP_SET_CALLBACK_STATUSW">1127</value>
	<value name="BFFM_SETSTATUSTEXTW">1128</value>
	<value name="CDM_SETCONTROLTEXT">1128</value>
	<value name="EM_SETIMECOLOR">1128</value>
	<value name="IPM_SETFOCUS">1128</value>
	<value name="PSM_CHANGED">1128</value>
	<value name="UDM_GETPOS">1128</value>
	<value name="CDM_HIDECONTROL">1129</value>
	<value name="EM_GETIMECOLOR">1129</value>
	<value name="IPM_ISBLANK">1129</value>
	<value name="PSM_RESTARTWINDOWS">1129</value>
	<value name="UDM_SETBUDDY">1129</value>
	<value name="CDM_SETDEFEXT">1130</value>
	<value name="EM_SETIMEOPTIONS">1130</value>
	<value name="PSM_REBOOTSYSTEM">1130</value>
	<value name="UDM_GETBUDDY">1130</value>
	<value name="EM_GETIMEOPTIONS">1131</value>
	<value name="PSM_CANCELTOCLOSE">1131</value>
	<value name="UDM_SETACCEL">1131</value>
	<value name="EM_CONVPOSITION">1132</value>
	<value name="EM_CONVPOSITION">1132</value>
	<value name="PSM_QUERYSIBLINGS">1132</value>
	<value name="UDM_GETACCEL">1132</value>
	<value name="MCIWNDM_GETZOOM">1133</value>
	<value name="PSM_UNCHANGED">1133</value>
	<value name="UDM_SETBASE">1133</value>
	<value name="PSM_APPLY">1134</value>
	<value name="UDM_GETBASE">1134</value>
	<value name="PSM_SETTITLEA">1135</value>
	<value name="UDM_SETRANGE32">1135</value>
	<value name="PSM_SETWIZBUTTONS">1136</value>
	<value name="UDM_GETRANGE32">1136</value>
	<value name="WM_CAP_DRIVER_GET_NAMEW">1136</value>
	<value name="PSM_PRESSBUTTON">1137</value>
	<value name="UDM_SETPOS32">1137</value>
	<value name="WM_CAP_DRIVER_GET_VERSIONW">1137</value>
	<value name="PSM_SETCURSELID">1138</value>
	<value name="UDM_GETPOS32">1138</value>
	<value name="PSM_SETFINISHTEXTA">1139</value>
	<value name="PSM_GETTABCONTROL">1140</value>
	<value name="PSM_ISDIALOGMESSAGE">1141</value>
	<value name="MCIWNDM_REALIZE">1142</value>
	<value name="PSM_GETCURRENTPAGEHWND">1142</value>
	<value name="MCIWNDM_SETTIMEFORMATA">1143</value>
	<value name="PSM_INSERTPAGE">1143</value>
	<value name="EM_SETLANGOPTIONS">1144</value>
	<value name="MCIWNDM_GETTIMEFORMATA">1144</value>
	<value name="PSM_SETTITLEW">1144</value>
	<value name="WM_CAP_FILE_SET_CAPTURE_FILEW">1144</value>
	<value name="EM_GETLANGOPTIONS">1145</value>
	<value name="MCIWNDM_VALIDATEMEDIA">1145</value>
	<value name="PSM_SETFINISHTEXTW">1145</value>
	<value name="WM_CAP_FILE_GET_CAPTURE_FILEW">1145</value>
	<value name="EM_GETIMECOMPMODE">1146</value>
	<value name="EM_FINDTEXTW">1147</value>
	<value name="MCIWNDM_PLAYTO">1147</value>
	<value name="WM_CAP_FILE_SAVEASW">1147</value>
	<value name="EM_FINDTEXTEXW">1148</value>
	<value name="MCIWNDM_GETFILENAMEA">1148</value>
	<value name="EM_RECONVERSION">1149</value>
	<value name="MCIWNDM_GETDEVICEA">1149</value>
	<value name="PSM_SETHEADERTITLEA">1149</value>
	<value name="WM_CAP_FILE_SAVEDIBW">1149</value>
	<value name="EM_SETIMEMODEBIAS">1150</value>
	<value name="MCIWNDM_GETPALETTE">1150</value>
	<value name="PSM_SETHEADERTITLEW">1150</value>
	<value name="EM_GETIMEMODEBIAS">1151</value>
	<value name="MCIWNDM_SETPALETTE">1151</value>
	<value name="PSM_SETHEADERSUBTITLEA">1151</value>
	<value name="MCIWNDM_GETERRORA">1152</value>
	<value name="PSM_SETHEADERSUBTITLEW">1152</value>
	<value name="PSM_HWNDTOINDEX">1153</value>
	<value name="PSM_INDEXTOHWND">1154</value>
	<value name="MCIWNDM_SETINACTIVETIMER">1155</value>
	<value name="PSM_PAGETOINDEX">1155</value>
	<value name="PSM_INDEXTOPAGE">1156</value>
	<value name="DL_BEGINDRAG">1157</value>
	<value name="MCIWNDM_GETINACTIVETIMER">1157</value>
	<value name="PSM_IDTOINDEX">1157</value>
	<value name="DL_DRAGGING">1158</value>
	<value name="PSM_INDEXTOID">1158</value>
	<value name="DL_DROPPED">1159</value>
	<value name="PSM_GETRESULT">1159</value>
	<value name="DL_CANCELDRAG">1160</value>
	<value name="PSM_RECALCPAGESIZES">1160</value>
	<value name="MCIWNDM_GET_SOURCE">1164</value>
	<value name="MCIWNDM_PUT_SOURCE">1165</value>
	<value name="MCIWNDM_GET_DEST">1166</value>
	<value name="MCIWNDM_PUT_DEST">1167</value>
	<value name="MCIWNDM_CAN_PLAY">1168</value>
	<value name="MCIWNDM_CAN_WINDOW">1169</value>
	<value name="MCIWNDM_CAN_RECORD">1170</value>
	<value name="MCIWNDM_CAN_SAVE">1171</value>
	<value name="MCIWNDM_CAN_EJECT">1172</value>
	<value name="MCIWNDM_CAN_CONFIG">1173</value>
	<value name="IE_GETINK">1174</value>
	<value name="IE_MSGFIRST">1174</value>
	<value name="MCIWNDM_PALETTEKICK">1174</value>
	<value name="IE_SETINK">1175</value>
	<value name="IE_GETPENTIP">1176</value>
	<value name="IE_SETPENTIP">1177</value>
	<value name="IE_GETERASERTIP">1178</value>
	<value name="IE_SETERASERTIP">1179</value>
	<value name="IE_GETBKGND">1180</value>
	<value name="IE_SETBKGND">1181</value>
	<value name="IE_GETGRIDORIGIN">1182</value>
	<value name="IE_SETGRIDORIGIN">1183</value>
	<value name="IE_GETGRIDPEN">1184</value>
	<value name="IE_SETGRIDPEN">1185</value>
	<value name="IE_GETGRIDSIZE">1186</value>
	<value name="IE_SETGRIDSIZE">1187</value>
	<value name="IE_GETMODE">1188</value>
	<value name="IE_SETMODE">1189</value>
	<value name="IE_GETINKRECT">1190</value>
	<value name="WM_CAP_SET_MCI_DEVICEW">1190</value>
	<value name="WM_CAP_GET_MCI_DEVICEW">1191</value>
	<value name="WM_CAP_PAL_OPENW">1204</value>
	<value name="WM_CAP_PAL_SAVEW">1205</value>
	<value name="IE_GETAPPDATA">1208</value>
	<value name="IE_SETAPPDATA">1209</value>
	<value name="IE_GETDRAWOPTS">1210</value>
	<value name="IE_SETDRAWOPTS">1211</value>
	<value name="IE_GETFORMAT">1212</value>
	<value name="IE_SETFORMAT">1213</value>
	<value name="IE_GETINKINPUT">1214</value>
	<value name="IE_SETINKINPUT">1215</value>
	<value name="IE_GETNOTIFY">1216</value>
	<value name="IE_SETNOTIFY">1217</value>
	<value name="IE_GETRECOG">1218</value>
	<value name="IE_SETRECOG">1219</value>
	<value name="IE_GETSECURITY">1220</value>
	<value name="IE_SETSECURITY">1221</value>
	<value name="IE_GETSEL">1222</value>
	<value name="IE_SETSEL">1223</value>
	<value name="CDM_LAST">1224</value>
	<value name="EM_SETBIDIOPTIONS">1224</value>
	<value name="IE_DOCOMMAND">1224</value>
	<value name="MCIWNDM_NOTIFYMODE">1224</value>
	<value name="EM_GETBIDIOPTIONS">1225</value>
	<value name="IE_GETCOMMAND">1225</value>
	<value name="EM_SETTYPOGRAPHYOPTIONS">1226</value>
	<value name="IE_GETCOUNT">1226</value>
	<value name="EM_GETTYPOGRAPHYOPTIONS">1227</value>
	<value name="IE_GETGESTURE">1227</value>
	<value name="MCIWNDM_NOTIFYMEDIA">1227</value>
	<value name="EM_SETEDITSTYLE">1228</value>
	<value name="IE_GETMENU">1228</value>
	<value name="EM_GETEDITSTYLE">1229</value>
	<value name="IE_GETPAINTDC">1229</value>
	<value name="MCIWNDM_NOTIFYERROR">1229</value>
	<value name="IE_GETPDEVENT">1230</value>
	<value name="IE_GETSELCOUNT">1231</value>
	<value name="IE_GETSELITEMS">1232</value>
	<value name="IE_GETSTYLE">1233</value>
	<value name="MCIWNDM_SETTIMEFORMATW">1243</value>
	<value name="EM_OUTLINE">1244</value>
	<value name="EM_OUTLINE">1244</value>
	<value name="MCIWNDM_GETTIMEFORMATW">1244</value>
	<value name="EM_GETSCROLLPOS">1245</value>
	<value name="EM_GETSCROLLPOS">1245</value>
	<value name="EM_SETSCROLLPOS">1246</value>
	<value name="EM_SETSCROLLPOS">1246</value>
	<value name="EM_SETFONTSIZE">1247</value>
	<value name="EM_SETFONTSIZE">1247</value>
	<value name="EM_GETZOOM">1248</value>
	<value name="MCIWNDM_GETFILENAMEW">1248</value>
	<value name="EM_SETZOOM">1249</value>
	<value name="MCIWNDM_GETDEVICEW">1249</value>
	<value name="EM_GETVIEWKIND">1250</value>
	<value name="EM_SETVIEWKIND">1251</value>
	<value name="EM_GETPAGE">1252</value>
	<value name="MCIWNDM_GETERRORW">1252</value>
	<value name="EM_SETPAGE">1253</value>
	<value name="EM_GETHYPHENATEINFO">1254</value>
	<value name="EM_SETHYPHENATEINFO">1255</value>
	<value name="EM_GETPAGEROTATE">1259</value>
	<value name="EM_SETPAGEROTATE">1260</value>
	<value name="EM_GETCTFMODEBIAS">1261</value>
	<value name="EM_SETCTFMODEBIAS">1262</value>
	<value name="EM_GETCTFOPENSTATUS">1264</value>
	<value name="EM_SETCTFOPENSTATUS">1265</value>
	<value name="EM_GETIMECOMPTEXT">1266</value>
	<value name="EM_ISIME">1267</value>
	<value name="EM_GETIMEPROPERTY">1268</value>
	<value name="EM_GETQUERYRTFOBJ">1293</value>
	<value name="EM_SETQUERYRTFOBJ">1294</value>
	<value name="FM_GETFOCUS">1536</value>
	<value name="FM_GETDRIVEINFOA">1537</value>
	<value name="FM_GETSELCOUNT">1538</value>
	<value name="FM_GETSELCOUNTLFN">1539</value>
	<value name="FM_GETFILESELA">1540</value>
	<value name="FM_GETFILESELLFNA">1541</value>
	<value name="FM_REFRESH_WINDOWS">1542</value>
	<value name="FM_RELOAD_EXTENSIONS">1543</value>
	<value name="FM_GETDRIVEINFOW">1553</value>
	<value name="FM_GETFILESELW">1556</value>
	<value name="FM_GETFILESELLFNW">1557</value>
	<value name="WLX_WM_SAS">1625</value>
	<value name="SM_GETSELCOUNT">2024</value>
	<value name="UM_GETSELCOUNT">2024</value>
	<value name="WM_CPL_LAUNCH">2024</value>
	<value name="SM_GETSERVERSELA">2025</value>
	<value name="UM_GETUSERSELA">2025</value>
	<value name="WM_CPL_LAUNCHED">2025</value>
	<value name="SM_GETSERVERSELW">2026</value>
	<value name="UM_GETUSERSELW">2026</value>
	<value name="SM_GETCURFOCUSA">2027</value>
	<value name="UM_GETGROUPSELA">2027</value>
	<value name="SM_GETCURFOCUSW">2028</value>
	<value name="UM_GETGROUPSELW">2028</value>
	<value name="SM_GETOPTIONS">2029</value>
	<value name="UM_GETCURFOCUSA">2029</value>
	<value name="UM_GETCURFOCUSW">2030</value>
	<value name="UM_GETOPTIONS">2031</value>
	<value name="UM_GETOPTIONS2">2032</value>
	<value name="LVM_FIRST">4096</value>
	<value name="LVM_GETBKCOLOR">4096</value>
	<value name="LVM_SETBKCOLOR">4097</value>
	<value name="LVM_GETIMAGELIST">4098</value>
	<value name="LVM_SETIMAGELIST">4099</value>
	<value name="LVM_GETITEMCOUNT">4100</value>
	<value name="LVM_GETITEMA">4101</value>
	<value name="LVM_SETITEMA">4102</value>
	<value name="LVM_INSERTITEMA">4103</value>
	<value name="LVM_DELETEITEM">4104</value>
	<value name="LVM_DELETEALLITEMS">4105</value>
	<value name="LVM_GETCALLBACKMASK">4106</value>
	<value name="LVM_SETCALLBACKMASK">4107</value>
	<value name="LVM_GETNEXTITEM">4108</value>
	<value name="LVM_FINDITEMA">4109</value>
	<value name="LVM_GETITEMRECT">4110</value>
	<value name="LVM_SETITEMPOSITION">4111</value>
	<value name="LVM_GETITEMPOSITION">4112</value>
	<value name="LVM_GETSTRINGWIDTHA">4113</value>
	<value name="LVM_HITTEST">4114</value>
	<value name="LVM_ENSUREVISIBLE">4115</value>
	<value name="LVM_SCROLL">4116</value>
	<value name="LVM_REDRAWITEMS">4117</value>
	<value name="LVM_ARRANGE">4118</value>
	<value name="LVM_EDITLABELA">4119</value>
	<value name="LVM_GETEDITCONTROL">4120</value>
	<value name="LVM_GETCOLUMNA">4121</value>
	<value name="LVM_SETCOLUMNA">4122</value>
	<value name="LVM_INSERTCOLUMNA">4123</value>
	<value name="LVM_DELETECOLUMN">4124</value>
	<value name="LVM_GETCOLUMNWIDTH">4125</value>
	<value name="LVM_SETCOLUMNWIDTH">4126</value>
	<value name="LVM_GETHEADER">4127</value>
	<value name="LVM_CREATEDRAGIMAGE">4129</value>
	<value name="LVM_GETVIEWRECT">4130</value>
	<value name="LVM_GETTEXTCOLOR">4131</value>
	<value name="LVM_SETTEXTCOLOR">4132</value>
	<value name="LVM_GETTEXTBKCOLOR">4133</value>
	<value name="LVM_SETTEXTBKCOLOR">4134</value>
	<value name="LVM_GETTOPINDEX">4135</value>
	<value name="LVM_GETCOUNTPERPAGE">4136</value>
	<value name="LVM_GETORIGIN">4137</value>
	<value name="LVM_UPDATE">4138</value>
	<value name="LVM_SETITEMSTATE">4139</value>
	<value name="LVM_GETITEMSTATE">4140</value>
	<value name="LVM_GETITEMTEXTA">4141</value>
	<value name="LVM_SETITEMTEXTA">4142</value>
	<value name="LVM_SETITEMCOUNT">4143</value>
	<value name="LVM_SORTITEMS">4144</value>
	<value name="LVM_SETITEMPOSITION32">4145</value>
	<value name="LVM_GETSELECTEDCOUNT">4146</value>
	<value name="LVM_GETITEMSPACING">4147</value>
	<value name="LVM_GETISEARCHSTRINGA">4148</value>
	<value name="LVM_SETICONSPACING">4149</value>
	<value name="LVM_SETEXTENDEDLISTVIEWSTYLE">4150</value>
	<value name="LVM_GETEXTENDEDLISTVIEWSTYLE">4151</value>
	<value name="LVM_GETSUBITEMRECT">4152</value>
	<value name="LVM_SUBITEMHITTEST">4153</value>
	<value name="LVM_SETCOLUMNORDERARRAY">4154</value>
	<value name="LVM_GETCOLUMNORDERARRAY">4155</value>
	<value name="LVM_SETHOTITEM">4156</value>
	<value name="LVM_GETHOTITEM">4157</value>
	<value name="LVM_SETHOTCURSOR">4158</value>
	<value name="LVM_GETHOTCURSOR">4159</value>
	<value name="LVM_APPROXIMATEVIEWRECT">4160</value>
	<value name="LVM_SETWORKAREAS">4161</value>
	<value name="LVM_GETSELECTIONMARK">4162</value>
	<value name="LVM_SETSELECTIONMARK">4163</value>
	<value name="LVM_SETBKIMAGEA">4164</value>
	<value name="LVM_GETBKIMAGEA">4165</value>
	<value name="LVM_GETWORKAREAS">4166</value>
	<value name="LVM_SETHOVERTIME">4167</value>
	<value name="LVM_GETHOVERTIME">4168</value>
	<value name="LVM_GETNUMBEROFWORKAREAS">4169</value>
	<value name="LVM_SETTOOLTIPS">4170</value>
	<value name="LVM_GETITEMW">4171</value>
	<value name="LVM_SETITEMW">4172</value>
	<value name="LVM_INSERTITEMW">4173</value>
	<value name="LVM_GETTOOLTIPS">4174</value>
	<value name="LVM_FINDITEMW">4179</value>
	<value name="LVM_GETSTRINGWIDTHW">4183</value>
	<value name="LVM_GETCOLUMNW">4191</value>
	<value name="LVM_SETCOLUMNW">4192</value>
	<value name="LVM_INSERTCOLUMNW">4193</value>
	<value name="LVM_GETITEMTEXTW">4211</value>
	<value name="LVM_SETITEMTEXTW">4212</value>
	<value name="LVM_GETISEARCHSTRINGW">4213</value>
	<value name="LVM_EDITLABELW">4214</value>
	<value name="LVM_GETBKIMAGEW">4235</value>
	<value name="LVM_SETSELECTEDCOLUMN">4236</value>
	<value name="LVM_SETTILEWIDTH">4237</value>
	<value name="LVM_SETVIEW">4238</value>
	<value name="LVM_GETVIEW">4239</value>
	<value name="LVM_INSERTGROUP">4241</value>
	<value name="LVM_SETGROUPINFO">4243</value>
	<value name="LVM_GETGROUPINFO">4245</value>
	<value name="LVM_REMOVEGROUP">4246</value>
	<value name="LVM_MOVEGROUP">4247</value>
	<value name="LVM_MOVEITEMTOGROUP">4250</value>
	<value name="LVM_SETGROUPMETRICS">4251</value>
	<value name="LVM_GETGROUPMETRICS">4252</value>
	<value name="LVM_ENABLEGROUPVIEW">4253</value>
	<value name="LVM_SORTGROUPS">4254</value>
	<value name="LVM_INSERTGROUPSORTED">4255</value>
	<value name="LVM_REMOVEALLGROUPS">4256</value>
	<value name="LVM_HASGROUP">4257</value>
	<value name="LVM_SETTILEVIEWINFO">4258</value>
	<value name="LVM_GETTILEVIEWINFO">4259</value>
	<value name="LVM_SETTILEINFO">4260</value>
	<value name="LVM_GETTILEINFO">4261</value>
	<value name="LVM_SETINSERTMARK">4262</value>
	<value name="LVM_GETINSERTMARK">4263</value>
	<value name="LVM_INSERTMARKHITTEST">4264</value>
	<value name="LVM_GETINSERTMARKRECT">4265</value>
	<value name="LVM_SETINSERTMARKCOLOR">4266</value>
	<value name="LVM_GETINSERTMARKCOLOR">4267</value>
	<value name="LVM_SETINFOTIP">4269</value>
	<value name="LVM_GETSELECTEDCOLUMN">4270</value>
	<value name="LVM_ISGROUPVIEWENABLED">4271</value>
	<value name="LVM_GETOUTLINECOLOR">4272</value>
	<value name="LVM_SETOUTLINECOLOR">4273</value>
	<value name="LVM_CANCELEDITLABEL">4275</value>
	<value name="LVM_MAPINDEXTOID">4276</value>
	<value name="LVM_MAPIDTOINDEX">4277</value>
	<value name="LVM_ISITEMVISIBLE">4278</value>
	<value name="OCM__BASE">8192</value>
	<value name="LVM_SETUNICODEFORMAT">8197</value>
	<value name="LVM_GETUNICODEFORMAT">8198</value>
	<value name="OCM_CTLCOLOR">8217</value>
	<value name="OCM_DRAWITEM">8235</value>
	<value name="OCM_MEASUREITEM">8236</value>
	<value name="OCM_DELETEITEM">8237</value>
	<value name="OCM_VKEYTOITEM">8238</value>
	<value name="OCM_CHARTOITEM">8239</value>
	<value name="OCM_COMPAREITEM">8249</value>
	<value name="OCM_NOTIFY">8270</value>
	<value name="OCM_COMMAND">8465</value>
	<value name="OCM_HSCROLL">8468</value>
	<value name="OCM_VSCROLL">8469</value>
	<value name="OCM_CTLCOLORMSGBOX">8498</value>
	<value name="OCM_CTLCOLOREDIT">8499</value>
	<value name="OCM_CTLCOLORLISTBOX">8500</value>
	<value name="OCM_CTLCOLORBTN">8501</value>
	<value name="OCM_CTLCOLORDLG">8502</value>
	<value name="OCM_CTLCOLORSCROLLBAR">8503</value>
	<value name="OCM_CTLCOLORSTATIC">8504</value>
	<value name="OCM_PARENTNOTIFY">8720</value>
	<value name="WM_APP">32768</value>
	<value name="WM_RASDIALEVENT">52429</value>
  </context>
  
  
  
  <!-- BEGIN HOOKS -->
  

  <!-- Begin GDI functions -->
  
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="TextOut">gdi32.dll!TextOutW</function>
    <group>gdi</group>
    <functionString>BOOL TextOut(HDC hdc, int nXStart, int nYStart, LPCTSTR lpString, int cchString)</functionString>
    <param index="3" helpString="lpString">
      <match />
    </param>
  </hook>

  <!-- End GDI functions -->
  
  <!-- Begin Graphic text functions -->
  
  <hook before="true">
    <return>UINT</return>
    <function displayName="CreateCompatibleDC">gdi32.dll!CreateCompatibleDC</function>
    <group>user32 text</group>
    <functionString>HDC CreateCompatibleDC(HDC hdc)</functionString>
    <param index="0" type="HDC" helpString="likeHdc">
      <match />
    </param>
  </hook>
  
  <hook before="true">
    <return>INT</return>
    <function displayName="DrawText">user32.dll!DrawTextW</function>
    <group>user32 text</group>
    <functionString>int DrawText(HDC hdc, LPCTSTR lpchText, int nCount, LPRECT lpRect, UINT uFormat)</functionString>
    <param index="1" helpString="lpchText">
      <match />
    </param>
    <param index="3" pointer="true">
      <param index="0" type="LONG" helpString="left" />
	    <match />
    </param>
    <param index="3" pointer="true">
      <param index="1" type="LONG" helpString="top" />
	    <match />
    </param>
    <param index="3" pointer="true">
      <param index="2" type="LONG" helpString="right" />
	    <match />
    </param>
    <param index="3" pointer="true">
      <param index="3" type="LONG" helpString="bottom" />
	    <match />
    </param>
    <param index="0" type="HDC" helpString="hdc">
	    <match />
    </param>
  </hook>
  
  <hook before="true">
    <return>INT</return>
    <function displayName="DrawIcon">user32.dll!DrawIcon</function>
    <group>user32 text</group>
    <functionString>BOOL DrawIcon(HDC hDC, int X, int Y, HICON hIcon)</functionString>
    <param index="0" type="HDC" helpString="hdc">
      <match />
    </param>
    <param index="3" type="HICON" helpString="hIcon">
      <match />
    </param>
    <param index="1" type="int" helpString="X">
      <match />
    </param>
    <param index="2" type="int" helpString="Y">
      <match />
    </param>
  </hook>
  
  <!-- <hook before="true">
    <return>int</return>
    <function displayName="BitBlt">gdi32.dll!BitBlt</function>
    <group>user32 text</group>
    <functionString>BOOL BitBlt(HDC hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, HDC hdcSrc, int nXSrc, int nYSrc, DWORD dwRop)</functionString>
    <param index="0" type="HDC" helpString="hdcDest">
      <match />
    </param>
    <param index="3" type="HICON" helpString="hIcon">
      <match />
    </param>
    <param index="1" type="int" helpString="X">
      <match />
    </param>
    <param index="2" type="int" helpString="Y">
      <match />
    </param>
  </hook>-->
  
  <!--
  <hook before="true">
    <return>INT</return>
    <function displayName="SetDIBits">gdi32.dll!SetDIBits</function>
    <group>user32 text</group>
    <functionString>int SetDIBits(HDC hdc, HBITMAP hbmp, UINT uStartScan, UINT cScanLines, const VOID *lpvBits, const BITMAPINFO *lpbmi, UINT fuColorUse)</functionString>
    <param index="0" type="HDC" helpString="hdc">
      <match />
    </param>
    <param index="1" type="HBITMAP" helpString="hbmp">
      <match />
    </param>
    <param index="5" pointer="true">
      <param index="0" type="BITMAPINFOHEADER" helpString="bmiHeader">
        <param index="1" type="LONG" helpString="biWidth">
          <match />
        </param>
        <param index="2" type="LONG" helpString="biHeight">
          <match />
        </param>
        <param index="5" type="DWORD" helpString="biCompression">
          <match />
        </param>
      </param>
    </param>
  </hook>
  
  <hook before="true">
    <return>INT</return>
    <function displayName="SetDIBitsToDevice">gdi32.dll!SetDIBitsToDevice</function>
    <group>user32 text</group>
    <functionString>int SetDIBitsToDevice(HDC hdc, int XDest, int YDest, DWORD dwWidth, DWORD dwHeight, int XSrc, int YSrc, UINT uStartScan, UINT cScanLines, const VOID *lpvBits, const BITMAPINFO *lpbmi, UINT fuColorUse)</functionString>
    <param index="0" type="HDC" helpString="hdc">
      <match />
    </param>
    <param index="1" type="int" helpString="XDest">
      <match />
    </param>
    <param index="2" type="int" helpString="YDest">
      <match />
    </param>
    <param index="3" type="DWORD" helpString="dwWidth">
      <match />
    </param>
    <param index="4" type="DWORD" helpString="dwHeight">
      <match />
    </param>
    <param index="5" type="int" helpString="XSrc">
      <match />
    </param>
    <param index="6" type="int" helpString="YSrc">
      <match />
    </param>
    <param index="10" pointer="true">
      <param index="0" type="BITMAPINFOHEADER" helpString="bmiHeader">
        <param index="1" type="LONG" helpString="biWidth">
          <match />
        </param>
        <param index="2" type="LONG" helpString="biHeight">
          <match />
        </param>
        <param index="5" type="DWORD" helpString="biCompression">
          <match />
        </param>
      </param>
    </param>
  </hook>
  -->
  
  <hook before="true">
    <return>UINT</return>
    <function displayName="LoadImage unicode">user32.dll!LoadImageW</function>
    <group>user32 text</group>
    <functionString>HANDLE WINAPI LoadImage(_In_opt_ HINSTANCE hinst, _In_ LPCTSTR lpszName, _In_ UINT uType, _In_ int cxDesired, _In_ int cyDesired, _In_ UINT fuLoad)</functionString>
    <param index="1" helpString="lpszName">
      <match />
    </param>
    <param index="2" type="UINT" helpString="uType">
      <match />
    </param>
    <param index="3" type="INT" helpString="cxDesired">
      <match />
    </param>
    <param index="4" type="INT" helpString="cyDesired">
      <match />
    </param>
    <param index="5" type="UINT" helpString="fuLoad">
      <match />
    </param>
  </hook>
  
  <hook before="true">
    <return>UINT</return>
    <function displayName="LoadImage ansi">user32.dll!LoadImageA</function>
    <group>user32 text</group>
    <functionString>HANDLE WINAPI LoadImage(_In_opt_ HINSTANCE hinst, _In_ LPCTSTR lpszName, _In_ UINT uType, _In_ int cxDesired, _In_ int cyDesired, _In_ UINT fuLoad)</functionString>
    <param index="1" helpString="lpszName">
      <match />
    </param>
    <param index="2" type="UINT" helpString="uType">
      <match />
    </param>
    <param index="3" type="INT" helpString="cxDesired">
      <match />
    </param>
    <param index="4" type="INT" helpString="cyDesired">
      <match />
    </param>
    <param index="5" type="UINT" helpString="fuLoad">
      <match />
    </param>
  </hook>
  
  <hook before="true">
    <return>INT</return>
    <function displayName="ReleaseDC">user32.dll!ReleaseDC</function>
    <group>user32 text</group>
    <functionString>int ReleaseDC(HWND hWnd, HDC  hDC)</functionString>
    <param index="1" type="HDC" helpString="hdc">
      <match />
    </param>
    <param index="0" type="HWND" helpString="hwnd">
      <match />
    </param>
  </hook>
  
  <hook before="true">
    <return>BOOL</return>
    <function displayName="DeleteDC">gdi32.dll!DeleteDC</function>
    <group>user32 text</group>
    <functionString>BOOL DeleteDC(HDC hdc)</functionString>
    <param index="0" type="HDC" helpString="hdc">
      <match />
    </param>
  </hook>
  

  <!-- End Graphic text functions -->
  
  
  <hook before="false" priority="5">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtFlushKey(HANDLE KeyHandle)</functionString>
    <function displayName="FlushKey">ntdll.dll!NtFlushKey</function>
    <group>registry</group>
    <param context="HKEY" index="0" helpString="hKey">
      <match />
    </param>
  </hook>
  <hook before="false" priority="5" force="true">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtLoadKey(POBJECT_ATTRIBUTES DestinationKeyName, POBJECT_ATTRIBUTES HiveFileName)</functionString>
    <function displayName="LoadKey">ntdll.dll!NtLoadKey</function>
    <group>registry</group>
  </hook>
  <hook before="false" priority="5" force="true">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtLoadKey2(POBJECT_ATTRIBUTES DestinationKeyName, POBJECT_ATTRIBUTES HiveFileName, ULONG Flags)</functionString>
    <function displayName="LoadKey2">ntdll.dll!NtLoadKey2</function>
    <group>registry</group>
  </hook>
  <hook before="false" priority="5" force="true">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS __stdcall NtLoadKeyEx(POBJECT_ATTRIBUTES TargetKey, POBJECT_ATTRIBUTES SourceFile, ULONG Flags, HANDLE TrustClassKey)</functionString>
    <function displayName="LoadKeyEx">ntdll.dll!NtLoadKeyEx</function>
    <group>registry</group>
  </hook>
  <hook before="false" priority="5" force="true">
    <return>NTSTATUS</return>
    <functionString>NTSYSAPI NTSTATUS NTAPI NtUnloadKey(POBJECT_ATTRIBUTES DestinationKeyName)</functionString>
    <function displayName="UnloadKey">ntdll.dll!NtUnloadKey</function>
    <group>registry</group>
  </hook>
  <hook before="false" priority="5" force="true">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtUnloadKey2(POBJECT_ATTRIBUTES DestinationKeyName, ULONG Flags)</functionString>
    <function displayName="NtUnloadKey2">ntdll.dll!NtUnloadKey2</function>
    <group>registry</group>
  </hook>
  <hook before="false" priority="5" force="true">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS __stdcall NtUnloadKeyEx(POBJECT_ATTRIBUTES TargetKey, ULONG Flags, HANDLE TrustClassKey)</functionString>
    <function displayName="UnloadKeyEx">ntdll.dll!NtUnloadKeyEx</function>
    <group>registry</group>
  </hook>
  <hook before="false" priority="5">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtNotifyChangeKey(HANDLE KeyHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, 
    PIO_STATUS_BLOCK IoStatusBlock, ULONG CompletionFilter, BOOLEAN WatchTree, PVOID Buffer, ULONG BufferSize, BOOLEAN Asynchronous)
    </functionString>
    <function displayName="NotifyChangeKey">ntdll.dll!NtNotifyChangeKey</function>
    <group>registry</group>
    <param context="HKEY" index="0" helpString="hKey">
      <match />
    </param>        
    <param index="5" helpString="CompletionFilter">
      <match />
    </param>
  </hook>
  <hook before="false" priority="5">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtNotifyChangeMultipleKeys(HANDLE MasterKeyHandle, ULONG Count, POBJECT_ATTRIBUTES SubordinateObjects, HANDLE Event, 
    PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG CompletionFilter, BOOLEAN WatchTree, PVOID Buffer, 
    ULONG BufferSize, BOOLEAN Asynchronous)
    </functionString>
    <function displayName="NotifyChangeMultipleKeys">ntdll.dll!NtNotifyChangeMultipleKeys</function>
    <group>registry</group>
    <param context="HKEY" index="0" helpString="MasterKeyHandle">
      <match />
    </param>
    <param index="1" helpString="Count">
      <match />
    </param>
    <param index="8" helpString="WatchTree">
      <match />
    </param>
  </hook>
  <hook before="false" priority="5">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtDuplicateObject(HANDLE SourceProcessHandle, HANDLE SourceHandle, HANDLE TargetProcessHandle, PHANDLE TargetHandle, ACCESS_MASK DesiredAccess, ULONG HandleAttributes, ULONG Options)</functionString>
    <function displayName="DuplicateObject">ntdll.dll!NtDuplicateObject</function>
    <group>handles</group>
    <param context="HANDLE" index="0" helpString="SourceProcessHandle">
      <match />
    </param>        
    <param index="4" context="ACCESS_MASK" helpString="DesiredAccess">
      <match />
    </param>
    <param index="5" helpString="HandleAttributes">
      <match />
    </param>
    <param index="6" helpString="Options">
      <match />
    </param>
  </hook>
  <hook before="false" priority="5">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtQueryObject(HANDLE Handle, OBJECT_INFORMATION_CLASS ObjectInformationClass, PVOID ObjectInformation, ULONG ObjectInformationLength, PULONG ReturnLength)</functionString>
    <function displayName="QueryObject">ntdll.dll!NtQueryObject</function>
    <group>handles</group>
    <param context="HANDLE" index="0" helpString="Handle">
      <match />
    </param>        
    <param index="1" context="OBJECT_INFORMATION_CLASS" helpString="ObjectInformationClass">
      <match />
    </param>
  </hook>
  <hook before="false" priority="5">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NTAPI NtNotifyChangeDirectoryFile(HANDLE FileHandle, HANDLE Event OPTIONAL, PIO_APC_ROUTINE ApcRoutine OPTIONAL, 
    PVOID ApcContext OPTIONAL, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG BufferSize, ULONG CompletionFilter, BOOLEAN WatchTree )</functionString>
    <function displayName="NotifyChangeDirectoryFile">ntdll.dll!NtNotifyChangeDirectoryFile</function>
    <group>Files</group>
    <param context="HFILE" index="0" helpString="Path">
      <match />
    </param>        
    <param index="8" helpString="WatchTree">
      <match />
    </param>
  </hook>
  <hook before="false" priority="5">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtSetInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass)</functionString>
    <function displayName="SetInformationFile">ntdll.dll!NtSetInformationFile</function>
    <group>Files</group>
    <param context="HFILE" index="0" helpString="Path" onlyFilename="True">
      <match />
    </param>
    <param index="4" helpString="FileInformationClass">
      <match />
    </param>
  </hook>
  <hook before="false" priority="5" hook="false">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NTAPI NtQueryAttributesFile(IN POBJECT_ATTRIBUTES ObjectAttributes, 
    OUT PFILE_BASIC_INFORMATION FileAttributes )</functionString>
    <function displayName="QueryAttributesFile">ntdll.dll!NtQueryAttributesFile</function>
    <group>Files</group>
    <param context="FILE_POBJECT_ATTRIBUTES" index="0" helpString="Path">
      <match onlyFilename="True"/>
    </param>
  </hook>
  <hook before="false" priority="5" hook="false">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NTAPI ZwQueryAttributesFile(IN POBJECT_ATTRIBUTES ObjectAttributes, 
    OUT PFILE_BASIC_INFORMATION FileAttributes )</functionString>
    <function displayName="QueryAttributesFile">ntdll.dll!ZwQueryAttributesFile</function>
    <group>Files</group>
    <param context="FILE_POBJECT_ATTRIBUTES" index="0" helpString="Path">
      <match onlyFilename="True"/>
    </param>
  </hook>
  <hook before="false" priority="5" hook="false">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS NtCreateDirectoryObject(PHANDLE DirectoryHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes)</functionString>
    <function displayName="CreateDirectoryObject">ntdll.dll!NtCreateDirectoryObject</function>
    <group>Files</group>
    <param context="FILE_POBJECT_ATTRIBUTES" index="2" helpString="Path">
      <match />
    </param>
    <param context="HANDLE" index="0" pointer="true" helpString="HandlePath" result="true">
      <match />
    </param>
  </hook>
  <hook before="false" priority="5">
    <return>NTSTATUS</return>
    <functionString>NTSTATUS ZwQueryInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, 
    FILE_INFORMATION_CLASS FileInformationClass)</functionString>
    <function displayName="QueryInformationFile">ntdll.dll!NtQueryInformationFile</function>
    <group>Files</group>
    <param context="HFILE" index="0" helpString="Path">
      <match onlyFilename="true" />
    </param>
    <param index="4" helpString="FileInformationClass" context="FileInformationClass">
      <match />
    </param>
  </hook>
  
  
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetWindowSubclass">Comctl32.dll!SetWindowSubclass</function>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>BOOL</return>
    <function displayName="ShowWindow">user32.dll!ShowWindow</function>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" type="DWORD" context="SW_CONSTANTS" helpString="nCmdShow">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetWindowPos">user32.dll!SetWindowPos</function>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="2" helpString="X">
      <match />
    </param>
    <param index="3" helpString="Y">
      <match />
    </param>
    <param index="6" type="DWORD" context="SWP_CONSTANTS" helpString="uFlags">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetWindowPlacement">user32.dll!SetWindowPlacement</function>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" pointer="true">
      <param index="1" type="UINT" helpString="Flags">
      </param>
	  <match />
    </param>
    <param index="1" pointer="true">
      <param index="2" type="UINT" helpString="ShowCmd">
      </param>
	  <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="MoveWindow">user32.dll!MoveWindow</function>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="X">
      <match />
    </param>
    <param index="2" helpString="Y">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="DeferWindowPos">user32.dll!DeferWindowPos</function>
    <group>windows Properties</group>
    <param context="HWND" index="1" helpString="hWnd">
      <match />
    </param>
    <param index="3" helpString="x">
      <match />
    </param>
    <param index="4" helpString="y">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetWindowLongA">user32.dll!SetWindowLongA</function>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="nIndex">
      <match />
    </param>
    <param index="2" helpString="dwNewLong">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetWindowLongW">user32.dll!SetWindowLongW</function>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="nIndex">
      <match />
    </param>
    <param index="2" helpString="dwNewLong">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetWindowLongPtrA">user32.dll!SetWindowLongPtrA</function>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="nIndex">
      <match />
    </param>
    <param index="2" helpString="dwNewLong">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetWindowLongPtrW">user32.dll!SetWindowLongPtrW</function>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="nIndex">
      <match />
    </param>
    <param index="2" helpString="dwNewLong">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="AnimateWindow">user32.dll!AnimateWindow</function>
    <functionString>BOOL WINAPI AnimateWindow(HWND hwnd, DWORD dwTime, DWORD dwFlags)</functionString>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="2" type="DWORD" context="AW_CONSTANTS" helpString="dwFlags">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="RegisterClass">user32.dll!RegisterClass</function>
    <functionString>ATOM WINAPI RegisterClass(const WNDCLASS *lpWndClass)</functionString>
    <group>windows Creation</group>
    <param index="0" pointer="true">
      <param index="9" context="CLASSNAME" helpString="ClassName">
      </param>
	  <match />
    </param>
    <param index="0" pointer="true" >
      <param index="1" type="LPVOID" context="ADDRESS" helpString="WndProc" />
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="1" type="LPVOID" helpString="WndProcAddress" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="RegisterClassEx">user32.dll!RegisterClassEx</function>
    <functionString>ATOM WINAPI RegisterClassEx(const WNDCLASSEX *lpWndClass)</functionString>
    <group>windows Creation</group>
    <param index="0" pointer="true">
      <param index="10" context="CLASSNAME" helpString="ClassName">
      </param>
	  <match />
    </param>
    <param index="0" pointer="true">
      <param index="2" type="LPVOID" context="ADDRESS" helpString="WndProc">
	  </param>
	  <match />
    </param>
    <param index="0" pointer="true">
      <param index="2" type="LPVOID" helpString="WndProcAddress" />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>BOOL</return>
    <function displayName="GetWindowText">user32.dll!GetWindowText</function>
    <functionString>int WINAPI GetWindowText(HWND hWnd, LPTSTR lpString, int nMaxCount)</functionString>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="lpString">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetWindowText">user32.dll!SetWindowText</function>
    <functionString>BOOL WINAPI SetWindowText(HWND hWnd, LPTSTR lpString)</functionString>
    <group>windows Properties</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="lpString">
      <match />
    </param>
  </hook>
  <hook before="true" priority="2">
    <return>BOOL</return>
    <function displayName="CloseWindow">user32.dll!CloseWindow</function>
    <functionString>BOOL WINAPI CloseWindow(HWND hWnd)</functionString>
    <group>windows Creation</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="2" paramsBefore="true" paramsAfter="false">
    <return>BOOL</return>
    <function displayName="DestroyWindow">user32.dll!DestroyWindow</function>
    <functionString>BOOL WINAPI DestroyWindow(HWND hWnd)</functionString>
    <group>windows Creation</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
  </hook>
  <hook priority="4">
    <return>INT</return>
    <function displayName="SendMessage">user32.dll!SendMessage</function>
    <group>windows Messages</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" context="MSGCODE" helpString="Msg">
      <match />
    </param>
  </hook>
  <hook priority="4">
    <return>BOOL</return>
    <function displayName="PostMessage">user32.dll!PostMessage</function>
    <group>windows Messages</group>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" context="MSGCODE" helpString="Msg">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>INT</return>
    <function displayName="DispatchMessage">user32.dll!DispatchMessage</function>
    <functionString>LRESULT WINAPI DispatchMessage(const MSG *lpmsg)</functionString>
    <group>windows Messages</group>
    <param index="0" pointer="true">
      <param context="HWND" index="0" helpString="hWnd"/>
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="1" context="MSGCODE" helpString="Code"/>
      <match />
    </param>
  </hook>
  <hook hook="false" priority="3">
    <function displayName="LoadResource"/>
    <param>
      <match onlyFilename="true" />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>HRESULT</return>
    <function displayName="PrintDlg">comdlg32.dll!PrintDlgEx</function>
    <group>Common Dialogs</group>
    <param index="0" pointer="true">
      <param index="1" context="HWND" helpString="Owner"/>
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="15" helpString="PrintTemplateName"/>
      <match />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>BOOL</return>
    <function displayName="PrintDlg">comdlg32.dll!PrintDlg</function>
    <group>Common Dialogs</group>
    <param index="0" pointer="true">
      <param index="1" context="HWND" helpString="Owner"/>
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="15" helpString="PrintTemplateName"/>
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="16" helpString="SetupTemplateName"/>
      <match />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>BOOL</return>
    <function displayName="FindText">comdlg32.dll!FindText</function>
    <group>Common Dialogs</group>
    <param index="0" pointer="true">
      <param index="1" context="HWND" helpString="Owner"/>
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="4" helpString="FindWhat"/>
      <match />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>BOOL</return>
    <function displayName="ReplaceText">comdlg32.dll!ReplaceText</function>
    <group>Common Dialogs</group>
    <param index="0" pointer="true">
      <param index="1" context="HWND" helpString="Owner"/>
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="4" helpString="FindWhat"/>
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="5" helpString="ReplaceWith"/>
      <match />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>BOOL</return>
    <function displayName="ChooseColor">comdlg32.dll!ChooseColor</function>
    <group>Common Dialogs</group>
    <param index="0" pointer="true">
      <param index="1" context="HWND" helpString="Owner"/>
      <match />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>BOOL</return>
    <function displayName="ChooseFont">comdlg32.dll!ChooseFont</function>
    <group>Common Dialogs</group>
    <param index="0" pointer="true">
      <param index="1" context="HWND" helpString="Owner"/>
      <match />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>BOOL</return>
    <function displayName="PageSetupDlg">comdlg32.dll!PageSetupDlg</function>
    <group>Common Dialogs</group>
    <param index="0" pointer="true">
      <param index="1" context="HWND" helpString="Owner"/>
      <match />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>HRESULT</return>
    <function displayName="GetFileTitle">comdlg32.dll!GetFileTitle</function>
    <group>Common Dialogs</group>
    <param index="0">
      <match />
    </param>
    <param index="1" result="true" helpString="Title">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>BOOL</return>
    <function displayName="GetOpenFileName">comdlg32.dll!GetOpenFileName</function>
    <group>Common Dialogs</group>
    <param index="0" pointer="true">
      <param index="1" context="HWND" helpString="Owner" />
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="7" helpString="File" />
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="9" helpString="Title" />
      <match />
    </param>
  </hook>
  <hook before="true" priority="1">
    <return>BOOL</return>
    <function displayName="GetSaveFileName">comdlg32.dll!GetSaveFileName</function>
    <group>Common Dialogs</group>
    <param index="0" pointer="true">
      <param index="1" context="HWND" helpString="Owner" />
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="7" helpString="File" />
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="9" helpString="Title" />
      <match />
    </param>
  </hook>
  <!-- Begin Urlmon.dll  -->
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="AsyncInstallDistributionUnit">urlmon.dll!AsyncInstallDistributionUnit</function>
    <group>internet helpers</group>
    <functionString>AsyncInstallDistributionUnit(LPCWSTR szDistUnit, LPCWSTR szTYPE, LPCWSTR szExt, DWORD dwFileVersionMS, DWORD dwFileVersionLS, LPCWSTR szURL, IBindCtx* pbc, LPVOID pvReserved, DWORD flags)</functionString>
    <param index="0" helpString="szDistUnit">
      <match />
    </param>
    <param index="1" helpString="szTYPE">
      <match />
    </param>
    <param index="2" helpString="szExt">
      <match />
    </param>
    <param index="5" helpString="szURL">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CoGetClassObjectFromURL">urlmon.dll!CoGetClassObjectFromURL</function>
    <group>internet helpers</group>
    <functionString>CoGetClassObjectFromURL(IID* rCLASSID, LPCWSTR szCODE, DWORD dwFileVersionMS, DWORD dwFileVersionLS, LPCWSTR szTYPE, LPBINDCTX pBindCtx, DWORD dwClsContext, LPVOID pvReserved, IID* riid, LPVOID* ppv)</functionString>
    <param context="IID" pointer="true" index="0" helpString="rCLASSID">
      <match />
    </param>
    <param index="1" helpString="szCODE">
      <match />
    </param>
    <param index="4" helpString="szTYPE">
      <match />
    </param>
    <param context="IID" pointer="true" index="8" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CoInstall">urlmon.dll!CoInstall</function>
    <group>internet helpers</group>
    <functionString>CoInstall(IBindCtx* pbc, DWORD dwFlags, uCLSSPEC* pClassSpec, QUERYCONTEXT* pQuery, LPWSTR pszCodeBase)</functionString>
    <param index="4" helpString="pszCodeBase">
      <match />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetCombineIUri">urlmon.dll!CoInternetCombineIUri</function>
    <group>internet helpers</group>
    <functionString>CoInternetCombineIUri(IUri* pBaseUri, IUri* pRelativeUri, DWORD dwCombineFlags, IUri** ppCombinedUri, DWORD_PTR dwReserved)</functionString>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetCombineUrl">urlmon.dll!CoInternetCombineUrl</function>
    <group>internet helpers</group>
    <functionString>CoInternetCombineUrl(LPCWSTR pwzBaseUrl, LPCWSTR pwzRelativeUrl, DWORD dwCombineFlags, LPWSTR pszResult, DWORD cchResult, DWORD* pcchResult, DWORD dwReserved)</functionString>
    <param index="0" helpString="pwzBaseUrl">
      <match />
    </param>
    <param index="1" helpString="pwzRelativeUrl">
      <match />
    </param>
    <param index="3" result="true" helpString="pszResult">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetCombineUrlEx">urlmon.dll!CoInternetCombineUrlEx</function>
    <group>internet helpers</group>
    <functionString>CoInternetCombineUrlEx(IUri* pBaseUri, LPCWSTR pwzRelativeUrl, DWORD dwCombineFlags, IUri** ppCombinedUri, DWORD_PTR dwReserved)</functionString>
    <param index="1" helpString="pwzRelativeUrl">
      <match />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetCompareUrl">urlmon.dll!CoInternetCompareUrl</function>
    <group>internet helpers</group>
    <functionString>CoInternetCompareUrl(LPCWSTR pwzUrl1, LPCWSTR pwzUrl2, DWORD dwFlags)</functionString>
    <param index="0" helpString="pwzUrl1">
      <match />
    </param>
    <param index="1" helpString="pwzUrl2">
      <match />
    </param>
    <param index="2" helpString="dwFlags">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CoInternetCreateSecurityManager">urlmon.dll!CoInternetCreateSecurityManager</function>
    <group>internet helpers</group>
    <functionString>CoInternetCreateSecurityManager(IServiceProvider* pSP, IInternetSecurityManager** ppSM, DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CoInternetCreateZoneManager">urlmon.dll!CoInternetCreateZoneManager</function>
    <group>internet helpers</group>
    <functionString>CoInternetCreateZoneManager(IServiceProvider* pSP, IInternetZoneManager** ppZM, DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CoInternetGetProtocolFlags">urlmon.dll!CoInternetGetProtocolFlags</function>
    <group>internet helpers</group>
    <functionString>CoInternetGetProtocolFlags(LPCWSTR pwzUrl, DWORD* pdwFlags, DWORD dwReserved)</functionString>
    <param index="0" helpString="pwzUrl">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CoInternetGetSecurityUrl">urlmon.dll!CoInternetGetSecurityUrl</function>
    <group>internet helpers</group>
    <functionString>CoInternetGetSecurityUrl(LPCWSTR pwszUrl, LPWSTR* ppwszSecUrl, PSUACTION psuAction, DWORD dwReserved)</functionString>
    <param index="0" helpString="pwszUrl">
      <match />
    </param>
    <param pointer="true" index="1" helpString="ppwszSecUrl">
      <match />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetGetSecurityUrlEx">urlmon.dll!CoInternetGetSecurityUrlEx</function>
    <group>internet helpers</group>
    <functionString>CoInternetGetSecurityUrlEx(IUri* pUri, IUri** ppSecUri, PSUACTION psuAction, DWORD_PTR dwReserved)</functionString>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetGetSession">urlmon.dll!CoInternetGetSession</function>
    <group>internet helpers</group>
    <functionString>CoInternetGetSession(DWORD dwSessionMode, IInternetSession** ppIInternetSession, DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetIsFeatureEnabled">urlmon.dll!CoInternetIsFeatureEnabled</function>
    <group>internet helpers</group>
    <functionString>CoInternetIsFeatureEnabled(INTERNETFEATURELIST FeatureEntry, DWORD dwFlags)</functionString>
    <param context="INTERNETFEATURELIST" index="0" helpString="FeatureEntry">
      <match />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetIsFeatureEnabledForIUri">urlmon.dll!CoInternetIsFeatureEnabledForIUri</function>
    <group>internet helpers</group>
    <functionString>CoInternetIsFeatureEnabledForIUri(INTERNETFEATURELIST FeatureEntry, DWORD dwFlags, IUri* pIUri, IInternetSecurityManagerEx2* pSecMgr)</functionString>
    <param context="INTERNETFEATURELIST" index="0" helpString="FeatureEntry">
      <match />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetIsFeatureEnabledForUrl">urlmon.dll!CoInternetIsFeatureEnabledForUrl</function>
    <group>internet helpers</group>
    <functionString>CoInternetIsFeatureEnabledForUrl(INTERNETFEATURELIST FeatureEntry, DWORD dwFlags, LPCWSTR szURL, IInternetSecurityManager* pSecMgr)</functionString>
    <param context="INTERNETFEATURELIST" index="0" helpString="FeatureEntry">
      <match />
    </param>
    <param index="2" helpString="szURL">
      <match />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CoInternetIsFeatureZoneElevationEnabled">urlmon.dll!CoInternetIsFeatureZoneElevationEnabled</function>
    <group>internet helpers</group>
    <functionString>CoInternetIsFeatureZoneElevationEnabled(LPCWSTR szFromURL, LPCWSTR szToURL, IInternetSecurityManager* pSecMgr, DWORD dwFlags)</functionString>
    <param index="0" helpString="szFromURL">
      <match />
    </param>
    <param index="1" helpString="szToURL">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CoInternetParseIUri">urlmon.dll!CoInternetParseIUri</function>
    <group>internet helpers</group>
    <functionString>CoInternetParseIUri(IUri* pIUri, PARSEACTION ParseAction, DWORD dwFlags, LPWSTR pwzResult, DWORD cchResult, DWORD* pcchResult, DWORD_PTR dwReserved)</functionString>
    <param index="3" helpString="pwzResult">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CoInternetParseUrl">urlmon.dll!CoInternetParseUrl</function>
    <group>internet helpers</group>
    <functionString>CoInternetParseUrl(LPCWSTR pwzUrl, PARSEACTION ParseAction, DWORD dwFlags, LPWSTR pszResult, DWORD cchResult, DWORD* pcchResult, DWORD dwReserved)</functionString>
    <param index="0" helpString="pwzUrl">
      <match />
    </param>
    <param index="3" helpString="pszResult">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CoInternetQueryInfo">urlmon.dll!CoInternetQueryInfo</function>
    <group>internet helpers</group>
    <functionString>CoInternetQueryInfo(LPCWSTR pwzUrl, QUERYOPTION QueryOptions, DWORD dwQueryFlags, LPVOID pvBuffer, DWORD cbBuffer, DWORD* pcbBuffer, DWORD dwReserved)</functionString>
    <param index="0" helpString="pwzUrl">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CoInternetSetFeatureEnabled">urlmon.dll!CoInternetSetFeatureEnabled</function>
    <group>internet helpers</group>
    <functionString>CoInternetSetFeatureEnabled(INTERNETFEATURELIST FeatureEntry, DWORD dwFlags, BOOL fEnable)</functionString>
    <param context="INTERNETFEATURELIST" index="0" helpString="FeatureEntry">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CompareSecurityIds">urlmon.dll!CompareSecurityIds</function>
    <group>internet helpers</group>
    <functionString>CompareSecurityIds(BYTE* pbSecurityId1, DWORD dwLen1, BYTE* pbSecurityId2, DWORD dwLen2, DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CompatFlagsFromClsid">urlmon.dll!CompatFlagsFromClsid</function>
    <group>internet helpers</group>
    <functionString>CompatFlagsFromClsid(CLSID* pclsid, LPDWORD pdwCompatFlags, LPDWORD pdwMiscStatusFlags)</functionString>
    <param context="IID" pointer="true" index="0" helpString="pclsid">
      <match />
    </param>
    <param pointer="true" index="1" helpString="pdwCompatFlags">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CopyBindInfo">urlmon.dll!CopyBindInfo</function>
    <group>internet helpers</group>
    <functionString>CopyBindInfo(BINDINFO* pcbiSrc, BINDINFO* pbiDest)</functionString>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CopyStgMedium">urlmon.dll!CopyStgMedium</function>
    <group>internet helpers</group>
    <functionString>CopyStgMedium(STGMEDIUM* pcstgmedSrc, STGMEDIUM* pstgmedDest)</functionString>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CreateAsyncBindCtx">urlmon.dll!CreateAsyncBindCtx</function>
    <group>internet helpers</group>
    <functionString>CreateAsyncBindCtx(DWORD reserved, IBindStatusCallback* pBSCb, IEnumFORMATETC* pEFetc, IBindCtx** ppBC)</functionString>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CreateAsyncBindCtxEx">urlmon.dll!CreateAsyncBindCtxEx</function>
    <group>internet helpers</group>
    <functionString>CreateAsyncBindCtxEx(IBindCtx* pbc, DWORD dwOptions, IBindStatusCallback* pBSCb, IEnumFORMATETC* pEnum, IBindCtx** ppBC, DWORD reserved)</functionString>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="CreateFormatEnumerator">urlmon.dll!CreateFormatEnumerator</function>
    <group>internet helpers</group>
    <functionString>CreateFormatEnumerator(UINT cfmtetc, FORMATETC* rgfmtetc, IEnumFORMATETC** ppenumfmtetc)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CreateIUriBuilder">urlmon.dll!CreateIUriBuilder</function>
    <group>internet helpers</group>
    <functionString>CreateIUriBuilder(IUri* pIUri, DWORD dwFlags, DWORD_PTR dwReserved, IUriBuilder** ppIUriBuilder)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CreateURLMoniker">urlmon.dll!CreateURLMoniker</function>
    <group>internet helpers</group>
    <functionString>CreateURLMoniker(LPMONIKER pMkCtx, LPCWSTR szURL, LPMONIKER* ppmk)</functionString>
    <param index="1" helpString="szURL">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CreateURLMonikerEx">urlmon.dll!CreateURLMonikerEx</function>
    <group>internet helpers</group>
    <functionString>CreateURLMonikerEx(LPMONIKER pMkCtx, LPCWSTR szURL, LPMONIKER* ppmk, DWORD dwFlags)</functionString>
    <param index="1" helpString="szURL">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CreateURLMonikerEx2">urlmon.dll!CreateURLMonikerEx2</function>
    <group>internet helpers</group>
    <functionString>CreateURLMonikerEx2(LPMONIKER pMkCtx, IUri* pUri, LPMONIKER* ppmk, DWORD dwFlags)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CreateUri">urlmon.dll!CreateUri</function>
    <group>internet helpers</group>
    <functionString>CreateUri(LPCWSTR pwzURI, DWORD dwFlags, DWORD_PTR dwReserved, IUri** ppURI)</functionString>
    <param index="0" helpString="pwzURI">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CreateUriFromMultiByteString">urlmon.dll!CreateUriFromMultiByteString</function>
    <group>internet helpers</group>
    <functionString>CreateUriFromMultiByteString(LPCSTR pszANSIInputUri, DWORD dwEncodingFlags, DWORD dwCodePage, DWORD dwCreateFlags, DWORD_PTR dwReserved, IUri** ppUri)</functionString>
    <param index="0" helpString="pszANSIInputUri">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="CreateUriWithFragment">urlmon.dll!CreateUriWithFragment</function>
    <group>internet helpers</group>
    <functionString>CreateUriWithFragment(LPCWSTR pwzURI, LPCWSTR pwzFragment, DWORD dwFlags, DWORD_PTR dwReserved, IUri** ppURI)</functionString>
    <param index="0" helpString="pwzURI">
      <match />
    </param>
    <param index="1" helpString="pwzFragment">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="DllCanUnloadNow">urlmon.dll!DllCanUnloadNow</function>
    <group>internet helpers</group>
    <functionString>DllCanUnloadNow()</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="DllInstall">urlmon.dll!DllInstall</function>
    <group>internet helpers</group>
    <functionString>DllInstall(BOOL bInstall, LPCWSTR pszCmdLine)</functionString>
    <param index="1" helpString="pszCmdLine">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="FaultInIEFeature">urlmon.dll!FaultInIEFeature</function>
    <group>internet helpers</group>
    <functionString>FaultInIEFeature(HWND hWnd, uCLSSPEC* pClassSpec, QUERYCONTEXT* pQuery, DWORD dwFlags)</functionString>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="FindMediaType">urlmon.dll!FindMediaType</function>
    <group>internet helpers</group>
    <functionString>FindMediaType(LPCSTR rgszTypes, CLIPFORMAT* rgcfTypes)</functionString>
    <param index="0" helpString="rgszTypes">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="FindMediaTypeClass">urlmon.dll!FindMediaTypeClass</function>
    <group>internet helpers</group>
    <functionString>FindMediaTypeClass(LPBC pBC, LPCSTR szType, CLSID* pclsID, DWORD reserved)</functionString>
    <param index="1" helpString="szType">
      <match />
    </param>
    <param context="IID" pointer="true" index="2" helpString="pclsID">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="FindMimeFromData">urlmon.dll!FindMimeFromData</function>
    <group>internet helpers</group>
    <functionString>FindMimeFromData(LPBC pBC, LPCWSTR pwzUrl, LPVOID pBuffer, DWORD cbSize, LPCWSTR pwzMimeProposed, DWORD dwMimeFlags, LPWSTR* ppwzMimeOut, DWORD dwReserved)</functionString>
    <param index="1" helpString="pwzUrl">
      <match />
    </param>
    <param index="4" helpString="pwzMimeProposed">
      <match />
    </param>
    <param pointer="true" index="6" result="true" helpString="ppwzMimeOut">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="GetClassFileOrMime">urlmon.dll!GetClassFileOrMime</function>
    <group>internet helpers</group>
    <functionString>GetClassFileOrMime(LPBC pBC, LPCWSTR szFilename, LPVOID pBuffer, DWORD cbSize, LPCWSTR szMime, DWORD dwReserved, CLSID* pclsid)</functionString>
    <param index="1" helpString="szFilename">
      <match />
    </param>
    <param index="4" helpString="szMime">
      <match result="true" />
    </param>
    <param context="IID" pointer="true" index="6" helpString="pclsid">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="GetClassURL">urlmon.dll!GetClassURL</function>
    <group>internet helpers</group>
    <functionString>GetClassURL(LPCWSTR szURL, CLSID* pClsID)</functionString>
    <param index="0" helpString="szURL">
      <match />
    </param>
    <param context="IID" pointer="true" index="1" helpString="pClsID">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="GetComponentIDFromCLSSPEC">urlmon.dll!GetComponentIDFromCLSSPEC</function>
    <group>internet helpers</group>
    <functionString>GetComponentIDFromCLSSPEC(uCLSSPEC* pClassspec, LPSTR* ppszComponentID)</functionString>
    <param pointer="true" index="1" result="true" helpString="ppszComponentID">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="GetSoftwareUpdateInfo">urlmon.dll!GetSoftwareUpdateInfo</function>
    <group>internet helpers</group>
    <functionString>GetSoftwareUpdateInfo(LPCWSTR szDistUnit, LPSOFTDISTINFO psdi)</functionString>
    <param index="0" helpString="szDistUnit">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="HlinkGoBack">urlmon.dll!HlinkGoBack</function>
    <group>internet helpers</group>
    <functionString>HlinkGoBack(IUnknown* pUnk)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="HlinkGoForward">urlmon.dll!HlinkGoForward</function>
    <group>internet helpers</group>
    <functionString>HlinkGoForward(IUnknown* pUnk)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="HlinkNavigateMoniker">urlmon.dll!HlinkNavigateMoniker</function>
    <group>internet helpers</group>
    <functionString>HlinkNavigateMoniker(IUnknown* pUnk, IMoniker* pmkTarget)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="HlinkNavigateString">urlmon.dll!HlinkNavigateString</function>
    <group>internet helpers</group>
    <functionString>HlinkNavigateString(IUnknown* pUnk, LPCWSTR szTarget)</functionString>
    <param index="1" helpString="szTarget">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="HlinkSimpleNavigateToMoniker">urlmon.dll!HlinkSimpleNavigateToMoniker</function>
    <group>internet helpers</group>
    <functionString>HlinkSimpleNavigateToMoniker(IMoniker* pmkTarget, LPCWSTR szLocation, LPCWSTR szTargetFrameName, IUnknown* pUnk, IBindCtx* pbc, IBindStatusCallback* _3851, DWORD grfHLNF, DWORD dwReserved)</functionString>
    <param index="1" helpString="szLocation">
      <match />
    </param>
    <param index="2" helpString="szTargetFrameName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="HlinkSimpleNavigateToString">urlmon.dll!HlinkSimpleNavigateToString</function>
    <group>internet helpers</group>
    <functionString>HlinkSimpleNavigateToString(LPCWSTR szTarget, LPCWSTR szLocation, LPCWSTR szTargetFrameName, IUnknown* pUnk, IBindCtx* pbc, IBindStatusCallback* _3851, DWORD grfHLNF, DWORD dwReserved)</functionString>
    <param index="0" helpString="szTarget">
      <match />
    </param>
    <param index="1" helpString="szLocation">
      <match />
    </param>
    <param index="2" helpString="szTargetFrameName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="IsAsyncMoniker">urlmon.dll!IsAsyncMoniker</function>
    <group>internet helpers</group>
    <functionString>IsAsyncMoniker(IMoniker* pmk)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="IsLoggingEnabled">urlmon.dll!IsLoggingEnabled</function>
    <group>internet helpers</group>
    <functionString>IsLoggingEnabledA(LPCSTR pszUrl)</functionString>
    <param index="0" helpString="pszUrl">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="IsValidURL">urlmon.dll!IsValidURL</function>
    <group>internet helpers</group>
    <functionString>IsValidURL(LPBC pBC, LPCWSTR szURL, DWORD dwReserved)</functionString>
    <param index="1" helpString="szURL">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="MkParseDisplayNameEx">urlmon.dll!MkParseDisplayNameEx</function>
    <group>internet helpers</group>
    <functionString>MkParseDisplayNameEx(IBindCtx* pbc, LPCWSTR szDisplayName, DWORD* pchEaten, LPMONIKER* ppmk)</functionString>
    <param index="1" helpString="szDisplayName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ObtainUserAgentString">urlmon.dll!ObtainUserAgentString</function>
    <group>internet helpers</group>
    <functionString>ObtainUserAgentString(DWORD dwOption, LPSTR pszUAOut, DWORD* cbSize)</functionString>
    <param index="1" helpString="pszUAOut">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="RegisterBindStatusCallback">urlmon.dll!RegisterBindStatusCallback</function>
    <group>internet helpers</group>
    <functionString>RegisterBindStatusCallback(LPBC pBC, IBindStatusCallback* pBSCb, IBindStatusCallback** ppBSCBPrev, DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="RegisterFormatEnumerator">urlmon.dll!RegisterFormatEnumerator</function>
    <group>internet helpers</group>
    <functionString>RegisterFormatEnumerator(LPBC pBC, IEnumFORMATETC* pEFetc, DWORD reserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="RegisterMediaTypeClass">urlmon.dll!RegisterMediaTypeClass</function>
    <group>internet helpers</group>
    <functionString>RegisterMediaTypeClass(LPBC pBC, UINT ctypes, LPCSTR* rgszTypes, CLSID* rgclsID, DWORD reserved)</functionString>
    <param pointer="true" index="2" helpString="rgszTypes">
      <match />
    </param>
    <param context="IID" pointer="true" index="3" helpString="rgclsID">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="RegisterMediaTypes">urlmon.dll!RegisterMediaTypes</function>
    <group>internet helpers</group>
    <functionString>RegisterMediaTypes(UINT ctypes, LPCSTR* rgszTypes, CLIPFORMAT* rgcfTypes)</functionString>
    <param pointer="true" index="1" helpString="rgszTypes">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ReleaseBindInfo">urlmon.dll!ReleaseBindInfo</function>
    <group>internet helpers</group>
    <functionString>ReleaseBindInfo(BINDINFO* pbindinfo)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="RevokeBindStatusCallback">urlmon.dll!RevokeBindStatusCallback</function>
    <group>internet helpers</group>
    <functionString>RevokeBindStatusCallback(LPBC pBC, IBindStatusCallback* pBSCb)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="RevokeFormatEnumerator">urlmon.dll!RevokeFormatEnumerator</function>
    <group>internet helpers</group>
    <functionString>RevokeFormatEnumerator(LPBC pBC, IEnumFORMATETC* pEFetc)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SetSoftwareUpdateAdvertisementState">urlmon.dll!SetSoftwareUpdateAdvertisementState</function>
    <group>internet helpers</group>
    <functionString>SetSoftwareUpdateAdvertisementState(LPCWSTR szDistUnit, DWORD dwAdState, DWORD dwAdvertisedVersionMS, DWORD dwAdvertisedVersionLS)</functionString>
    <param index="0" helpString="szDistUnit">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="URLDownloadToCacheFile">urlmon.dll!URLDownloadToCacheFile</function>
    <group>internet helpers</group>
    <functionString>URLDownloadToCacheFileA(LPUNKNOWN, LPCSTR, LPSTR, DWORD cchFileName, DWORD, LPBINDSTATUSCALLBACK)</functionString>
    <param index="1">
      <match />
    </param>
    <param index="2">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="URLDownloadToFile">urlmon.dll!URLDownloadToFile</function>
    <group>internet helpers</group>
    <functionString>URLDownloadToFileA(LPUNKNOWN, LPCSTR, LPCSTR, DWORD, LPBINDSTATUSCALLBACK)</functionString>
    <param index="1">
      <match />
    </param>
    <param index="2">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="URLOpenBlockingStream">urlmon.dll!URLOpenBlockingStream</function>
    <group>internet helpers</group>
    <functionString>URLOpenBlockingStreamA(LPUNKNOWN, LPCSTR, LPSTREAM* _31610, DWORD, LPBINDSTATUSCALLBACK)</functionString>
    <param index="1">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="URLOpenPullStream">urlmon.dll!URLOpenPullStream</function>
    <group>internet helpers</group>
    <functionString>URLOpenPullStreamA(LPUNKNOWN, LPCSTR, DWORD, LPBINDSTATUSCALLBACK)</functionString>
    <param index="1">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="URLOpenStream">urlmon.dll!URLOpenStream</function>
    <group>internet helpers</group>
    <functionString>URLOpenStreamA(LPUNKNOWN, LPCSTR, DWORD, LPBINDSTATUSCALLBACK)</functionString>
    <param index="1">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="UrlMkGetSessionOption">urlmon.dll!UrlMkGetSessionOption</function>
    <group>internet helpers</group>
    <functionString>UrlMkGetSessionOption(DWORD dwOption, LPVOID pBuffer, DWORD dwBufferLength, DWORD* pdwBufferLength, DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="UrlMkSetSessionOption">urlmon.dll!UrlMkSetSessionOption</function>
    <group>internet helpers</group>
    <functionString>UrlMkSetSessionOption(DWORD dwOption, LPVOID pBuffer, DWORD dwBufferLength, DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="WriteHitLogging">urlmon.dll!WriteHitLogging</function>
    <group>internet helpers</group>
    <functionString>WriteHitLogging(LPHIT_LOGGING_INFO lpLogginginfo)</functionString>
  </hook>
  <!-- End Urlmon.dll -->
  <!-- Begin Shell32.dll -->
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="AssocCreateForClasses">shell32.dll!AssocCreateForClasses</function>
    <group>shell</group>
    <functionString>AssocCreateForClasses(ASSOCIATIONELEMENT* rgClasses, ULONG cClasses, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="2" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="AssocGetDetailsOfPropKey">shell32.dll!AssocGetDetailsOfPropKey</function>
    <group>shell</group>
    <functionString>AssocGetDetailsOfPropKey(IShellFolder* psf, LPCITEMIDLIST pidl, PROPERTYKEY* pkey, VARIANT* pv, BOOL* pfFoundPropKey)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CDefFolderMenu_Create">shell32.dll!CDefFolderMenu_Create2</function>
    <group>shell</group>
    <functionString>CDefFolderMenu_Create2(LPCITEMIDLIST pidlFolder, HWND hwnd, UINT cidl, LPCITEMIDLIST* apidl, IShellFolder* psf, LPFNDFMCALLBACK pfn, UINT nKeys, HKEY* ahkeys, IContextMenu** ppcm)</functionString>
    <param context="HWND" index="1" helpString="hwnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="CIDLData_CreateFromIDArray">shell32.dll!CIDLData_CreateFromIDArray</function>
    <group>shell</group>
    <functionString>CIDLData_CreateFromIDArray(LPCITEMIDLIST pidlFolder, UINT cidl, LPCITEMIDLIST* apidl, IDataObject** ppdtobj)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DAD_AutoScroll">shell32.dll!DAD_AutoScroll</function>
    <group>shell</group>
    <functionString>DAD_AutoScroll(HWND hwnd, AUTO_SCROLL_DATA* pad, POINT* pptNow)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DAD_DragEnterEx">shell32.dll!DAD_DragEnterEx</function>
    <group>shell</group>
    <functionString>DAD_DragEnterEx(HWND hwndTarget, POINT ptStart)</functionString>
    <param context="HWND" index="0" helpString="hwndTarget">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DAD_DragEnterEx">shell32.dll!DAD_DragEnterEx2</function>
    <group>shell</group>
    <functionString>DAD_DragEnterEx2(HWND hwndTarget, POINT ptStart, IDataObject* pdtObject)</functionString>
    <param context="HWND" index="0" helpString="hwndTarget">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DAD_DragLeave">shell32.dll!DAD_DragLeave</function>
    <group>shell</group>
    <functionString>DAD_DragLeave()</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="DAD_DragMove">shell32.dll!DAD_DragMove</function>
    <group>shell</group>
    <functionString>DAD_DragMove(POINT pt)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DAD_SetDragImage">shell32.dll!DAD_SetDragImage</function>
    <group>shell</group>
    <functionString>DAD_SetDragImage(HIMAGELIST him, POINT* pptOffset)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DAD_ShowDragImage">shell32.dll!DAD_ShowDragImage</function>
    <group>shell</group>
    <functionString>DAD_ShowDragImage(BOOL fShow)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="DllCanUnloadNow">shell32.dll!DllCanUnloadNow</function>
    <group>shell</group>
    <functionString>DllCanUnloadNow()</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="DllInstall">shell32.dll!DllInstall</function>
    <group>shell</group>
    <functionString>DllInstall(BOOL bInstall, LPCWSTR pszCmdLine)</functionString>
    <param index="1" helpString="pszCmdLine">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="DoEnvironmentSubst">shell32.dll!DoEnvironmentSubst</function>
    <group>shell</group>
    <functionString>DoEnvironmentSubstA(LPSTR szString, UINT cchString)</functionString>
    <param index="0" helpString="szString">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>VOID</return>
    <function displayName="DragAcceptFiles">shell32.dll!DragAcceptFiles</function>
    <group>shell</group>
    <functionString>DragAcceptFiles(HWND hWnd, BOOL fAccept)</functionString>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>VOID</return>
    <function displayName="DragFinish">shell32.dll!DragFinish</function>
    <group>shell</group>
    <functionString>DragFinish(HDROP hDrop)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>UINT</return>
    <function displayName="DragQueryFile">shell32.dll!DragQueryFile</function>
    <group>shell</group>
    <functionString>DragQueryFileA(HDROP hDrop, UINT iFile, LPSTR lpszFile, UINT cch)</functionString>
    <param index="2" helpString="lpszFile">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DragQueryPoint">shell32.dll!DragQueryPoint</function>
    <group>shell</group>
    <functionString>DragQueryPoint(HDROP hDrop, LPPOINT lppt)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>UINT</return>
    <function displayName="DriveType">shell32.dll!DriveType</function>
    <group>shell</group>
    <functionString>DriveType(int iDrive)</functionString>
    <param index="0" helpString="iDrive">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="DuplicateIcon">shell32.dll!DuplicateIcon</function>
    <group>shell</group>
    <functionString>DuplicateIcon(HINSTANCE hInst, HICON hIcon)</functionString>
    <param context="HMODULE" index="0" helpString="hInst">
      <match onlyFilename="True" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ExtractAssociatedIcon">shell32.dll!ExtractAssociatedIcon</function>
    <group>shell</group>
    <functionString>ExtractAssociatedIconA(HINSTANCE hInst, LPSTR lpIconPath, LPWORD lpiIcon)</functionString>
    <param context="HMODULE" index="0" helpString="hInst">
      <match onlyFilename="True" />
    </param>
    <param index="1" helpString="pszIconPath">
      <match />
    </param>
    <param index="2" pointer="true" result="true" helpString="piIcon">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ExtractAssociatedIcon">shell32.dll!ExtractAssociatedIconEx</function>
    <group>shell</group>
    <functionString>ExtractAssociatedIconExA(HINSTANCE hInst, LPSTR lpIconPath, LPWORD lpiIconIndex, LPWORD lpiIconId)</functionString>
    <param context="HMODULE" index="0" helpString="hInst">
      <match onlyFilename="True" />
    </param>
    <param index="1" helpString="pszIconPath">
      <match />
    </param>
    <param index="2" pointer="true" result="true" helpString="IconIndex">
      <match result="true" />
    </param>
    <param index="2" pointer="true" result="true" helpString="IconId">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ExtractIcon">shell32.dll!ExtractIcon</function>
    <group>shell</group>
    <functionString>ExtractIconA(HINSTANCE hInst, LPCSTR lpszExeFileName, UINT nIconIndex)</functionString>
    <param context="HMODULE" index="0" helpString="hInst">
      <match onlyFilename="true" />
    </param>
    <param index="1" helpString="lpszExeFileName">
      <match />
    </param>
    <param index="2" helpString="IconIndex">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ExtractIconEx">shell32.dll!ExtractIconEx</function>
    <group>shell</group>
    <functionString>ExtractIconExA(LPCSTR lpszFile, int nIconIndex, HICON* phiconLarge, HICON* phiconSmall, UINT nIcons)</functionString>
    <param index="0" helpString="lpszFile">
      <match />
    </param>
    <param index="1" helpString="IconIndex">
      <match />
    </param>
    <param index="4" helpString="nIcons">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="FindExecutable">shell32.dll!FindExecutable</function>
    <group>shell</group>
    <functionString>FindExecutableA(LPCSTR lpFile, LPCSTR lpDirectory, LPSTR lpResult)</functionString>
    <param index="0" helpString="lpFile">
      <match />
    </param>
    <param index="1" helpString="lpDirectory">
      <match />
    </param>
    <param index="2" result="true" helpString="lpResult">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="GetCurrentProcessExplicitAppUserModelID">shell32.dll!GetCurrentProcessExplicitAppUserModelID</function>
    <group>shell</group>
    <functionString>GetCurrentProcessExplicitAppUserModelID(PWSTR* AppID)</functionString>
    <param pointer="true" index="0" helpString="AppID">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="GetFileNameFromBrowse">shell32.dll!GetFileNameFromBrowse</function>
    <group>shell</group>
    <functionString>GetFileNameFromBrowse(HWND hwnd, LPWSTR pszFilePath, UINT cchFilePath, LPCWSTR pszWorkingDir, LPCWSTR pszDefExt, LPCWSTR pszFilters, LPCWSTR pszTitle)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="1" helpString="pszFilePath">
      <match result="true" />
    </param>
    <param index="4" helpString="pszDefExt">
      <match />
    </param>
    <param index="5" helpString="pszFilters">
      <match />
    </param>
    <param index="6" helpString="pszTitle">
      <match />
    </param>
  </hook>
  <!--
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILAppendID">shell32.dll!ILAppendID</function>
    <group>shell</group>
    <functionString>ILAppendID(LPITEMIDLIST pidl, LPCSHITEMID pmkid, BOOL fAppend)</functionString>
  </hook>
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILClone">shell32.dll!ILClone</function>
    <group>shell</group>
    <functionString>ILClone(LPCITEMIDLIST pidl)</functionString>
  </hook>
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILCloneFirst">shell32.dll!ILCloneFirst</function>
    <group>shell</group>
    <functionString>ILCloneFirst(LPCITEMIDLIST pidl)</functionString>
  </hook>
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILCombine">shell32.dll!ILCombine</function>
    <group>shell</group>
    <functionString>ILCombine(LPCITEMIDLIST pidl1, LPCITEMIDLIST pidl2)</functionString>
  </hook>
  -->
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="ILCreateFromPath">shell32.dll!ILCreateFromPath</function>
    <group>shell</group>
    <functionString>ILCreateFromPathA(LPCSTR pszPath)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
  </hook>
  <!--
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILFindChild">shell32.dll!ILFindChild</function>
    <group>shell</group>
    <functionString>ILFindChild(LPCITEMIDLIST pidlParent, LPCITEMIDLIST pidlChild)</functionString>
  </hook>
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILFindLastID">shell32.dll!ILFindLastID</function>
    <group>shell</group>
    <functionString>ILFindLastID(LPCITEMIDLIST pidl)</functionString>
  </hook>
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILFree">shell32.dll!ILFree</function>
    <group>shell</group>
    <functionString>ILFree(LPITEMIDLIST pidl)</functionString>
  </hook>
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILGetNext">shell32.dll!ILGetNext</function>
    <group>shell</group>
    <functionString>ILGetNext(LPCITEMIDLIST pidl)</functionString>
  </hook>
  <hook before="true">
    <return>INT</return>
    <function displayName="ILGetSize">shell32.dll!ILGetSize</function>
    <group>shell</group>
    <functionString>ILGetSize(LPCITEMIDLIST pidl)</functionString>
  </hook>
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILIsEqual">shell32.dll!ILIsEqual</function>
    <group>shell</group>
    <functionString>ILIsEqual(LPCITEMIDLIST pidl1, LPCITEMIDLIST pidl2)</functionString>
  </hook>
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILIsParent">shell32.dll!ILIsParent</function>
    <group>shell</group>
    <functionString>ILIsParent(LPCITEMIDLIST pidl1, LPCITEMIDLIST pidl2, BOOL fImmediate)</functionString>
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="ILLoadFromStreamEx">shell32.dll!ILLoadFromStreamEx</function>
    <group>shell</group>
    <functionString>ILLoadFromStreamEx(IStream* pstm, LPITEMIDLIST* pidl)</functionString>
  </hook>
  <hook before="true">
    <return>BOOL</return>
    <function displayName="ILRemoveLastID">shell32.dll!ILRemoveLastID</function>
    <group>shell</group>
    <functionString>ILRemoveLastID(LPITEMIDLIST pidl)</functionString>
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="ILSaveToStream">shell32.dll!ILSaveToStream</function>
    <group>shell</group>
    <functionString>ILSaveToStream(IStream* pstm, LPCITEMIDLIST pidl)</functionString>
  </hook>
  -->
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="InitNetworkAddressControl">shell32.dll!InitNetworkAddressControl</function>
    <group>shell</group>
    <functionString>InitNetworkAddressControl()</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="IsLFNDrive">shell32.dll!IsLFNDrive</function>
    <group>shell</group>
    <functionString>IsLFNDriveA(LPCSTR pszPath)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>UINT</return>
    <function displayName="IsNetDrive">shell32.dll!IsNetDrive</function>
    <group>shell</group>
    <functionString>IsNetDrive(int iDrive)</functionString>
    <param index="0" helpString="iDrive">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="IsUserAnAdmin">shell32.dll!IsUserAnAdmin</function>
    <group>shell</group>
    <functionString>IsUserAnAdmin()</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="OpenRegStream">shell32.dll!OpenRegStream</function>
    <group>shell</group>
    <functionString>OpenRegStream(HKEY hkey, LPCWSTR pszSubkey, LPCWSTR pszValue, DWORD grfMode)</functionString>
    <param index="1" helpString="pszSubkey">
      <match />
    </param>
    <param index="2" helpString="pszValue">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PathCleanupSpec">shell32.dll!PathCleanupSpec</function>
    <group>shell</group>
    <functionString>PathCleanupSpec(LPCWSTR pszDir, LPWSTR pszSpec)</functionString>
    <param index="0" helpString="pszDir">
      <match />
    </param>
    <param index="1" helpString="pszSpec">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PathGetShortPath">shell32.dll!PathGetShortPath</function>
    <group>shell</group>
    <functionString>PathGetShortPath(LPWSTR pszLongPath)</functionString>
    <param index="0" helpString="pszLongPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PathIsExe">shell32.dll!PathIsExe</function>
    <group>shell</group>
    <functionString>PathIsExe(LPCWSTR pszPath)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PathIsSlow">shell32.dll!PathIsSlow</function>
    <group>shell</group>
    <functionString>PathIsSlowA(LPCSTR pszFile, DWORD dwAttr)</functionString>
    <param index="0" helpString="pszFile">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PathMakeUniqueName">shell32.dll!PathMakeUniqueName</function>
    <group>shell</group>
    <functionString>PathMakeUniqueName(LPWSTR pszUniqueName, UINT cchMax, LPCWSTR pszTemplate, LPCWSTR pszLongPlate, LPCWSTR pszDir)</functionString>
    <param index="0" result="true" helpString="pszUniqueName">
      <match result="true" />
    </param>
    <param index="2" helpString="pszTemplate">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PathQualify">shell32.dll!PathQualify</function>
    <group>shell</group>
    <functionString>PathQualify(LPWSTR psz)</functionString>
    <param index="0" helpString="psz">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PathResolve">shell32.dll!PathResolve</function>
    <group>shell</group>
    <functionString>PathResolve(LPWSTR lpszPath, LPCWSTR* dirs, UINT fFlags)</functionString>
    <param index="0" helpString="lpszPath">
      <match />
    </param>
    <param pointer="true" index="1" result="true" helpString="dirs">
      <match result="true" />
    </param>
    <param index="2" helpString="fFlags">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PathYetAnotherMakeUniqueName">shell32.dll!PathYetAnotherMakeUniqueName</function>
    <group>shell</group>
    <functionString>PathYetAnotherMakeUniqueName(LPWSTR pszUniqueName, LPCWSTR pszPath, LPCWSTR pszShort, LPCWSTR pszFileSpec)</functionString>
    <param index="0" result="true" helpString="pszUniqueName">
      <match result="true" />
    </param>
    <param index="1" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PickIconDlg">shell32.dll!PickIconDlg</function>
    <group>shell</group>
    <functionString>PickIconDlg(HWND hwnd, LPWSTR pszIconPath, UINT cchIconPath, int* piIconIndex)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="1" helpString="pszIconPath">
      <match />
    </param>
    <param index="3" result="true" pointer="true" helpString="piIconIndex">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PifMgr_CloseProperties">shell32.dll!PifMgr_CloseProperties</function>
    <group>shell</group>
    <functionString>PifMgr_CloseProperties(HANDLE hProps, UINT flOpt)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PifMgr_GetProperties">shell32.dll!PifMgr_GetProperties</function>
    <group>shell</group>
    <functionString>PifMgr_GetProperties(HANDLE hProps, LPCSTR pszGroup, void* lpProps, int cbProps, UINT flOpt)</functionString>
    <param index="1" helpString="pszGroup">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PifMgr_OpenProperties">shell32.dll!PifMgr_OpenProperties</function>
    <group>shell</group>
    <functionString>PifMgr_OpenProperties(LPCWSTR pszApp, LPCWSTR pszPIF, UINT hInf, UINT flOpt)</functionString>
    <param index="0" helpString="pszApp">
      <match />
    </param>
    <param index="1" helpString="pszPIF">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="PifMgr_SetProperties">shell32.dll!PifMgr_SetProperties</function>
    <group>shell</group>
    <functionString>PifMgr_SetProperties(HANDLE hProps, LPCSTR pszGroup, void* lpProps, int cbProps, UINT flOpt)</functionString>
    <param index="1" helpString="pszGroup">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ReadCabinetState">shell32.dll!ReadCabinetState</function>
    <group>shell</group>
    <functionString>ReadCabinetState(CABINETSTATE* pcs, int cLength)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>UINT</return>
    <function displayName="RealDriveType">shell32.dll!RealDriveType</function>
    <group>shell</group>
    <functionString>RealDriveType(int iDrive, BOOL fOKToHitNet)</functionString>
    <param index="0" helpString="iDrive">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="RestartDialog">shell32.dll!RestartDialog</function>
    <group>shell</group>
    <functionString>RestartDialog(HWND hwnd, LPCWSTR lpPrompt, DWORD dwReturn)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="1" helpString="lpPrompt">
      <match />
    </param>
    <param index="2" helpString="dwReturn">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="RestartDialogEx">shell32.dll!RestartDialogEx</function>
    <group>shell</group>
    <functionString>RestartDialogEx(HWND hwnd, LPCWSTR lpPrompt, DWORD dwReturn, DWORD dwReasonCode)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="1" helpString="lpPrompt">
      <match />
    </param>
    <param index="2" helpString="dwReturn">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHAddDefaultPropertiesByExt">shell32.dll!SHAddDefaultPropertiesByExt</function>
    <group>shell</group>
    <functionString>SHAddDefaultPropertiesByExt(PCWSTR pszExt, IPropertyStore* pPropStore)</functionString>
    <param index="0" helpString="pszExt">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHAddFromPropSheetExtArray">shell32.dll!SHAddFromPropSheetExtArray</function>
    <group>shell</group>
    <functionString>SHAddFromPropSheetExtArray(HPSXA hpsxa, LPFNADDPROPSHEETPAGE lpfnAddPage, LPARAM lParam)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHAddToRecentDocs">shell32.dll!SHAddToRecentDocs</function>
    <group>shell</group>
    <functionString>SHAddToRecentDocs(UINT uFlags, LPCVOID pv)</functionString>
  </hook>
  <!--
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="SHAlloc">shell32.dll!SHAlloc</function>
    <group>shell</group>
    <functionString>SHAlloc(SIZE_T cb)</functionString>
  </hook>
  -->
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHAppBarMessage">shell32.dll!SHAppBarMessage</function>
    <group>shell</group>
    <functionString>SHAppBarMessage(DWORD dwMessage, PAPPBARDATA pData)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHAssocEnumHandlers">shell32.dll!SHAssocEnumHandlers</function>
    <group>shell</group>
    <functionString>SHAssocEnumHandlers(LPCWSTR pszExtra, ASSOC_FILTER afFilter, IEnumAssocHandlers** ppEnumHandler)</functionString>
    <param index="0" helpString="pszExtra">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHBindToFolderIDListParent">shell32.dll!SHBindToFolderIDListParent</function>
    <group>shell</group>
    <functionString>SHBindToFolderIDListParent(IShellFolder* psfRoot, LPCITEMIDLIST pidl, IID* riid, void** ppv, LPCITEMIDLIST* ppidlLast)</functionString>
    <param context="IID" pointer="true" index="2" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHBindToFolderIDListParentEx">shell32.dll!SHBindToFolderIDListParentEx</function>
    <group>shell</group>
    <functionString>SHBindToFolderIDListParentEx(IShellFolder* psfRoot, LPCITEMIDLIST pidl, IBindCtx* ppbc, IID* riid, void** ppv, LPCITEMIDLIST* ppidlLast)</functionString>
    <param context="IID" pointer="true" index="3" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHBindToObject">shell32.dll!SHBindToObject</function>
    <group>shell</group>
    <functionString>SHBindToObject(IShellFolder* psf, LPCITEMIDLIST pidl, IBindCtx* pbc, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="3" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHBindToParent">shell32.dll!SHBindToParent</function>
    <group>shell</group>
    <functionString>SHBindToParent(LPCITEMIDLIST pidl, IID* riid, void** ppv, LPCITEMIDLIST* ppidlLast)</functionString>
    <param context="IID" pointer="true" index="1" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHBrowseForFolder">shell32.dll!SHBrowseForFolder</function>
    <group>shell</group>
    <functionString>SHBrowseForFolderA(LPBROWSEINFOA lpbi)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCLSIDFromString">shell32.dll!SHCLSIDFromString</function>
    <group>shell</group>
    <functionString>SHCLSIDFromString(LPCWSTR psz, CLSID* pclsid)</functionString>
    <param index="0" helpString="psz">
      <match />
    </param>
    <param context="IID" pointer="true" index="1" helpString="pclsid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHChangeNotification_Lock">shell32.dll!SHChangeNotification_Lock</function>
    <group>shell</group>
    <functionString>SHChangeNotification_Lock(HANDLE hChange, DWORD dwProcId, LPITEMIDLIST** pppidl, LONG* plEvent)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHChangeNotification_Unlock">shell32.dll!SHChangeNotification_Unlock</function>
    <group>shell</group>
    <functionString>SHChangeNotification_Unlock(HANDLE hLock)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>VOID</return>
    <function displayName="SHChangeNotify">shell32.dll!SHChangeNotify</function>
    <group>shell</group>
    <functionString>SHChangeNotify(LONG wEventId, UINT uFlags, LPCVOID dwItem1, LPCVOID dwItem2)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SHChangeNotifyDeregister">shell32.dll!SHChangeNotifyDeregister</function>
    <group>shell</group>
    <functionString>SHChangeNotifyDeregister(long unsigned int ulID)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SHChangeNotifyRegister">shell32.dll!SHChangeNotifyRegister</function>
    <group>shell</group>
    <functionString>SHChangeNotifyRegister(HWND hwnd, int fSources, LONG fEvents, UINT wMsg, int cEntries, SHChangeNotifyEntry* pshcne)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>VOID</return>
    <function displayName="SHChangeNotifyRegisterThread">shell32.dll!SHChangeNotifyRegisterThread</function>
    <group>shell</group>
    <functionString>SHChangeNotifyRegisterThread(SCNRT_STATUS status)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCloneSpecialIDList">shell32.dll!SHCloneSpecialIDList</function>
    <group>shell</group>
    <functionString>SHCloneSpecialIDList(HWND hwnd, int csidl, BOOL fCreate)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCoCreateInstance">shell32.dll!SHCoCreateInstance</function>
    <group>shell</group>
    <functionString>SHCoCreateInstance(LPCWSTR pszCLSID, CLSID* pclsid, IUnknown* pUnkOuter, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="1" helpString="pclsid">
      <match />
    </param>
    <param index="0" helpString="pszCLSID">
      <match />
    </param>
    <param context="IID" pointer="true" index="3" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateAssociationRegistration">shell32.dll!SHCreateAssociationRegistration</function>
    <group>shell</group>
    <functionString>SHCreateAssociationRegistration(IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="0" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateDataObject">shell32.dll!SHCreateDataObject</function>
    <group>shell</group>
    <functionString>SHCreateDataObject(LPCITEMIDLIST pidlFolder, UINT cidl, LPCITEMIDLIST* apidl, IDataObject* pdtInner, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="4" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateDefaultContextMenu">shell32.dll!SHCreateDefaultContextMenu</function>
    <group>shell</group>
    <functionString>SHCreateDefaultContextMenu(DEFCONTEXTMENU* pdcm, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="1" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateDefaultExtractIcon">shell32.dll!SHCreateDefaultExtractIcon</function>
    <group>shell</group>
    <functionString>SHCreateDefaultExtractIcon(IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="0" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateDefaultPropertiesOp">shell32.dll!SHCreateDefaultPropertiesOp</function>
    <group>shell</group>
    <functionString>SHCreateDefaultPropertiesOp(IShellItem* psi, IFileOperation** ppFileOp)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateDirectory">shell32.dll!SHCreateDirectory</function>
    <group>shell</group>
    <functionString>SHCreateDirectory(HWND hwnd, LPCWSTR pszPath)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="1" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateDirectoryEx">shell32.dll!SHCreateDirectoryEx</function>
    <group>shell</group>
    <functionString>SHCreateDirectoryExA(HWND hwnd, LPCSTR pszPath, SECURITY_ATTRIBUTES* psa)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="1" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateItemFromIDList">shell32.dll!SHCreateItemFromIDList</function>
    <group>shell</group>
    <functionString>SHCreateItemFromIDList(LPCITEMIDLIST pidl, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="1" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateItemFromParsingName">shell32.dll!SHCreateItemFromParsingName</function>
    <group>shell</group>
    <functionString>SHCreateItemFromParsingName(PCWSTR pszPath, IBindCtx* pbc, IID* riid, void** ppv)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
    <param context="IID" pointer="true" index="2" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateItemFromRelativeName">shell32.dll!SHCreateItemFromRelativeName</function>
    <group>shell</group>
    <functionString>SHCreateItemFromRelativeName(IShellItem* psiParent, PCWSTR pszName, IBindCtx* pbc, IID* riid, void** ppv)</functionString>
    <param index="1" helpString="pszName">
      <match />
    </param>
    <param context="IID" pointer="true" index="3" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateItemInKnownFolder">shell32.dll!SHCreateItemInKnownFolder</function>
    <group>shell</group>
    <functionString>SHCreateItemInKnownFolder(KNOWNFOLDERID* kfid, DWORD dwKFFlags, PCWSTR pszItem, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="0" helpString="kfid">
      <match />
    </param>
    <param index="2" helpString="pszItem">
      <match />
    </param>
    <param context="IID" pointer="true" index="3" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateItemWithParent">shell32.dll!SHCreateItemWithParent</function>
    <group>shell</group>
    <functionString>SHCreateItemWithParent(LPCITEMIDLIST pidlParent, IShellFolder* psfParent, LPCITEMIDLIST pidl, IID* riid, void** ppvItem)</functionString>
    <param context="IID" pointer="true" index="3" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreatePropSheetExtArray">shell32.dll!SHCreatePropSheetExtArray</function>
    <group>shell</group>
    <functionString>SHCreatePropSheetExtArray(HKEY hKey, LPCWSTR pszSubKey, UINT max_iface)</functionString>
    <param index="1" helpString="pszSubKey">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateQueryCancelAutoPlayMoniker">shell32.dll!SHCreateQueryCancelAutoPlayMoniker</function>
    <group>shell</group>
    <functionString>SHCreateQueryCancelAutoPlayMoniker(IMoniker** ppmoniker)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateShellFolderView">shell32.dll!SHCreateShellFolderView</function>
    <group>shell</group>
    <functionString>SHCreateShellFolderView(SFV_CREATE* pcsfv, IShellView** ppsv)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateShellFolderViewEx">shell32.dll!SHCreateShellFolderViewEx</function>
    <group>shell</group>
    <functionString>SHCreateShellFolderViewEx(LPCSFV pcsfv, IShellView** ppsv)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateShellItem">shell32.dll!SHCreateShellItem</function>
    <group>shell</group>
    <functionString>SHCreateShellItem(LPCITEMIDLIST pidlParent, IShellFolder* psfParent, LPCITEMIDLIST pidl, IShellItem** ppsi)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateShellItemArray">shell32.dll!SHCreateShellItemArray</function>
    <group>shell</group>
    <functionString>SHCreateShellItemArray(LPCITEMIDLIST pidlParent, IShellFolder* psf, UINT cidl, LPCITEMIDLIST* ppidl, IShellItemArray** ppsiItemArray)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateShellItemArrayFromDataObject">shell32.dll!SHCreateShellItemArrayFromDataObject</function>
    <group>shell</group>
    <functionString>SHCreateShellItemArrayFromDataObject(IDataObject* pdo, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="1" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateShellItemArrayFromIDLists">shell32.dll!SHCreateShellItemArrayFromIDLists</function>
    <group>shell</group>
    <functionString>SHCreateShellItemArrayFromIDLists(UINT cidl, LPCITEMIDLIST* rgpidl, IShellItemArray** ppsiItemArray)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateShellItemArrayFromShellItem">shell32.dll!SHCreateShellItemArrayFromShellItem</function>
    <group>shell</group>
    <functionString>SHCreateShellItemArrayFromShellItem(IShellItem* psi, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="1" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHCreateStdEnumFmtEtc">shell32.dll!SHCreateStdEnumFmtEtc</function>
    <group>shell</group>
    <functionString>SHCreateStdEnumFmtEtc(UINT cfmt, FORMATETC* afmt, IEnumFORMATETC** ppenumFormatEtc)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHDefExtractIcon">shell32.dll!SHDefExtractIcon</function>
    <group>shell</group>
    <functionString>SHDefExtractIconA(LPCSTR pszIconFile, int iIndex, UINT uFlags, HICON* phiconLarge, HICON* phiconSmall, UINT nIconSize)</functionString>
    <param index="0" helpString="pszIconFile">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHDestroyPropSheetExtArray">shell32.dll!SHDestroyPropSheetExtArray</function>
    <group>shell</group>
    <functionString>SHDestroyPropSheetExtArray(HPSXA hpsxa)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHDoDragDrop">shell32.dll!SHDoDragDrop</function>
    <group>shell</group>
    <functionString>SHDoDragDrop(HWND hwnd, IDataObject* pdata, IDropSource* pdsrc, DWORD dwEffect, DWORD* pdwEffect)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHEmptyRecycleBin">shell32.dll!SHEmptyRecycleBin</function>
    <group>shell</group>
    <functionString>SHEmptyRecycleBinA(HWND hwnd, LPCSTR pszRootPath, DWORD dwFlags)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="1" helpString="pszRootPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHEvaluateSystemCommandTemplate">shell32.dll!SHEvaluateSystemCommandTemplate</function>
    <group>shell</group>
    <functionString>SHEvaluateSystemCommandTemplate(PCWSTR pszCmdTemplate, PWSTR* ppszApplication, PWSTR* ppszCommandLine, PWSTR* ppszParameters)</functionString>
    <param index="0" helpString="pszCmdTemplate">
      <match />
    </param>
    <param pointer="true" index="1" helpString="ppszApplication">
      <match />
    </param>
    <param pointer="true" index="2" helpString="ppszCommandLine" />
    <param pointer="true" index="3" helpString="ppszParameters" />
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHFileOperation">shell32.dll!SHFileOperation</function>
    <group>shell</group>
    <functionString>SHFileOperationA(LPSHFILEOPSTRUCTA lpFileOp)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHFindFiles">shell32.dll!SHFindFiles</function>
    <group>shell</group>
    <functionString>SHFindFiles(LPCITEMIDLIST pidlFolder, LPCITEMIDLIST pidlSaveFile)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHFind_InitMenuPopup">shell32.dll!SHFind_InitMenuPopup</function>
    <group>shell</group>
    <functionString>SHFind_InitMenuPopup(HMENU hmenu, HWND hwndOwner, UINT idCmdFirst, UINT idCmdLast)</functionString>
    <param context="HWND" index="1" helpString="hwndOwner">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHFlushSFCache">shell32.dll!SHFlushSFCache</function>
    <group>shell</group>
    <functionString>SHFlushSFCache()</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>INT</return>
    <function displayName="SHFormatDrive">shell32.dll!SHFormatDrive</function>
    <group>shell</group>
    <functionString>SHFormatDrive(HWND hwnd, UINT drive, UINT fmtID, UINT options)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
  </hook>
  <!--
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="SHFree">shell32.dll!SHFree</function>
    <group>shell</group>
    <functionString>SHFree(void* pv)</functionString>
  </hook>
  -->
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHFreeNameMappings">shell32.dll!SHFreeNameMappings</function>
    <group>shell</group>
    <functionString>SHFreeNameMappings(HANDLE hNameMappings)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetAttributesFromDataObject">shell32.dll!SHGetAttributesFromDataObject</function>
    <group>shell</group>
    <functionString>SHGetAttributesFromDataObject(IDataObject* pdo, DWORD dwAttributeMask, DWORD* pdwAttributes, UINT* pcItems)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetDataFromIDList">shell32.dll!SHGetDataFromIDList</function>
    <group>shell</group>
    <functionString>SHGetDataFromIDListA(IShellFolder* psf, LPCITEMIDLIST pidl, int nFormat, void* pv, int cb)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetDesktopFolder">shell32.dll!SHGetDesktopFolder</function>
    <group>shell</group>
    <functionString>SHGetDesktopFolder(IShellFolder** ppshf)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetDiskFreeSpace">shell32.dll!SHGetDiskFreeSpaceEx</function>
    <group>shell</group>
    <functionString>SHGetDiskFreeSpaceExA(LPCSTR pszDirectoryName, ULARGE_INTEGER* pulFreeBytesAvailableToCaller, ULARGE_INTEGER* pulTotalNumberOfBytes, ULARGE_INTEGER* pulTotalNumberOfFreeBytes)</functionString>
    <param index="0" helpString="pszDirectoryName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetDriveMedia">shell32.dll!SHGetDriveMedia</function>
    <group>shell</group>
    <functionString>SHGetDriveMedia(LPCWSTR pszDrive, DWORD* pdwMediaContent)</functionString>
    <param index="0" helpString="pszDrive">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetFileInfo">shell32.dll!SHGetFileInfo</function>
    <group>shell</group>
    <functionString>SHGetFileInfoA(LPCSTR pszPath, DWORD dwFileAttributes, SHFILEINFOA* psfi, UINT cbFileInfo, UINT uFlags)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetFolderLocation">shell32.dll!SHGetFolderLocation</function>
    <group>shell</group>
    <functionString>SHGetFolderLocation(HWND hwnd, int csidl, HANDLE hToken, DWORD dwFlags, LPITEMIDLIST* ppidl)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetFolderPath">shell32.dll!SHGetFolderPath</function>
    <group>shell</group>
    <functionString>SHGetFolderPathA(HWND hwnd, int csidl, HANDLE hToken, DWORD dwFlags, LPSTR pszPath)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="4" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetFolderPathAndSubDir">shell32.dll!SHGetFolderPathAndSubDir</function>
    <group>shell</group>
    <functionString>SHGetFolderPathAndSubDirA(HWND hwnd, int csidl, HANDLE hToken, DWORD dwFlags, LPCSTR pszSubDir, LPSTR pszPath)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="3" helpString="dwFlags">
      <match />
    </param>
    <param index="5" result="true" helpString="pszPath">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetIDListFromObject">shell32.dll!SHGetIDListFromObject</function>
    <group>shell</group>
    <functionString>SHGetIDListFromObject(IUnknown* punk, LPITEMIDLIST* ppidl)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetIconOverlayIndex">shell32.dll!SHGetIconOverlayIndex</function>
    <group>shell</group>
    <functionString>SHGetIconOverlayIndexA(LPCSTR pszIconPath, int iIconIndex)</functionString>
    <param index="0" helpString="pszIconPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetImageList">shell32.dll!SHGetImageList</function>
    <group>shell</group>
    <functionString>SHGetImageList(int iImageList, IID* riid, void** ppvObj)</functionString>
    <param context="IID" pointer="true" index="1" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="SHGetInstanceExplorer">shell32.dll!SHGetInstanceExplorer</function>
    <group>shell</group>
    <functionString>SHGetInstanceExplorer(IUnknown** ppunk)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="SHGetKnownFolderIDList">shell32.dll!SHGetKnownFolderIDList</function>
    <group>shell</group>
    <functionString>SHGetKnownFolderIDList(KNOWNFOLDERID* rfid, DWORD dwFlags, HANDLE hToken, LPITEMIDLIST* ppidl)</functionString>
    <param context="IID" pointer="true" index="0" helpString="rfid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="SHGetKnownFolderPath">shell32.dll!SHGetKnownFolderPath</function>
    <group>shell</group>
    <functionString>SHGetKnownFolderPath(KNOWNFOLDERID* rfid, DWORD dwFlags, HANDLE hToken, PWSTR* ppszPath)</functionString>
    <param context="IID" pointer="true" index="0" helpString="rfid">
      <match />
    </param>
    <param pointer="true" index="3" helpString="ppszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="SHGetLocalizedName">shell32.dll!SHGetLocalizedName</function>
    <group>shell</group>
    <functionString>SHGetLocalizedName(LPCWSTR pszPath, LPWSTR pszResModule, UINT cch, int* pidsRes)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
    <param index="1" helpString="pszResModule">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="SHGetMalloc">shell32.dll!SHGetMalloc</function>
    <group>shell</group>
    <functionString>SHGetMalloc(IMalloc** ppMalloc)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="SHGetNameFromIDList">shell32.dll!SHGetNameFromIDList</function>
    <group>shell</group>
    <functionString>SHGetNameFromIDList(LPCITEMIDLIST pidl, SIGDN sigdnName, PWSTR* ppszName)</functionString>
    <param pointer="true" index="2" helpString="ppszName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>HRESULT</return>
    <function displayName="SHGetNewLinkInfo">shell32.dll!SHGetNewLinkInfo</function>
    <group>shell</group>
    <functionString>SHGetNewLinkInfoA(LPCSTR pszLinkTo, LPCSTR pszDir, LPSTR pszName, BOOL* pfMustCopy, UINT uFlags)</functionString>
    <param index="0" helpString="pszLinkTo">
      <match />
    </param>
    <param index="1" helpString="pszDir">
      <match />
    </param>
    <param index="2" helpString="pszName">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetPathFromIDList">shell32.dll!SHGetPathFromIDList</function>
    <group>shell</group>
    <functionString>SHGetPathFromIDListA(LPCITEMIDLIST pidl, LPSTR pszPath)</functionString>
    <param index="1" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetPathFromIDListEx">shell32.dll!SHGetPathFromIDListEx</function>
    <group>shell</group>
    <functionString>SHGetPathFromIDListEx(LPCITEMIDLIST pidl, PWSTR pszPath, DWORD cchPath, GPFIDL_FLAGS uOpts)</functionString>
    <param index="1" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetPropertyStoreForWindow">shell32.dll!SHGetPropertyStoreForWindow</function>
    <group>shell</group>
    <functionString>SHGetPropertyStoreForWindow(HWND hwnd, IID* riid, void** ppv)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param context="IID" pointer="true" index="1" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetPropertyStoreFromIDList">shell32.dll!SHGetPropertyStoreFromIDList</function>
    <group>shell</group>
    <functionString>SHGetPropertyStoreFromIDList(LPCITEMIDLIST pidl, GETPROPERTYSTOREFLAGS flags, IID* riid, void** ppv)</functionString>
    <param context="IID" pointer="true" index="2" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetPropertyStoreFromParsingName">shell32.dll!SHGetPropertyStoreFromParsingName</function>
    <group>shell</group>
    <functionString>SHGetPropertyStoreFromParsingName(PCWSTR pszPath, IBindCtx* pbc, GETPROPERTYSTOREFLAGS flags, IID* riid, void** ppv)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
    <param context="IID" pointer="true" index="3" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetRealIDL">shell32.dll!SHGetRealIDL</function>
    <group>shell</group>
    <functionString>SHGetRealIDL(IShellFolder* psf, LPCITEMIDLIST pidlSimple, LPITEMIDLIST* ppidlReal)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetSetFolderCustomSettings">shell32.dll!SHGetSetFolderCustomSettings</function>
    <group>shell</group>
    <functionString>SHGetSetFolderCustomSettings(LPSHFOLDERCUSTOMSETTINGS pfcs, LPCWSTR pszPath, DWORD dwReadWrite)</functionString>
    <param index="1" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>VOID</return>
    <function displayName="SHGetSetSettings">shell32.dll!SHGetSetSettings</function>
    <group>shell</group>
    <functionString>SHGetSetSettings(LPSHELLSTATEA lpss, DWORD dwMask, BOOL bSet)</functionString>
    <param index="1" context="SSF_SHELL_CONSTANTS" helpString="dwMask">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetSettings">shell32.dll!SHGetSettings</function>
    <group>shell</group>
    <functionString>SHGetSettings(SHELLFLAGSTATE* psfs, DWORD dwMask)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetSpecialFolderLocation">shell32.dll!SHGetSpecialFolderLocation</function>
    <group>shell</group>
    <functionString>SHGetSpecialFolderLocation(HWND hwnd, int csidl, LPITEMIDLIST* ppidl)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SHGetSpecialFolderPath">shell32.dll!SHGetSpecialFolderPath</function>
    <group>shell</group>
    <functionString>SHGetSpecialFolderPathA(HWND hwnd, LPSTR pszPath, int csidl, BOOL fCreate)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="1" result="true" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetStockIconInfo">shell32.dll!SHGetStockIconInfo</function>
    <group>shell</group>
    <functionString>SHGetStockIconInfo(SHSTOCKICONID siid, UINT uFlags, SHSTOCKICONINFO* psii)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHGetTemporaryPropertyForItem">shell32.dll!SHGetTemporaryPropertyForItem</function>
    <group>shell</group>
    <functionString>SHGetTemporaryPropertyForItem(IShellItem* psi, PROPERTYKEY* propkey, PROPVARIANT* ppropvar)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHHandleUpdateImage">shell32.dll!SHHandleUpdateImage</function>
    <group>shell</group>
    <functionString>SHHandleUpdateImage(LPCITEMIDLIST pidlExtra)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHILCreateFromPath">shell32.dll!SHILCreateFromPath</function>
    <group>shell</group>
    <functionString>SHILCreateFromPath(LPCWSTR pszPath, LPITEMIDLIST* ppidl, DWORD* rgfInOut)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHInvokePrinterCommand">shell32.dll!SHInvokePrinterCommand</function>
    <group>shell</group>
    <functionString>SHInvokePrinterCommandA(HWND hwnd, UINT uAction, LPCSTR lpBuf1, LPCSTR lpBuf2, BOOL fModal)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="2" helpString="lpBuf1">
      <match />
    </param>
    <param index="3" helpString="lpBuf2">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHIsFileAvailableOffline">shell32.dll!SHIsFileAvailableOffline</function>
    <group>shell</group>
    <functionString>SHIsFileAvailableOffline(LPCWSTR pwszPath, LPDWORD pdwStatus)</functionString>
    <param index="0" helpString="pwszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHLimitInputEdit">shell32.dll!SHLimitInputEdit</function>
    <group>shell</group>
    <functionString>SHLimitInputEdit(HWND hwndEdit, IShellFolder* psf)</functionString>
    <param context="HWND" index="0" helpString="hwndEdit">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHLoadInProc">shell32.dll!SHLoadInProc</function>
    <group>shell</group>
    <functionString>SHLoadInProc(IID* rclsid)</functionString>
    <param context="IID" pointer="true" index="0" helpString="rclsid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHLoadNonloadedIconOverlayIdentifiers">shell32.dll!SHLoadNonloadedIconOverlayIdentifiers</function>
    <group>shell</group>
    <functionString>SHLoadNonloadedIconOverlayIdentifiers()</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHMapPIDLToSystemImageListIndex">shell32.dll!SHMapPIDLToSystemImageListIndex</function>
    <group>shell</group>
    <functionString>SHMapPIDLToSystemImageListIndex(IShellFolder* pshf, LPCITEMIDLIST pidl, int* piIndexSel)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHMultiFileProperties">shell32.dll!SHMultiFileProperties</function>
    <group>shell</group>
    <functionString>SHMultiFileProperties(IDataObject* pdtobj, DWORD dwFlags)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHObjectProperties">shell32.dll!SHObjectProperties</function>
    <group>shell</group>
    <functionString>SHObjectProperties(HWND hwnd, DWORD shopObjectType, PCWSTR pszObjectName, PCWSTR pszPropertyPage)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="2" helpString="pszObjectName">
      <match />
    </param>
    <param index="3" helpString="pszPropertyPage">
      <match result="true" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHOpenFolderAndSelectItems">shell32.dll!SHOpenFolderAndSelectItems</function>
    <group>shell</group>
    <functionString>SHOpenFolderAndSelectItems(LPCITEMIDLIST pidlFolder, UINT cidl, LPCITEMIDLIST* apidl, DWORD dwFlags)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHOpenWithDialog">shell32.dll!SHOpenWithDialog</function>
    <group>shell</group>
    <functionString>SHOpenWithDialog(HWND hwndParent, OPENASINFO* poainfo)</functionString>
    <param context="HWND" index="0" helpString="hwndParent">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHParseDisplayName">shell32.dll!SHParseDisplayName</function>
    <group>shell</group>
    <functionString>SHParseDisplayName(PCWSTR pszName, IBindCtx* pbc, LPITEMIDLIST* ppidl, SFGAOF sfgaoIn, SFGAOF* psfgaoOut)</functionString>
    <param index="0" helpString="pszName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHPathPrepareForWrite">shell32.dll!SHPathPrepareForWrite</function>
    <group>shell</group>
    <functionString>SHPathPrepareForWriteA(HWND hwnd, IUnknown* punkEnableModless, LPCSTR pszPath, DWORD dwFlags)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="2" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHPropStgCreate">shell32.dll!SHPropStgCreate</function>
    <group>shell</group>
    <functionString>SHPropStgCreate(IPropertySetStorage* psstg, IID* fmtid, CLSID* pclsid, DWORD grfFlags, DWORD grfMode, DWORD dwDisposition, IPropertyStorage** ppstg, UINT* puCodePage)</functionString>
    <param context="IID" pointer="true" index="1" helpString="fmtid">
      <match />
    </param>
    <param context="IID" pointer="true" index="2" helpString="pclsid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHPropStgReadMultiple">shell32.dll!SHPropStgReadMultiple</function>
    <group>shell</group>
    <functionString>SHPropStgReadMultiple(IPropertyStorage* pps, UINT uCodePage, DWORD cpspec, PROPSPEC* rgpspec, PROPVARIANT* rgvar)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHPropStgWriteMultiple">shell32.dll!SHPropStgWriteMultiple</function>
    <group>shell</group>
    <functionString>SHPropStgWriteMultiple(IPropertyStorage* pps, UINT* puCodePage, DWORD cpspec, PROPSPEC* rgpspec, PROPVARIANT* rgvar, PROPID propidNameFirst)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHQueryRecycleBin">shell32.dll!SHQueryRecycleBin</function>
    <group>shell</group>
    <functionString>SHQueryRecycleBinA(LPCSTR pszRootPath, LPSHQUERYRBINFO pSHQueryRBInfo)</functionString>
    <param index="0" helpString="pszRootPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHQueryUserNotificationState">shell32.dll!SHQueryUserNotificationState</function>
    <group>shell</group>
    <functionString>SHQueryUserNotificationState(QUERY_USER_NOTIFICATION_STATE* pquns)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHRemoveLocalizedName">shell32.dll!SHRemoveLocalizedName</function>
    <group>shell</group>
    <functionString>SHRemoveLocalizedName(LPCWSTR pszPath)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHReplaceFromPropSheetExtArray">shell32.dll!SHReplaceFromPropSheetExtArray</function>
    <group>shell</group>
    <functionString>SHReplaceFromPropSheetExtArray(HPSXA hpsxa, UINT uPageID, LPFNADDPROPSHEETPAGE lpfnReplaceWith, LPARAM lParam)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHRestricted">shell32.dll!SHRestricted</function>
    <group>shell</group>
    <functionString>SHRestricted(RESTRICTIONS rest)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHSetDefaultProperties">shell32.dll!SHSetDefaultProperties</function>
    <group>shell</group>
    <functionString>SHSetDefaultProperties(HWND hwndParent, IShellItem* psi, DWORD dwFileOpFlags, IFileOperationProgressSink* pfops)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHSetFolderPath">shell32.dll!SHSetFolderPath</function>
    <group>shell</group>
    <functionString>SHSetFolderPathA(int csidl, HANDLE hToken, DWORD dwFlags, LPCSTR pszPath)</functionString>
    <param index="3" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>VOID</return>
    <function displayName="SHSetInstanceExplorer">shell32.dll!SHSetInstanceExplorer</function>
    <group>shell</group>
    <functionString>SHSetInstanceExplorer(IUnknown* punk)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHSetKnownFolderPath">shell32.dll!SHSetKnownFolderPath</function>
    <group>shell</group>
    <functionString>SHSetKnownFolderPath(KNOWNFOLDERID* rfid, DWORD dwFlags, HANDLE hToken, PCWSTR pszPath)</functionString>
    <param context="IID" pointer="true" index="0" helpString="rfid">
      <match />
    </param>
    <param index="3" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHSetLocalizedName">shell32.dll!SHSetLocalizedName</function>
    <group>shell</group>
    <functionString>SHSetLocalizedName(LPCWSTR pszPath, LPCWSTR pszResModule, int idsRes)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
    <param index="1" helpString="pszResModule">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHSetTemporaryPropertyForItem">shell32.dll!SHSetTemporaryPropertyForItem</function>
    <group>shell</group>
    <functionString>SHSetTemporaryPropertyForItem(IShellItem* psi, PROPERTYKEY* propkey, PROPVARIANT* propvar)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHShellFolderView_Message">shell32.dll!SHShellFolderView_Message</function>
    <group>shell</group>
    <functionString>SHShellFolderView_Message(HWND hwndMain, UINT uMsg, LPARAM lParam)</functionString>
    <param context="HWND" index="0" helpString="hwndMain">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHSimpleIDListFromPath">shell32.dll!SHSimpleIDListFromPath</function>
    <group>shell</group>
    <functionString>SHSimpleIDListFromPath(LPCWSTR pszPath)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHTestTokenMembership">shell32.dll!SHTestTokenMembership</function>
    <group>shell</group>
    <functionString>SHTestTokenMembership(HANDLE hToken, ULONG ulRID)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHUpdateImage">shell32.dll!SHUpdateImage</function>
    <group>shell</group>
    <functionString>SHUpdateImageA(LPCSTR pszHashItem, int iIndex, UINT uFlags, int iImageIndex)</functionString>
    <param index="0" helpString="pszHashItem">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SHValidateUNC">shell32.dll!SHValidateUNC</function>
    <group>shell</group>
    <functionString>SHValidateUNC(HWND hwndOwner, LPWSTR pszFile, UINT fConnect)</functionString>
    <param context="HWND" index="0" helpString="hwndOwner">
      <match />
    </param>
    <param index="1" helpString="pszFile">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SetCurrentProcessExplicitAppUserModelID">shell32.dll!SetCurrentProcessExplicitAppUserModelID</function>
    <group>shell</group>
    <functionString>SetCurrentProcessExplicitAppUserModelID(PCWSTR AppID)</functionString>
    <param index="0" helpString="AppID">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ShellAbout">shell32.dll!ShellAbout</function>
    <group>shell</group>
    <functionString>ShellAboutA(HWND hWnd, LPCSTR szApp, LPCSTR szOtherStuff, HICON hIcon)</functionString>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="szApp">
      <match />
    </param>
    <param index="2" helpString="szOtherStuff">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ShellExecute">shell32.dll!ShellExecute</function>
    <group>shell</group>
    <functionString>ShellExecuteA(HWND hwnd, LPCSTR lpOperation, LPCSTR lpFile, LPCSTR lpParameters, LPCSTR lpDirectory, INT nShowCmd)</functionString>
    <param context="HWND" index="0" helpString="hwnd">
      <match />
    </param>
    <param index="1" helpString="lpOperation">
      <match />
    </param>
    <param index="2" helpString="lpFile" />
    <param index="3" helpString="lpParameters" />
    <param index="4" helpString="lpDirectory" />
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="ShellExecuteEx">shell32.dll!ShellExecuteEx</function>
    <group>shell</group>
    <functionString>ShellExecuteExA(LPSHELLEXECUTEINFOA lpExecInfo)</functionString>
    <param index="0" pointer="true">
      <param context="HWND" index="2" helpString="hwnd" />
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="3" helpString="lpVerb" />
      <match />
    </param>
    <param index="0" pointer="true">
      <param index="4" helpString="lpFile" />
    </param>
    <param index="0" pointer="true">
      <param index="5" helpString="lpParameters" />
    </param>
    <param index="0" pointer="true">
      <param index="6" helpString="lpDirectory" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="Shell_GetCachedImageIndex">shell32.dll!Shell_GetCachedImageIndex</function>
    <group>shell</group>
    <functionString>Shell_GetCachedImageIndex(LPCWSTR pwszIconPath, int iIconIndex, UINT uIconFlags)</functionString>
    <param index="0" helpString="pwszIconPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="Shell_GetCachedImageIndex">shell32.dll!Shell_GetCachedImageIndex</function>
    <group>shell</group>
    <functionString>Shell_GetCachedImageIndexA(LPCSTR pszIconPath, int iIconIndex, UINT uIconFlags)</functionString>
    <param index="0" helpString="pwszIconPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="Shell_GetImageLists">shell32.dll!Shell_GetImageLists</function>
    <group>shell</group>
    <functionString>Shell_GetImageLists(HIMAGELIST* phiml, HIMAGELIST* phimlSmall)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="Shell_MergeMenus">shell32.dll!Shell_MergeMenus</function>
    <group>shell</group>
    <functionString>Shell_MergeMenus(HMENU hmDst, HMENU hmSrc, UINT uInsert, UINT uIDAdjust, UINT uIDAdjustMax, DWORD uFlags)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="Shell_NotifyIcon">shell32.dll!Shell_NotifyIcon</function>
    <group>shell</group>
    <functionString>Shell_NotifyIconA(DWORD dwMessage, PNOTIFYICONDATAA lpData)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="SignalFileOpen">shell32.dll!SignalFileOpen</function>
    <group>shell</group>
    <functionString>SignalFileOpen(LPCITEMIDLIST pidl)</functionString>
  </hook>
  <!--
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrChr">shell32.dll!StrChrA</function>
    <group>shell</group>
    <functionString>StrChrA(LPCSTR lpStart, WORD wMatch)</functionString>
    
      <param index="0" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrChrI">shell32.dll!StrChrIA</function>
    <group>shell</group>
    <functionString>StrChrIA(LPCSTR lpStart, WORD wMatch)</functionString>
    
      <param index="0" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrChrI">shell32.dll!StrChrIW</function>
    <group>shell</group>
    <functionString>StrChrIW(LPCWSTR lpStart, WCHAR wMatch)</functionString>
    
      <param index="0" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrChr">shell32.dll!StrChrW</function>
    <group>shell</group>
    <functionString>StrChrW(LPCWSTR lpStart, WCHAR wMatch)</functionString>
    
      <param index="0" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrCmpN">shell32.dll!StrCmpNA</function>
    <group>shell</group>
    <functionString>StrCmpNA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrCmpNI">shell32.dll!StrCmpNIA</function>
    <group>shell</group>
    <functionString>StrCmpNIA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrCmpNI">shell32.dll!StrCmpNIW</function>
    <group>shell</group>
    <functionString>StrCmpNIW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrCmpN">shell32.dll!StrCmpNW</function>
    <group>shell</group>
    <functionString>StrCmpNW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrRChr">shell32.dll!StrRChrA</function>
    <group>shell</group>
    <functionString>StrRChrA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrRChrI">shell32.dll!StrRChrIA</function>
    <group>shell</group>
    <functionString>StrRChrIA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrRChrI">shell32.dll!StrRChrIW</function>
    <group>shell</group>
    <functionString>StrRChrIW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrRChr">shell32.dll!StrRChrW</function>
    <group>shell</group>
    <functionString>StrRChrW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrRStrI">shell32.dll!StrRStrIA</function>
    <group>shell</group>
    <functionString>StrRStrIA(LPCSTR lpSource, LPCSTR lpLast, LPCSTR lpSrch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
    
      <param index="2" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrRStrI">shell32.dll!StrRStrIW</function>
    <group>shell</group>
    <functionString>StrRStrIW(LPCWSTR lpSource, LPCWSTR lpLast, LPCWSTR lpSrch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
    
      <param index="2" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrStr">shell32.dll!StrStrA</function>
    <group>shell</group>
    <functionString>StrStrA(LPCSTR lpFirst, LPCSTR lpSrch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrStrI">shell32.dll!StrStrIA</function>
    <group>shell</group>
    <functionString>StrStrIA(LPCSTR lpFirst, LPCSTR lpSrch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrStrI">shell32.dll!StrStrIW</function>
    <group>shell</group>
    <functionString>StrStrIW(LPCWSTR lpFirst, LPCWSTR lpSrch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  <hook before="true">
    <return>HRESULT</return>
    <function displayName="StrStr">shell32.dll!StrStrW</function>
    <group>shell</group>
    <functionString>StrStrW(LPCWSTR lpFirst, LPCWSTR lpSrch)</functionString>
    
      <param index="0" />
    
    
      <param index="1" />
    
  </hook>
  -->
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="Win32DeleteFile">shell32.dll!Win32DeleteFile</function>
    <group>shell</group>
    <functionString>Win32DeleteFile(LPCWSTR pszPath)</functionString>
    <param index="0" helpString="pszPath">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="WriteCabinetState">shell32.dll!WriteCabinetState</function>
    <group>shell</group>
    <functionString>WriteCabinetState(CABINETSTATE* pcs)</functionString>
  </hook>
  <!-- End Shell32.dll -->
  <!-- Begin Wininet.dll -->
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="CommitUrlCacheEntry">wininet.dll!CommitUrlCacheEntry</function>
    <group>internet</group>
    <functionString>CommitUrlCacheEntryA(LPCSTR lpszUrlName, LPCSTR lpszLocalFileName, FILETIME ExpireTime, FILETIME LastModifiedTime, DWORD CacheEntryType, LPBYTE lpHeaderInfo, DWORD dwHeaderSize, LPCSTR lpszFileExtension, LPCSTR lpszOriginalUrl)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
    <param index="1" helpString="lpszLocalFileName">
      <match />
    </param>
    <param index="7" helpString="lpszFileExtension" />
    <param index="8" helpString="lpszOriginalUrl" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="CreateMD5SSOHash">wininet.dll!CreateMD5SSOHash</function>
    <group>internet</group>
    <functionString>CreateMD5SSOHash(PWSTR pszChallengeInfo, PWSTR pwszRealm, PWSTR pwszTarget, PBYTE pbHexHash)</functionString>
    <param index="0" helpString="pszChallengeInfo">
      <match />
    </param>
    <param index="1" helpString="pwszRealm">
      <match />
    </param>
    <param index="2" helpString="pwszTarget" />
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="CreateUrlCacheEntry">wininet.dll!CreateUrlCacheEntry</function>
    <group>internet</group>
    <functionString>CreateUrlCacheEntryA(LPCSTR lpszUrlName, DWORD dwExpectedFileSize, LPCSTR lpszFileExtension, LPSTR lpszFileName, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
    <param index="2" helpString="lpszFileExtension">
      <match />
    </param>
    <param index="3" helpString="lpszFileName" />
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="CreateUrlCacheGroup">wininet.dll!CreateUrlCacheGroup</function>
    <group>internet</group>
    <functionString>CreateUrlCacheGroup(DWORD dwFlags, LPVOID lpReserved)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DeleteUrlCacheEntry">wininet.dll!DeleteUrlCacheEntry</function>
    <group>internet</group>
    <functionString>DeleteUrlCacheEntry(LPCSTR lpszUrlName)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DeleteUrlCacheEntry">wininet.dll!DeleteUrlCacheEntry</function>
    <group>internet</group>
    <functionString>DeleteUrlCacheEntryA(LPCSTR lpszUrlName)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DeleteUrlCacheGroup">wininet.dll!DeleteUrlCacheGroup</function>
    <group>internet</group>
    <functionString>DeleteUrlCacheGroup(GROUPID GroupId, DWORD dwFlags, LPVOID lpReserved)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="DetectAutoProxyUrl">wininet.dll!DetectAutoProxyUrl</function>
    <group>internet</group>
    <functionString>DetectAutoProxyUrl(LPSTR lpszAutoProxyUrl, DWORD dwAutoProxyUrlLength, DWORD dwDetectFlags)</functionString>
    <param index="0" helpString="lpszAutoProxyUrl">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="DllInstall">wininet.dll!DllInstall</function>
    <group>internet</group>
    <functionString>DllInstall(BOOL bInstall, LPCWSTR pszCmdLine)</functionString>
    <param index="1" helpString="pszCmdLine">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="FindCloseUrlCache">wininet.dll!FindCloseUrlCache</function>
    <group>internet</group>
    <functionString>FindCloseUrlCache(HANDLE hEnumHandle)</functionString>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="FindFirstUrlCacheEntry">wininet.dll!FindFirstUrlCacheEntry</function>
    <group>internet</group>
    <functionString>FindFirstUrlCacheEntryA(LPCSTR lpszUrlSearchPattern, LPINTERNET_CACHE_ENTRY_INFOA lpFirstCacheEntryInfo, LPDWORD lpcbCacheEntryInfo)</functionString>
    <param index="0" helpString="lpszUrlSearchPattern">
      <match />
    </param>
  </hook>
  <hook before="true" priority="5">
    <return>BOOL</return>
    <function displayName="FindFirstUrlCacheEntry">wininet.dll!FindFirstUrlCacheEntryEx</function>
    <group>internet</group>
    <functionString>FindFirstUrlCacheEntryExA(LPCSTR lpszUrlSearchPattern, DWORD dwFlags, DWORD dwFilter, GROUPID GroupId, LPINTERNET_CACHE_ENTRY_INFOA lpFirstCacheEntryInfo, LPDWORD lpcbEntryInfo, LPVOID lpGroupAttributes, LPDWORD lpcbGroupAttributes, LPVOID lpReserved)</functionString>
    <param index="0" helpString="lpszUrlSearchPattern">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FindFirstUrlCacheGroup">wininet.dll!FindFirstUrlCacheGroup</function>
    <group>internet</group>
    <functionString>FindFirstUrlCacheGroup(DWORD dwFlags, DWORD dwFilter, LPVOID lpSearchCondition, DWORD dwSearchCondition, GROUPID* lpGroupId, LPVOID lpReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FindNextUrlCacheEntry">wininet.dll!FindNextUrlCacheEntry</function>
    <group>internet</group>
    <functionString>FindNextUrlCacheEntryA(HANDLE hEnumHandle, LPINTERNET_CACHE_ENTRY_INFOA lpNextCacheEntryInfo, LPDWORD lpcbCacheEntryInfo)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FindNextUrlCacheEntry">wininet.dll!FindNextUrlCacheEntryEx</function>
    <group>internet</group>
    <functionString>FindNextUrlCacheEntryExA(HANDLE hEnumHandle, LPINTERNET_CACHE_ENTRY_INFOA lpNextCacheEntryInfo, LPDWORD lpcbEntryInfo, LPVOID lpGroupAttributes, LPDWORD lpcbGroupAttributes, LPVOID lpReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FindNextUrlCacheGroup">wininet.dll!FindNextUrlCacheGroup</function>
    <group>internet</group>
    <functionString>FindNextUrlCacheGroup(HANDLE hFind, GROUPID* lpGroupId, LPVOID lpReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpCommand">wininet.dll!FtpCommand</function>
    <group>internet</group>
    <functionString>FtpCommandA(HINTERNET hConnect, BOOL fExpectResponse, DWORD dwFlags, LPCSTR lpszCommand, DWORD_PTR dwContext, HINTERNET* phFtpCommand)</functionString>
    <param index="3" helpString="lpszCommand">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpCreateDirectory">wininet.dll!FtpCreateDirectory</function>
    <group>internet</group>
    <functionString>FtpCreateDirectoryA(HINTERNET hConnect, LPCSTR lpszDirectory)</functionString>
    <param index="1" helpString="lpszDirectory">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpDeleteFile">wininet.dll!FtpDeleteFile</function>
    <group>internet</group>
    <functionString>FtpDeleteFileA(HINTERNET hConnect, LPCSTR lpszFileName)</functionString>
    <param index="1" helpString="lpszFileName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpFindFirstFile">wininet.dll!FtpFindFirstFile</function>
    <group>internet</group>
    <functionString>FtpFindFirstFileA(HINTERNET hConnect, LPCSTR lpszSearchFile, LPWIN32_FIND_DATAA lpFindFileData, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszSearchFile">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpGetCurrentDirectory">wininet.dll!FtpGetCurrentDirectory</function>
    <group>internet</group>
    <functionString>FtpGetCurrentDirectoryA(HINTERNET hConnect, LPSTR lpszCurrentDirectory, LPDWORD lpdwCurrentDirectory)</functionString>
    <param index="1" helpString="lpszCurrentDirectory">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpGetFile">wininet.dll!FtpGetFile</function>
    <group>internet</group>
    <functionString>FtpGetFileA(HINTERNET hConnect, LPCSTR lpszRemoteFile, LPCSTR lpszNewFile, BOOL fFailIfExists, DWORD dwFlagsAndAttributes, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszRemoteFile">
      <match />
    </param>
    <param index="2" helpString="lpszNewFile">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpGetFileEx">wininet.dll!FtpGetFileEx</function>
    <group>internet</group>
    <functionString>FtpGetFileEx(HINTERNET hFtpSession, LPCSTR lpszRemoteFile, LPCWSTR lpszNewFile, BOOL fFailIfExists, DWORD dwFlagsAndAttributes, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszRemoteFile">
      <match />
    </param>
    <param index="2" helpString="lpszNewFile">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>UINT</return>
    <function displayName="FtpGetFileSize">wininet.dll!FtpGetFileSize</function>
    <group>internet</group>
    <functionString>FtpGetFileSize(HINTERNET hFile, LPDWORD lpdwFileSizeHigh)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpOpenFile">wininet.dll!FtpOpenFile</function>
    <group>internet</group>
    <functionString>FtpOpenFileA(HINTERNET hConnect, LPCSTR lpszFileName, DWORD dwAccess, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszFileName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpPutFile">wininet.dll!FtpPutFile</function>
    <group>internet</group>
    <functionString>FtpPutFileA(HINTERNET hConnect, LPCSTR lpszLocalFile, LPCSTR lpszNewRemoteFile, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszLocalFile">
      <match />
    </param>
    <param index="2" helpString="lpszNewRemoteFile">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpPutFileEx">wininet.dll!FtpPutFileEx</function>
    <group>internet</group>
    <functionString>FtpPutFileEx(HINTERNET hFtpSession, LPCWSTR lpszLocalFile, LPCSTR lpszNewRemoteFile, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszLocalFile">
      <match />
    </param>
    <param index="2" helpString="lpszNewRemoteFile">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpRemoveDirectory">wininet.dll!FtpRemoveDirectory</function>
    <group>internet</group>
    <functionString>FtpRemoveDirectoryA(HINTERNET hConnect, LPCSTR lpszDirectory)</functionString>
    <param index="1" helpString="lpszDirectory">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpRenameFile">wininet.dll!FtpRenameFile</function>
    <group>internet</group>
    <functionString>FtpRenameFileA(HINTERNET hConnect, LPCSTR lpszExisting, LPCSTR lpszNew)</functionString>
    <param index="1" helpString="lpszExisting">
      <match />
    </param>
    <param index="2" helpString="lpszNew">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="FtpSetCurrentDirectory">wininet.dll!FtpSetCurrentDirectory</function>
    <group>internet</group>
    <functionString>FtpSetCurrentDirectoryA(HINTERNET hConnect, LPCSTR lpszDirectory)</functionString>
    <param index="1" helpString="lpszDirectory">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GetUrlCacheEntryInfo">wininet.dll!GetUrlCacheEntryInfo</function>
    <group>internet</group>
    <functionString>GetUrlCacheEntryInfoA(LPCSTR lpszUrlName, LPINTERNET_CACHE_ENTRY_INFOA lpCacheEntryInfo, LPDWORD lpcbCacheEntryInfo)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GetUrlCacheEntryInfo">wininet.dll!GetUrlCacheEntryInfoEx</function>
    <group>internet</group>
    <functionString>GetUrlCacheEntryInfoExA(LPCSTR lpszUrl, LPINTERNET_CACHE_ENTRY_INFOA lpCacheEntryInfo, LPDWORD lpcbCacheEntryInfo, LPSTR lpszRedirectUrl, LPDWORD lpcbRedirectUrl, LPVOID lpReserved, DWORD dwFlags)</functionString>
    <param index="0" helpString="lpszUrl">
      <match />
    </param>
    <param index="3" helpString="lpszRedirectUrl" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GetUrlCacheGroupAttribute">wininet.dll!GetUrlCacheGroupAttribute</function>
    <group>internet</group>
    <functionString>GetUrlCacheGroupAttributeA(GROUPID gid, DWORD dwFlags, DWORD dwAttributes, LPINTERNET_CACHE_GROUP_INFOA lpGroupInfo, LPDWORD lpdwGroupInfo, LPVOID lpReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GopherCreateLocator">wininet.dll!GopherCreateLocator</function>
    <group>internet</group>
    <functionString>GopherCreateLocatorA(LPCSTR lpszHost, INTERNET_PORT nServerPort, LPCSTR lpszDisplayString, LPCSTR lpszSelectorString, DWORD dwGopherType, LPSTR lpszLocator, LPDWORD lpdwBufferLength)</functionString>
    <param index="0" helpString="lpszHost">
      <match />
    </param>
    <param index="2" helpString="lpszDisplayString">
      <match />
    </param>
    <param index="3" helpString="lpszSelectorString" />
    <param index="5" helpString="lpszLocator" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GopherFindFirstFile">wininet.dll!GopherFindFirstFile</function>
    <group>internet</group>
    <functionString>GopherFindFirstFileA(HINTERNET hConnect, LPCSTR lpszLocator, LPCSTR lpszSearchString, LPGOPHER_FIND_DATAA lpFindData, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszLocator">
      <match />
    </param>
    <param index="2" helpString="lpszSearchString">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GopherGetAttribute">wininet.dll!GopherGetAttribute</function>
    <group>internet</group>
    <functionString>GopherGetAttributeA(HINTERNET hConnect, LPCSTR lpszLocator, LPCSTR lpszAttributeName, LPBYTE lpBuffer, DWORD dwBufferLength, LPDWORD lpdwCharactersReturned, GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszLocator">
      <match />
    </param>
    <param index="2" helpString="lpszAttributeName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GopherGetLocatorType">wininet.dll!GopherGetLocatorType</function>
    <group>internet</group>
    <functionString>GopherGetLocatorTypeA(LPCSTR lpszLocator, LPDWORD lpdwGopherType)</functionString>
    <param index="0" helpString="lpszLocator">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GopherOpenFile">wininet.dll!GopherOpenFile</function>
    <group>internet</group>
    <functionString>GopherOpenFileA(HINTERNET hConnect, LPCSTR lpszLocator, LPCSTR lpszView, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszLocator">
      <match />
    </param>
    <param index="2" helpString="lpszView">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="HttpAddRequestHeaders">wininet.dll!HttpAddRequestHeaders</function>
    <group>internet</group>
    <functionString>HttpAddRequestHeadersA(HINTERNET hRequest, LPCSTR lpszHeaders, DWORD dwHeadersLength, DWORD dwModifiers)</functionString>
    <param index="1" helpString="lpszHeaders">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="HttpEndRequest">wininet.dll!HttpEndRequest</function>
    <group>internet</group>
    <functionString>HttpEndRequestA(HINTERNET hRequest, LPINTERNET_BUFFERSA lpBuffersOut, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" context="LPINTERNET_BUFFERS" helpString="lpBuffersOut" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="HttpOpenRequest">wininet.dll!HttpOpenRequest</function>
    <group>internet</group>
    <functionString>HttpOpenRequestA(HINTERNET hConnect, LPCSTR lpszVerb, LPCSTR lpszObjectName, LPCSTR lpszVersion, LPCSTR lpszReferrer, LPCSTR* lplpszAcceptTypes, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszVerb">
      <match />
    </param>
    <param index="2" helpString="lpszObjectName">
      <match />
    </param>
    <param index="3" helpString="lpszVersion" />
    <param index="4" helpString="lpszReferrer" />
    <param pointer="true" index="5" helpString="lplpszAcceptTypes" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="HttpQueryInfo">wininet.dll!HttpQueryInfo</function>
    <group>internet</group>
    <functionString>HttpQueryInfoA(HINTERNET hRequest, DWORD dwInfoLevel, LPVOID lpBuffer, LPDWORD lpdwBufferLength, LPDWORD lpdwIndex)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="HttpSendRequest">wininet.dll!HttpSendRequest</function>
    <group>internet</group>
    <functionString>BOOL HttpSendRequestA(HINTERNET hRequest, LPCSTR lpszHeaders, DWORD dwHeadersLength, LPVOID lpOptional, DWORD dwOptionalLength)</functionString>
    <param index="1" helpString="lpszHeaders">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="HttpSendRequest">wininet.dll!HttpSendRequestEx</function>
    <group>internet</group>
    <functionString>HttpSendRequestExA(HINTERNET hRequest, LPINTERNET_BUFFERSA lpBuffersIn, LPINTERNET_BUFFERSA lpBuffersOut, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" context="LPINTERNET_BUFFERS" helpString="lpBuffersIn">
      <match />
    </param>
    <param index="2" context="LPINTERNET_BUFFERS" helpString="lpBuffersOut" />
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="InternetAttemptConnect">wininet.dll!InternetAttemptConnect</function>
    <group>internet</group>
    <functionString>InternetAttemptConnect(DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetAutodial">wininet.dll!InternetAutodial</function>
    <group>internet</group>
    <functionString>InternetAutodial(DWORD dwFlags, HWND hwndParent)</functionString>
    <param context="HWND" index="1" helpString="hwndParent">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetAutodialHangup">wininet.dll!InternetAutodialHangup</function>
    <group>internet</group>
    <functionString>InternetAutodialHangup(DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetCanonicalizeUrl">wininet.dll!InternetCanonicalizeUrl</function>
    <group>internet</group>
    <functionString>InternetCanonicalizeUrlA(LPCSTR lpszUrl, LPSTR lpszBuffer, LPDWORD lpdwBufferLength, DWORD dwFlags)</functionString>
    <param index="0" helpString="lpszUrl">
      <match />
    </param>
    <param index="1" helpString="lpszBuffer">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetCheckConnection">wininet.dll!InternetCheckConnection</function>
    <group>internet</group>
    <functionString>InternetCheckConnectionA(LPCSTR lpszUrl, DWORD dwFlags, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszUrl">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetClearAllPerSiteCookieDecisions">wininet.dll!InternetClearAllPerSiteCookieDecisions</function>
    <group>internet</group>
    <functionString>InternetClearAllPerSiteCookieDecisions()</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetCloseHandle">wininet.dll!InternetCloseHandle</function>
    <group>internet</group>
    <functionString>InternetCloseHandle(HINTERNET hInternet)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetCombineUrl">wininet.dll!InternetCombineUrl</function>
    <group>internet</group>
    <functionString>InternetCombineUrlA(LPCSTR lpszBaseUrl, LPCSTR lpszRelativeUrl, LPSTR lpszBuffer, LPDWORD lpdwBufferLength, DWORD dwFlags)</functionString>
    <param index="0" helpString="lpszBaseUrl">
      <match />
    </param>
    <param index="1" helpString="lpszRelativeUrl">
      <match />
    </param>
    <param index="2" helpString="lpszBuffer" />
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="InternetConfirmZoneCrossing">wininet.dll!InternetConfirmZoneCrossing</function>
    <group>internet</group>
    <functionString>InternetConfirmZoneCrossing(HWND hWnd, LPSTR szUrlPrev, LPSTR szUrlNew, BOOL bPost)</functionString>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="szUrlPrev">
      <match />
    </param>
    <param index="2" helpString="szUrlNew" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetConfirmZoneCrossing">wininet.dll!InternetConfirmZoneCrossing</function>
    <group>internet</group>
    <functionString>InternetConfirmZoneCrossingA(HWND hWnd, LPSTR szUrlPrev, LPSTR szUrlNew, BOOL bPost)</functionString>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
    <param index="1" helpString="szUrlPrev">
      <match />
    </param>
    <param index="2" helpString="szUrlNew" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetConnect">wininet.dll!InternetConnect</function>
    <group>internet</group>
    <functionString>InternetConnectA(HINTERNET hInternet, LPCSTR lpszServerName, INTERNET_PORT nServerPort, LPCSTR lpszUserName, LPCSTR lpszPassword, DWORD dwService, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszServerName">
      <match />
    </param>
    <param index="3" helpString="lpszUserName">
      <match />
    </param>
    <param index="4" helpString="lpszPassword" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetCrackUrl">wininet.dll!InternetCrackUrl</function>
    <group>internet</group>
    <functionString>InternetCrackUrlA(LPCSTR lpszUrl, DWORD dwUrlLength, DWORD dwFlags, LPURL_COMPONENTSA lpUrlComponents)</functionString>
    <param index="0" helpString="lpszUrl">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetCreateUrl">wininet.dll!InternetCreateUrl</function>
    <group>internet</group>
    <functionString>InternetCreateUrlA(LPURL_COMPONENTSA lpUrlComponents, DWORD dwFlags, LPSTR lpszUrl, LPDWORD lpdwUrlLength)</functionString>
    <param index="2" helpString="lpszUrl">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="InternetDial">wininet.dll!InternetDial</function>
    <group>internet</group>
    <functionString>InternetDial(HWND hwndParent, LPSTR lpszConnectoid, DWORD dwFlags, LPDWORD lpdwConnection, DWORD dwReserved)</functionString>
    <param context="HWND" index="0" helpString="hwndParent">
      <match />
    </param>
    <param index="1" helpString="lpszConnectoid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="InternetDial">wininet.dll!InternetDial</function>
    <group>internet</group>
    <functionString>InternetDialA(HWND hwndParent, LPSTR lpszConnectoid, DWORD dwFlags, DWORD_PTR* lpdwConnection, DWORD dwReserved)</functionString>
    <param context="HWND" index="0" helpString="hwndParent">
      <match />
    </param>
    <param index="1" helpString="lpszConnectoid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetEnumPerSiteCookieDecision">wininet.dll!InternetEnumPerSiteCookieDecision</function>
    <group>internet</group>
    <functionString>InternetEnumPerSiteCookieDecisionA(LPSTR pszSiteName, long unsigned int* pcSiteNameSize, long unsigned int* pdwDecision, long unsigned int dwIndex)</functionString>
    <param index="0" helpString="pszSiteName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="InternetErrorDlg">wininet.dll!InternetErrorDlg</function>
    <group>internet</group>
    <functionString>InternetErrorDlg(HWND hWnd, HINTERNET hRequest, DWORD dwError, DWORD dwFlags, LPVOID* lppvData)</functionString>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetFindNextFile">wininet.dll!InternetFindNextFile</function>
    <group>internet</group>
    <functionString>InternetFindNextFileA(HINTERNET hFind, LPVOID lpvFindData)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetGetConnectedState">wininet.dll!InternetGetConnectedState</function>
    <group>internet</group>
    <functionString>InternetGetConnectedState(LPDWORD lpdwFlags, DWORD dwReserved)</functionString>
    <param pointer="true" index="0" context="INTERNETCONNECTIONSTATE" helpString="lpdwFlags">
      <match result="True" />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetGetConnectedStateEx">wininet.dll!InternetGetConnectedStateEx</function>
    <group>internet</group>
    <functionString>InternetGetConnectedStateEx(LPDWORD lpdwFlags, LPSTR lpszConnectionName, DWORD dwNameLen, DWORD dwReserved)</functionString>
    <param pointer="true" index="0" context="INTERNETCONNECTIONSTATE" helpString="lpdwFlags">
      <match result="True" />
    </param>
    <param index="1" helpString="lpszConnectionName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetGetConnectedStateEx">wininet.dll!InternetGetConnectedStateEx</function>
    <group>internet</group>
    <functionString>InternetGetConnectedStateExA(LPDWORD lpdwFlags, LPSTR lpszConnectionName, DWORD dwBufLen, DWORD dwReserved)</functionString>
    <param pointer="true" index="0" context="INTERNETCONNECTIONSTATE" helpString="lpdwFlags">
      <match result="True" />
    </param>
    <param index="1" helpString="lpszConnectionName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetGetCookie">wininet.dll!InternetGetCookie</function>
    <group>internet</group>
    <functionString>InternetGetCookieA(LPCSTR lpszUrl, LPCSTR lpszCookieName, LPSTR lpszCookieData, LPDWORD lpdwSize)</functionString>
    <param index="0" helpString="lpszUrl">
      <match />
    </param>
    <param index="1" helpString="lpszCookieName">
      <match />
    </param>
    <param index="2" result="true" helpString="lpszCookieData" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetGetCookie">wininet.dll!InternetGetCookieEx</function>
    <group>internet</group>
    <functionString>InternetGetCookieExA(LPCSTR lpszUrl, LPCSTR lpszCookieName, LPSTR lpszCookieData, LPDWORD lpdwSize, DWORD dwFlags, LPVOID lpReserved)</functionString>
    <param index="0" helpString="lpszUrl">
      <match />
    </param>
    <param index="1" helpString="lpszCookieName">
      <match />
    </param>
    <param index="2" helpString="lpszCookieData" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetGetLastResponseInfo">wininet.dll!InternetGetLastResponseInfo</function>
    <group>internet</group>
    <functionString>InternetGetLastResponseInfoA(LPDWORD lpdwError, LPSTR lpszBuffer, LPDWORD lpdwBufferLength)</functionString>
    <param index="1" helpString="lpszBuffer">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetGetPerSiteCookieDecision">wininet.dll!InternetGetPerSiteCookieDecision</function>
    <group>internet</group>
    <functionString>InternetGetPerSiteCookieDecisionA(LPCSTR pchHostName, long unsigned int* pResult)</functionString>
    <param index="0" helpString="pchHostName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetGoOnline">wininet.dll!InternetGoOnline</function>
    <group>internet</group>
    <functionString>InternetGoOnline(LPSTR lpszURL, HWND hwndParent, DWORD dwFlags)</functionString>
    <param index="0" helpString="lpszURL">
      <match />
    </param>
    <param context="HWND" index="1" helpString="hwndParent">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetGoOnline">wininet.dll!InternetGoOnline</function>
    <group>internet</group>
    <functionString>InternetGoOnlineA(LPSTR lpszURL, HWND hwndParent, DWORD dwFlags)</functionString>
    <param index="0" helpString="lpszURL">
      <match />
    </param>
    <param context="HWND" index="1" helpString="hwndParent">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="InternetHangUp">wininet.dll!InternetHangUp</function>
    <group>internet</group>
    <functionString>InternetHangUp(DWORD_PTR dwConnection, DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetInitializeAutoProxyDll">wininet.dll!InternetInitializeAutoProxyDll</function>
    <group>internet</group>
    <functionString>InternetInitializeAutoProxyDll(DWORD dwReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetLockRequestFile">wininet.dll!InternetLockRequestFile</function>
    <group>internet</group>
    <functionString>InternetLockRequestFile(HINTERNET hInternet, HANDLE* lphLockRequestInfo)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetOpen">wininet.dll!InternetOpen</function>
    <group>internet</group>
    <functionString>InternetOpenA(LPCSTR lpszAgent, DWORD dwAccessType, LPCSTR lpszProxy, LPCSTR lpszProxyBypass, DWORD dwFlags)</functionString>
    <param index="0" helpString="lpszAgent">
      <match />
    </param>
    <param index="2" helpString="lpszProxy">
      <match />
    </param>
    <param index="3" helpString="lpszProxyBypass" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetOpenUrl">wininet.dll!InternetOpenUrl</function>
    <group>internet</group>
    <functionString>InternetOpenUrlA(HINTERNET hInternet, LPCSTR lpszUrl, LPCSTR lpszHeaders, DWORD dwHeadersLength, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" helpString="lpszUrl">
      <match />
    </param>
    <param index="2" helpString="lpszHeaders">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetQueryDataAvailable">wininet.dll!InternetQueryDataAvailable</function>
    <group>internet</group>
    <functionString>InternetQueryDataAvailable(HINTERNET hFile, LPDWORD lpdwNumberOfBytesAvailable, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetQueryOption">wininet.dll!InternetQueryOption</function>
    <group>internet</group>
    <functionString>InternetQueryOptionA(HINTERNET hInternet, DWORD dwOption, LPVOID lpBuffer, LPDWORD lpdwBufferLength)</functionString>
    <param index="1" context="INTERNET_OPTION" helpString="dwOption">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetReadFile">wininet.dll!InternetReadFile</function>
    <group>internet</group>
    <functionString>InternetReadFile(HINTERNET hFile, LPVOID lpBuffer, DWORD dwNumberOfBytesToRead, LPDWORD lpdwNumberOfBytesRead)</functionString>
    <param index="1" type="LPSTR" helpString="lpBuffer" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetReadFile">wininet.dll!InternetReadFileEx</function>
    <group>internet</group>
    <functionString>InternetReadFileExA(HINTERNET hFile, LPINTERNET_BUFFERSA lpBuffersOut, DWORD dwFlags, DWORD_PTR dwContext)</functionString>
    <param index="1" context="LPINTERNET_BUFFERS" helpString="lpBuffersOut" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetSetCookie">wininet.dll!InternetSetCookie</function>
    <group>internet</group>
    <functionString>InternetSetCookieA(LPCSTR lpszUrl, LPCSTR lpszCookieName, LPCSTR lpszCookieData)</functionString>
    <param index="0" helpString="lpszUrl">
      <match />
    </param>
    <param index="1" helpString="lpszCookieName">
      <match />
    </param>
    <param index="2" helpString="lpszCookieData" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetSetCookie">wininet.dll!InternetSetCookieEx</function>
    <group>internet</group>
    <functionString>InternetSetCookieExA(LPCSTR lpszUrl, LPCSTR lpszCookieName, LPCSTR lpszCookieData, DWORD dwFlags, DWORD_PTR dwReserved)</functionString>
    <param index="0" helpString="lpszUrl">
      <match />
    </param>
    <param index="1" helpString="lpszCookieName">
      <match />
    </param>
    <param index="2" helpString="lpszCookieData" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetSetDialState">wininet.dll!InternetSetDialState</function>
    <group>internet</group>
    <functionString>InternetSetDialState(LPCSTR lpszConnectoid, DWORD dwState, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszConnectoid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetSetDialState">wininet.dll!InternetSetDialState</function>
    <group>internet</group>
    <functionString>InternetSetDialStateA(LPCSTR lpszConnectoid, DWORD dwState, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszConnectoid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>UINT</return>
    <function displayName="InternetSetFilePointer">wininet.dll!InternetSetFilePointer</function>
    <group>internet</group>
    <functionString>InternetSetFilePointer(HINTERNET hFile, LONG lDistanceToMove, PVOID pReserved, DWORD dwMoveMethod, DWORD_PTR dwContext)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetSetOption">wininet.dll!InternetSetOption</function>
    <group>internet</group>
    <functionString>InternetSetOptionA(HINTERNET hInternet, DWORD dwOption, LPVOID lpBuffer, DWORD dwBufferLength)</functionString>
    <param index="1" context="INTERNET_OPTION" helpString="dwOption">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetSetOption">wininet.dll!InternetSetOptionEx</function>
    <group>internet</group>
    <functionString>InternetSetOptionExA(HINTERNET hInternet, DWORD dwOption, LPVOID lpBuffer, DWORD dwBufferLength, DWORD dwFlags)</functionString>
    <param index="1" context="INTERNET_OPTION" helpString="dwOption">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetSetPerSiteCookieDecision">wininet.dll!InternetSetPerSiteCookieDecision</function>
    <group>internet</group>
    <functionString>InternetSetPerSiteCookieDecisionA(LPCSTR pchHostName, DWORD dwDecision)</functionString>
    <param index="0" helpString="pchHostName">
      <match />
    </param>
    <param index="1" context="InternetCookieState" helpString="dwDecision">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetSetStatusCallback">wininet.dll!InternetSetStatusCallback</function>
    <group>internet</group>
    <functionString>InternetSetStatusCallback(HINTERNET hInternet, INTERNET_STATUS_CALLBACK lpfnInternetCallback)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetSetStatusCallback">wininet.dll!InternetSetStatusCallback</function>
    <group>internet</group>
    <functionString>InternetSetStatusCallbackA(HINTERNET hInternet, INTERNET_STATUS_CALLBACK lpfnInternetCallback)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetTimeFromSystemTime">wininet.dll!InternetTimeFromSystemTime</function>
    <group>internet</group>
    <functionString>InternetTimeFromSystemTime(SYSTEMTIME* pst, DWORD dwRFC, LPSTR lpszTime, DWORD cbTime)</functionString>
    <param index="2" helpString="lpszTime">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetTimeFromSystemTime">wininet.dll!InternetTimeFromSystemTime</function>
    <group>internet</group>
    <functionString>InternetTimeFromSystemTimeA(SYSTEMTIME* pst, DWORD dwRFC, LPSTR lpszTime, DWORD cbTime)</functionString>
    <param index="2" helpString="lpszTime">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetTimeToSystemTime">wininet.dll!InternetTimeToSystemTime</function>
    <group>internet</group>
    <functionString>InternetTimeToSystemTime(LPCSTR lpszTime, SYSTEMTIME* pst, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszTime">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetTimeToSystemTime">wininet.dll!InternetTimeToSystemTime</function>
    <group>internet</group>
    <functionString>InternetTimeToSystemTimeA(LPCSTR lpszTime, SYSTEMTIME* pst, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszTime">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetUnlockRequestFile">wininet.dll!InternetUnlockRequestFile</function>
    <group>internet</group>
    <functionString>InternetUnlockRequestFile(HANDLE hLockRequestInfo)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="InternetWriteFile">wininet.dll!InternetWriteFile</function>
    <group>internet</group>
    <functionString>InternetWriteFile(HINTERNET hFile, LPCVOID lpBuffer, DWORD dwNumberOfBytesToWrite, LPDWORD lpdwNumberOfBytesWritten)</functionString>
    <param index="1" type="LPSTR" helpString="lpBuffer" />
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="ReadUrlCacheEntryStream">wininet.dll!ReadUrlCacheEntryStream</function>
    <group>internet</group>
    <functionString>ReadUrlCacheEntryStream(HANDLE hUrlCacheStream, DWORD dwLocation, LPVOID lpBuffer, LPDWORD lpdwLen, DWORD Reserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="ResumeSuspendedDownload">wininet.dll!ResumeSuspendedDownload</function>
    <group>internet</group>
    <functionString>ResumeSuspendedDownload(HINTERNET hRequest, DWORD dwResultCode)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="RetrieveUrlCacheEntryFile">wininet.dll!RetrieveUrlCacheEntryFile</function>
    <group>internet</group>
    <functionString>RetrieveUrlCacheEntryFileA(LPCSTR lpszUrlName, LPINTERNET_CACHE_ENTRY_INFOA lpCacheEntryInfo, LPDWORD lpcbCacheEntryInfo, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="RetrieveUrlCacheEntryStream">wininet.dll!RetrieveUrlCacheEntryStream</function>
    <group>internet</group>
    <functionString>RetrieveUrlCacheEntryStreamA(LPCSTR lpszUrlName, LPINTERNET_CACHE_ENTRY_INFOA lpCacheEntryInfo, LPDWORD lpcbCacheEntryInfo, BOOL fRandomRead, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetUrlCacheEntryGroup">wininet.dll!SetUrlCacheEntryGroup</function>
    <group>internet</group>
    <functionString>SetUrlCacheEntryGroup(LPCSTR lpszUrlName, DWORD dwFlags, GROUPID GroupId, LPBYTE pbGroupAttributes, DWORD cbGroupAttributes, LPVOID lpReserved)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetUrlCacheEntryGroup">wininet.dll!SetUrlCacheEntryGroup</function>
    <group>internet</group>
    <functionString>SetUrlCacheEntryGroupA(LPCSTR lpszUrlName, DWORD dwFlags, GROUPID GroupId, LPBYTE pbGroupAttributes, DWORD cbGroupAttributes, LPVOID lpReserved)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetUrlCacheEntryInfo">wininet.dll!SetUrlCacheEntryInfo</function>
    <group>internet</group>
    <functionString>SetUrlCacheEntryInfoA(LPCSTR lpszUrlName, LPINTERNET_CACHE_ENTRY_INFOA lpCacheEntryInfo, DWORD dwFieldControl)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="SetUrlCacheGroupAttribute">wininet.dll!SetUrlCacheGroupAttribute</function>
    <group>internet</group>
    <functionString>SetUrlCacheGroupAttributeA(GROUPID gid, DWORD dwFlags, DWORD dwAttributes, LPINTERNET_CACHE_GROUP_INFOA lpGroupInfo, LPVOID lpReserved)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="UnlockUrlCacheEntryFile">wininet.dll!UnlockUrlCacheEntryFile</function>
    <group>internet</group>
    <functionString>UnlockUrlCacheEntryFile(LPCSTR lpszUrlName, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="UnlockUrlCacheEntryFile">wininet.dll!UnlockUrlCacheEntryFile</function>
    <group>internet</group>
    <functionString>UnlockUrlCacheEntryFileA(LPCSTR lpszUrlName, DWORD dwReserved)</functionString>
    <param index="0" helpString="lpszUrlName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="UnlockUrlCacheEntryStream">wininet.dll!UnlockUrlCacheEntryStream</function>
    <group>internet</group>
    <functionString>UnlockUrlCacheEntryStream(HANDLE hUrlCacheStream, DWORD Reserved)</functionString>
  </hook>
  <!-- End Wininet.dll -->
  <!-- Begin Localization -->
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GetUserDefaultLocaleName">kernel32.dll!GetUserDefaultLocaleName</function>
    <group>localization</group>
    <functionString>int GetUserDefaultLocaleName(LPWSTR lpLocaleName, int cchLocaleName)</functionString>
    <param index="0" helpString="lpLocaleName" />
    <param index="1" helpString="cchLocaleName" />
  </hook>
  <hook before="true" priority="3">
    <return>UINT</return>
    <function displayName="GetUserDefaultLCID">kernel32.dll!GetUserDefaultLCID</function>
    <group>localization</group>
    <functionString>LCID GetUserDefaultLCID(void)</functionString>
  </hook>
  <hook before="true" priority="3">
    <return>BOOL</return>
    <function displayName="GetSystemDefaultLocaleName">kernel32.dll!GetSystemDefaultLocaleName</function>
    <group>localization</group>
    <functionString>int GetSystemDefaultLocaleName(LPWSTR lpLocaleName, int cchLocaleName)</functionString>
    <param index="0" helpString="lpLocaleName" />
    <param index="1" helpString="cchLocaleName" />
  </hook>
  <hook before="true" priority="3">
    <return>UINT</return>
    <function displayName="GetSystemDefaultLCID">kernel32.dll!GetSystemDefaultLCID</function>
    <group>localization</group>
    <functionString>LCID GetSystemDefaultLCID(void)</functionString>
  </hook>
  <!-- End Localization -->
  <!-- Begin Ole32-->
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="Ole32.CoGetClassObject">ole32.dll!CoGetClassObject</function>
    <group>ActiveX</group>
    <functionString>HRESULT CoGetClassObject(REFCLSID rclsid, DWORD dwClsContext, COSERVERINFO *pServerInfo, REFIID riid, LPVOID *ppv)</functionString>
    <param context="IID" pointer="true" index="0" helpString="rclsid" />
    <param context="IID" pointer="true" index="3" helpString="riid" />
  </hook>
  <!-- End Ole32-->
  <!-- Begin Process functions -->
  <hook before="true" stackBefore="true" paramsBefore="true" priority="2">
    <return>NTSTATUS</return>
    <function displayName="TerminateProcess">ntdll.dll!NtTerminateProcess</function>
    <group>Process</group>
    <functionString>NTSTATUS NTAPI NtTerminateProcess(HANDLE ProcessHandle, NTSTATUS ExitStatus)</functionString>
    <param context="HPROCESS" index="0" helpString="ProcessHandle" />
    <param index="1" helpString="ExitStatus" />
  </hook>
  <hook onlyBefore="true" before="true" stackBefore="true" paramsBefore="true" priority="2" matchBefore="true">
    <return>NTSTATUS</return>
    <function displayName="TerminateThread">ntdll.dll!NtTerminateThread</function>
    <group>Process</group>
    <functionString>NTSTATUS NTAPI NtTerminateThread(HANDLE ThreadHandle, NTSTATUS ExitStatus )</functionString>
    <param index="0" type="LPVOID" context="HTHREAD" helpString="ThreadId" />
    <param index="1" helpString="ExitCode" />
  </hook>
  <hook hook="false" priority="2">
    <function displayName="ThreadExit"></function>
    <group>Process</group>
  </hook>
  <!--
  <hook onlyBefore="true" before="true" stackBefore="true" paramsBefore="true" priority="2" matchBefore="true">
    <return>NTSTATUS</return>
    <function displayName="ZwTerminateThread">ntdll.dll!ZwTerminateThread</function>
    <group>Process</group>
    <functionString>NTSTATUS NTAPI ZwTerminateThread(HANDLE ThreadHandle, NTSTATUS ExitStatus )</functionString>
    <param index="0" type="LPVOID" context="HTHREAD" helpString="ThreadId"/>
    <param index="1" helpString="ExitCode" />
  </hook>
  -->
  <hook before="true" priority="2">
    <return>NTSTATUS</return>
    <function displayName="CreateThread">ntdll.dll!NtCreateThreadEx</function>
    <group>Process</group>
    <functionString>NTSTATUS WINAPI NtCreateThreadEx(PHANDLE hThread, ACCESS_MASK DesiredAccess, LPVOID ObjectAttributes, HANDLE ProcessHandle, LPTHREAD_START_ROUTINE lpStartAddress,
									LPVOID lpParameter, BOOL CreateSuspended, ULONG StackZeroBits, ULONG SizeOfStackCommit, ULONG SizeOfStackReserve, 
									LPVOID lpBytesBuffer)</functionString>
    <param index="4" type="LPVOID" context="ADDRESS" helpString="Start">
      <match />
    </param>
    <param index="0" type="LPVOID" pointer="true">
      <param before="false" type="LPVOID" context="HTHREAD" helpString="ThreadId" />
    </param>
    <param index="4" type="LPVOID" helpString="StartAddress"/>
  </hook>
  <hook before="true" priority="2">
    <return>NTSTATUS</return>
    <function displayName="CreateThread">ntdll.dll!NtCreateThread</function>
    <group>Process</group>
    <functionString>NTSTATUS NTAPI NtCreateThread(PHANDLE ThreadHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes OPTIONAL, 
    HANDLE ProcessHandle, PCLIENT_ID ClientId, PCONTEXT ThreadContext, PINITIAL_TEB InitialTeb, BOOLEAN CreateSuspended)</functionString>
    <param index="5" type="LPVOID" context="ADDRESS" helpString="Start">
      <match />
    </param>
    <param index="0" type="LPVOID" pointer="true">
      <param type="LPVOID" context="HTHREAD" helpString="ThreadId" />
    </param>
    <param index="5" type="LPVOID" helpString="StartAddress"/>
  </hook>
  <hook before="true" priority="2">
    <return>NTSTATUS</return>
    <function displayName="CreateThread">ntdll.dll!RtlCreateUserThread</function>
    <group>Process</group>
    <functionString>NTSTATUS NTAPI RtlCreateUserThread(HANDLE ProcessHandle, PSECURITY_DESCRIPTOR SecurityDescriptor OPTIONAL, BOOLEAN CreateSuspended, ULONG StackZeroBits, PULONG StackReserved, PULONG StackCommit, PVOID StartAddress, PVOID StartParameter OPTIONAL, PHANDLE ThreadHandle, PCLIENT_ID ClientID )</functionString>
    <param index="6" type="LPVOID" context="ADDRESS" helpString="Start">
      <match />
    </param>
    <param index="8" type="LPVOID" pointer="true">
      <param type="LPVOID" context="HTHREAD" helpString="ThreadId" />
    </param>
    <param index="6" type="LPVOID" helpString="StartAddress"/>
  </hook>
  <hook before="true" priority="3">
    <return>NTSTATUS</return>
    <function displayName="GetProcAddress">kernel32.dll!GetProcAddress</function>
    <group>Procedure Address</group>
    <functionString>FARPROC WINAPI GetProcAddress(HMODULE hModule, LPCSTR lpProcName)</functionString>
    <param index="0" context="HMODULE" helpString="hModule">
      <match onlyFilename="true" />
    </param>
    <param index="1" helpString="lpProcName">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>NTSTATUS</return>
    <function displayName="GetLibraryHandle">ntdll.dll!LdrGetDllHandle</function>
    <group>Module Handle</group>
    <functionString>NTSYSAPI NTSTATUS NTAPI LdrGetDllHandle(PWORD pwPath OPTIONAL, IN PVOID Unused OPTIONAL, IN PUNICODE_STRING ModuleFileName, OUT PHANDLE pHModule)</functionString>
    <param index="3" pointer="true" context="HMODULE" helpString="Module" result="true">
      <match onlyFilename="true" helpString="Module"/>
    </param>
    <param index="2" helpString="Path" context="PUNICODE_STRING">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>NTSTATUS</return>
    <function displayName="GetLibraryHandle">ntdll.dll!LdrGetDllHandleEx</function>
    <group>Module Handle</group>
    <skipCalls>
      <callerFrame>ntdll.dll!LdrGetDllHandle</callerFrame>
    </skipCalls>
    <functionString>NTSTATUS NTAPI LdrGetDllHandleEx(IN ULONG Flags, IN PWSTR DllPath OPTIONAL, 
    IN PULONG DllCharacteristics OPTIONAL, IN PUNICODE_STRING DllName, OUT PVOID *DllHandle OPTIONAL)</functionString>
    <param index="4" pointer="true" context="HMODULE" helpString="Module" result="true">
      <match onlyFilename="true" helpString="Module"/>
    </param>
    <param index="3" helpString="Path" context="PUNICODE_STRING">
      <match />
    </param>
  </hook>
  <hook hook="true" priority="3">
  <return>BOOL</return>
    <function displayName="FreeLibrary">kernel32.dll!FreeLibrary</function>
    <group>Module Handle</group>
    <param index="0" context="HMODULE" helpString="Module">
      <match />
    </param>
  </hook>
  <hook hook="true" priority="3">
  <return>BOOL</return>
    <function displayName="FreeLibraryAndExitThread">kernel32.dll!FreeLibraryAndExitThread</function>
    <group>Module Handle</group>
    <param index="0" context="HMODULE" helpString="Module">
      <match />
    </param>
  </hook>
  
  	
  <hook before="true" priority="3">
    <return>NTSTATUS</return>
    <function displayName="Ntdll.GetProcAddress">ntdll.dll!LdrGetProcedureAddress</function>
    <group>Procedure Address</group>
    <functionString>NTSYSAPI NTSTATUS NTAPI LdrGetProcedureAddress(IN HMODULE ModuleHandle, IN PANSI_STRING FunctionName OPTIONAL, IN WORD Oridinal OPTIONAL, OUT PVOID *FunctionAddress )</functionString>
    <skipCalls>
      <callerFrame>kernelbase.dll!GetProcAddress</callerFrame>
      <callerFrame>kernel32.dll!GetProcAddress</callerFrame>
    </skipCalls>
    <param index="0" context="HMODULE" helpString="Module">
      <match onlyFilename="true" helpString="Module"/>
    </param>
    <param index="1" context="PANSI_STRING" helpString="Function">
      <match />
    </param>
    <param index="2" helpString="Ordinal">
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>NTSTATUS</return>
    <function displayName="Ntdll.GetProcAddressEx">ntdll.dll!LdrGetProcedureAddressEx</function>
    <group>Procedure Address</group>
    <functionString>NTSTATUS NTAPI LdrGetProcedureAddressEx(PVOID DllHandle, PANSI_STRING ProcedureName, ULONG ProcedureNumber, PVOID *ProcedureAddress, ULONG Flags)</functionString>
    <skipCalls>
      <callerFrame>kernelbase.dll!GetProcAddress</callerFrame>
      <callerFrame>kernel32.dll!GetProcAddress</callerFrame>
      <callerFrame>ntdll.dll!LdrGetProcedureAddress</callerFrame>
    </skipCalls>
    <param index="0" context="HMODULE" type="HMODULE" helpString="Module">
      <match onlyFilename="true" helpString="Module"/>
    </param>
    <param index="1" context="PANSI_STRING" helpString="Function">
      <match />
    </param>
    <param index="2" helpString="Ordinal">
      <match />
    </param>
  </hook>
  

  <!--
  <hook before="true" priority="3">
    <return>NTSTATUS</return>
    <function displayName="UnloadLibrary">ntdll.dll!LdrUnloadDll</function>
    <group>Process</group>
    <functionString>NTSYSAPI NTSTATUS NTAPI LdrUnloadDll(IN HANDLE ModuleHandle )</functionString>
    <param index="0" context="HMODULE" type="HMODULE" helpString="Module">
      <match onlyFilename="true" helpString="Module"/>
    </param>
  </hook>
  -->
  
  


  <!-- End Process functions -->
  <!-- Begin Windows hook functions -->
  <hook before="true" priority="2">
    <return>BOOL</return>
    <function displayName="SetWindowsHookEx">user32.dll!SetWindowsHookEx</function>
    <group>Windows Hooks</group>
    <functionString>HHOOK WINAPI SetWindowsHookExA(int idHook, HOOKPROC lpfn, HINSTANCE hMod, DWORD dwThreadId)</functionString>
    <param index="0" context="WH_HOOKS_TYPE" helpString="idHook">
      <match />
    </param>
    <param index="1" helpString="Handler" type="LPVOID" />
    <param index="3" helpString="ThreadId" />
    <param index="1" helpString="HandlerAddress" type="LPVOID" />
  </hook>
  <hook before="true" priority="2">
    <return>BOOL</return>
    <function displayName="SetWindowsHook">user32.dll!SetWindowsHook</function>
    <group>Windows Hooks</group>
    <functionString>HHOOK WINAPI SetWindowsHookA(int idHook, HOOKPROC lpfn)</functionString>
    <param index="0" context="WH_HOOKS_TYPE" helpString="nFilterType">
      <match />
    </param>
    <param index="1" helpString="Handler" type="LPVOID" context="ADDRESS" />
    <param index="1" helpString="HandlerAddress" type="LPVOID" />
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="RpcRT4.IUnknown_QueryInterface_Proxy">rpcrt4.dll!IUnknown_QueryInterface_Proxy</function>
    <group>ActiveX</group>
    <functionString>HRESULT STDMETHODCALLTYPE IUnknown_QueryInterface_Proxy(IUnknown __RPC_FAR *This, REFIID riid, void **ppvObject)</functionString>
    <param context="IID" pointer="true" index="1" helpString="riid">
      <match />
    </param>
  </hook>
  <hook before="true" priority="4">
    <return>HRESULT</return>
    <function displayName="RpcRT4.CStdStubBuffer_QueryInterface">rpcrt4.dll!CStdStubBuffer_QueryInterface</function>
    <group>ActiveX</group>
    <functionString>HRESULT STDMETHODCALLTYPE CStdStubBuffer_QueryInterface(IRpcStubBuffer *This, REFIID riid, void **ppvObject)</functionString>
    <param context="IID" pointer="true" index="1" helpString="riid" >
      <match />
    </param>
  </hook>
  <hook before="true" priority="3">
    <return>HRESULT</return>
    <function displayName="RpcRT4.NdrDllGetClassObject">rpcrt4.dll!NdrDllGetClassObject</function>
    <group>ActiveX</group>
    <functionString>RPCRTAPI HRESULT RPC_ENTRY NdrDllGetClassObject(REFCLSID rclsid, REFIID riid, void **ppv, const ProxyFileInfo **pProxyFileList, const CLSID *pclsid, CStdPSFactoryBuffer *pPSFactoryBuffer)</functionString>
    <param context="IID" pointer="true" index="0" helpString="rclsid" >
      <match />
    </param>
    <param context="IID" pointer="true" index="1" helpString="riid" >
      <match />
    </param>
  </hook>
  <hook priority="3">
    <return>NTSTATUS</return>
    <function displayName="SetSystemEnvironmentValue">ntdll.dll!NtSetSystemEnvironmentValue</function>
    <group>Environment</group>
    <functionString>NTSTATUS NTAPI NtSetSystemEnvironmentValue(PUNICODE_STRING VariableName, PUNICODE_STRING Value )</functionString>
    <param context="PUNICODE_STRING" index="0" helpString="Name" >
      <match />
    </param>
    <param context="PUNICODE_STRING" index="1" helpString="Value">
      <match result="True" />
    </param>
  </hook>
  <hook priority="3">
    <return>NTSTATUS</return>
    <function displayName="ExpandEnvironmentStrings">ntdll.dll!RtlExpandEnvironmentStrings_U</function>
    <group>Environment</group>
    <functionString>NTSYSAPI NTSTATUS NTAPI RtlExpandEnvironmentStrings_U(IN PVOID Environment OPTIONAL, IN PUNICODE_STRING SourceString, OUT PUNICODE_STRING     DestinationString, 
	OUT PULONG DestinationBufferLength OPTIONAL )</functionString>
    <param context="PUNICODE_STRING" index="1" helpString="Source">
      <match />
    </param>
    <param context="PUNICODE_STRING" index="2" helpString="Expanded">
      <match result="True" />
    </param>
  </hook>
  <hook priority="3">
    <return>NTSTATUS</return>
    <function displayName="QueryEnvironmentVariable">ntdll.dll!RtlQueryEnvironmentVariable_U</function>
    <group>Environment</group>
    <functionString>NTSYSAPI NTSTATUS NTAPI RtlQueryEnvironmentVariable_U(IN PVOID Environment OPTIONAL, 
    IN PUNICODE_STRING VariableName, OUT PUNICODE_STRING VariableValue )</functionString>
    <param context="PUNICODE_STRING" index="1" helpString="Name">
      <match />
    </param>
    <param context="PUNICODE_STRING" index="2" helpString="Value">
      <match result="True" />
    </param>
  </hook>
  <hook priority="3">
    <return>NTSTATUS</return>
    <function displayName="SetEnvironmentVariable">ntdll.dll!RtlSetEnvironmentVariable</function>
    <group>Environment</group>
    <functionString>NTSYSAPI NTSTATUS NTAPI RtlSetEnvironmentVariable(IN OUT PVOID *Environment OPTIONAL, IN PUNICODE_STRING VariableName, 
    IN PUNICODE_STRING VariableValue)</functionString>
    <param context="PUNICODE_STRING" index="1" helpString="Name">
      <match />
    </param>
    <param context="PUNICODE_STRING" index="2" helpString="Value">
      <match result="True" />
    </param>
  </hook>  
  <!-- End Windows hook functions -->
  
  <!-- Begin Exceptions functions -->
  <hook onlyBefore="true" stackBefore="true" paramsBefore="true" priority="3">
    <return force="1">NTSTATUS</return>
    <function displayName="ExceptionContinue">ntdll.dll!NtContinue</function>
    <group>Exceptions</group>
    <functionString>NTSYSCALLAPI NTSTATUS NTAPI NtContinue(PCONTEXT ContextRecord, BOOLEAN TestAlert)</functionString>
  </hook>
  <hook onlyBefore="true" hook="false">
    <return force="1">NTSTATUS</return>
    <function displayName="ThreadStarted">ntdll.dll!NtContinue</function>
    <group>Exceptions</group>
  </hook>
  <hook onlyBefore="true" stackBefore="true" priority="3">
    <return>BOOL</return>
    <function displayName="DispatchException">ntdll.dll!RtlDispatchException</function>
    <group>Exceptions</group>
    <functionString>BOOLEAN NTAPI RtlDispatchException(PEXCEPTION_RECORD ExceptionRecord, PCONTEXT Context)</functionString>
  </hook>

  <hook onlyBefore="true" hook="false">
    <return>NTSTATUS</return>
    <function displayName="RaiseException">ntdll.dll!NtRaiseException</function>
    <group>Exceptions</group>
    <functionString>NTSYSCALLAPI NTSTATUS NTAPI NtRaiseException(PEXCEPTION_RECORD 	ExceptionRecord, PCONTEXT ContextRecord, BOOLEAN FirstChance)</functionString>
    <param index="0" helpString="Code">
      <match />
    </param>
  </hook>
  <hook onlyBefore="true" hook="false">
    <return>NTSTATUS</return>
    <function displayName="RaiseException">ntdll.dll!RtlRaiseException</function>
    <group>Exceptions</group>
    <functionString>NTSYSAPI VOID NTAPI RtlRaiseException(PEXCEPTION_RECORD ExceptionRecord)</functionString>
    <param index="0" helpString="Code">
      <match />
    </param>
  </hook>
  <hook onlyBefore="true" before="true" stackBefore="true" priority="3">
    <return>NTSTATUS</return>
    <function displayName="RaiseExceptionStatus">ntdll.dll!RtlRaiseStatus</function>
    <group>Exceptions</group>
    <functionString>NTSYSAPI DECLSPEC_NORETURN VOID NTAPI RtlRaiseStatus(NTSTATUS Status)</functionString>
    <param index="0" helpString="Code" context="NTSTATUS">
      <match />
    </param>
  </hook>
  <!-- End Exceptions functions -->

  <!-- Begin String functions -->
  <hook priority="5">
    <return>VOID</return>
    <function displayName="InitAnsiString">ntdll.dll!RtlInitAnsiString</function>
    <group>Ntdll Strings</group>
    <functionString>VOID WINAPI RtlInitAnsiString(PANSI_STRING target, PCSZ source)</functionString>
    <param context="PANSI_STRING" index="0" helpString="String">
      <match />
    </param>
  </hook>
  <hook priority="5">
    <return>NTSTATUS</return>
    <function displayName="InitAnsiStringEx">ntdll.dll!RtlInitAnsiStringEx</function>
    <group>Ntdll Strings</group>
    <functionString>NTSTATUS WINAPI RtlInitAnsiStringEx(PANSI_STRING target, PCSZ source)</functionString>
    <param context="PANSI_STRING" index="0" helpString="String">
      <match />
    </param>
  </hook>
  <hook priority="5">
    <return>VOID</return>
    <function displayName="InitUnicodeString">ntdll.dll!RtlInitUnicodeString</function>
    <group>Ntdll Strings</group>
    <functionString>VOID WINAPI RtlInitUnicodeString(PUNICODE_STRING DestinationString, PCWSTR SourceString)</functionString>
    <param context="PUNICODE_STRING" index="0" helpString="String">
      <match />
    </param>
  </hook>
  <hook priority="5">
    <return>NTSTATUS</return>
    <function displayName="InitUnicodeStringEx">ntdll.dll!RtlInitUnicodeStringEx</function>
    <group>Ntdll Strings</group>
    <functionString>NTSTATUS WINAPI RtlInitUnicodeStringEx(PUNICODE_STRING DestinationString, PCWSTR SourceString)</functionString>
    <param context="PUNICODE_STRING" index="0" helpString="String">
      <match />
    </param>
  </hook>
  <hook priority="5">
    <return>NTSTATUS</return>
    <function displayName="DeviceIoControlFile">ntdll.dll!NtDeviceIoControlFile</function>
    <group>Drivers</group>
    <functionString>NTSTATUS NTAPI NtDeviceIoControlFile(HANDLE FileHandle, HANDLE event, PIO_APC_ROUTINE apcRoutine, PVOID apcContext, PIO_STATUS_BLOCK IoStatusBlock,
										ULONG ioControlCode, PVOID inputBuffer, ULONG inputBufferLength, PVOID outputBuffer, ULONG outputBufferLength)</functionString>
    <param index="5" helpString="Code">
      <match />
    </param>        
    <param context="HFILE" index="0" helpString="FileHandle">
      <match />
    </param>        
  </hook>
  
  <hook priority="5">
    <return>HRESULT</return>
    <function displayName="RegisterDragDrop">ole32.dll!RegisterDragDrop</function>
    <group>Drag and Drop</group>
    <functionString>HRESULT RegisterDragDrop(_In_ HWND hwnd, _In_ LPDROPTARGET pDropTarget)</functionString>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>        
  </hook>
  <hook priority="5">
    <return>HRESULT</return>
    <function displayName="RegisterDragDrop">ole32.dll!RevokeDragDrop</function>
    <group>Drag and Drop</group>
    <functionString>HRESULT RevokeDragDrop(HWND hwnd)</functionString>
    <param context="HWND" index="0" helpString="hWnd">
      <match />
    </param>        
  </hook>
  <hook priority="5">
    <return>HRESULT</return>
    <function displayName="RegisterDragDrop">ole32.dll!DoDragDrop</function>
    <group>Drag and Drop</group>
    <functionString>HRESULT DoDragDrop(LPDATAOBJECT pDataObj, LPDROPSOURCE pDropSource, DWORD dwOKEffects, LPDWORD pdwEffect)</functionString>
    <param context="DROPEFFECT" index="2">
      <match />
    </param>        
  </hook>


  <!-- End String functions -->
  
  <hook hook="false" priority="5">
    <function displayName="RegOpenKey" />
    <param>
      <match case="False" />
    </param>
    <param />
  </hook>
  <hook hook="false" priority="5">
    <function displayName="RegCreateKey" />
    <param>
      <match case="False" />
    </param>
    <param />
  </hook>
  
  
  
  
  <hook hook="false" priority="5">
    <function displayName="RegQueryValue" />
    <param>
      <match case="False" />
    </param>
    <param>
      <match case="False" />
    </param>
    <param>
      <match result="True" />
    </param>
  </hook>
  <hook hook="false" priority="5">
    <function displayName="RegEnumerateValueKey" />
    <param>
      <match case="False" />
    </param>
    <param>
      <match case="False" />
    </param>
    <param>
      <match result="True" />
    </param>
  </hook>
  <hook hook="false" priority="5">
    <function displayName="RegEnumerateKey" />
    <param>
      <match case="False" />
    </param>
    <param>
      <match case="False" />
    </param>
  </hook>
  <hook hook="false" priority="5">
    <function displayName="RegQueryMultipleValues" />
    <param>
      <match case="False" />
    </param>
  </hook>
  <hook hook="false" priority="5">
    <function displayName="RegSetValue" />
    <param>
      <match case="False" />
    </param>
    <param>
      <match case="False" />
    </param>
    <param>
      <match result="True" />
    </param>
  </hook>
  <hook hook="false" priority="5">
    <function displayName="RegDeleteValue" />
    <param>
      <match case="False" />
    </param>
  </hook>
  <hook hook="false" priority="5">
    <function displayName="RegDeleteKey" />
    <param>
      <match case="False" />
    </param>
  </hook>
  <hook hook="false" priority="5">
    <function displayName="RegQueryKey" />
    <param>
      <match case="False" />
    </param>
  </hook>
  <hook hook="false" priority="5">
    <function displayName="RegRenameKey" />
    <param>
      <match case="False" />
    </param>
    <param>
      <match case="False" />
    </param>
  </hook>
  <hook hook="false" priority="4">
    <function displayName="OpenFile" />
    <param>
      <match case="False" onlyFilename="True" />
    </param>
    <param>
      <match case="False" />
    </param>
  </hook>
  <hook hook="false" priority="4">
    <function displayName="CreateFile" />
    <param>
      <match case="False" onlyFilename="True" />
    </param>
    <param>
      <match case="False" />
    </param>
  </hook>
  <hook hook="false" priority="5">
    <function displayName="QueryDirectoryFile" />
    <param>
      <match case="False" onlyFilename="true" />
    </param>
    <param>
      <match case="False" />
    </param>
  </hook>
  <hook hook="false" priority="3">
    <function displayName="CreateDirectory" />
    <param>
      <match case="False" />
    </param>
    <param />
  </hook>
  <hook hook="false" priority="5">
    <function displayName="LoadLibrary" />
    <param>
      <match case="False" onlyFilename="True" />
    </param>
    <param />
  </hook>
  <hook hook="false" priority="3">
    <function displayName="CoCreate" />
    <param>
      <match case="False" />
    </param>
    <param />
    <param helpString="Server">
      <match case="False" result="True" onlyFilename="True" />
    </param>
  </hook>

  <hook hook="false" priority="2">
    <function displayName="CreateWindow" />
    <param>
      <match case="True" />
    </param>
    <param>
      <match case="True" />
    </param>
  </hook>
  <hook hook="false" priority="2">
    <function displayName="CreateDialog" />
    <param>
      <match case="True" />
    </param>
  </hook>
  <hook hook="false" priority="1">
    <function displayName="CreateProcess" />
    <param>
      <match case="False" />
    </param>
    <param />
  </hook>
  <hook hook="false" priority="1">
    <function displayName="ProcessStarted" />
    <param>
      <match case="False" />
    </param>
    <param />
  </hook>
  <hook hook="false" priority="1">
    <function displayName="OpenService" />
    <param>
      <match case="False" />
    </param>
    <param />
  </hook>
  <hook hook="false" priority="3">
    <function displayName="FindResource" />
    <param>
      <match onlyFilename="True" />
    </param>
    <param />
  </hook>
  <hook hook="false" priority="3">
    <function displayName="DllGetClassObject" />
    <param>
      <match />
    </param>
    <param>
      <match />
    </param>
  </hook>
  <hook hook="false" priority="3">
    <function displayName="StrChr" />
    <param>
      <match />
    </param>
    <param />
  </hook>
  <hook hook="false" priority="3">
    <function displayName="StrChrI" />
    <param>
      <match />
    </param>
    <param />
  </hook>
  <hook hook="false" priority="3">
    <function displayName="StrCmpN" />
    <param>
      <match />
    </param>
    <param>
      <match />
    </param>
  </hook>
  <hook hook="false" priority="3">
    <function displayName="StrCmpNI" />
    <param>
      <match />
    </param>
    <param>
      <match />
    </param>
  </hook>
  <hook hook="false" priority="3">
    <function displayName="StrRChr" />
    <param>
      <match />
    </param>
    <param>
      <match />
    </param>
  </hook>
  <hook hook="false" priority="3">
    <function displayName="StrRChrI" />
    <param>
      <match />
    </param>
    <param>
      <match />
    </param>
  </hook>
  <hook hook="false" priority="3">
    <function displayName="StrRStrI" />
    <param>
      <match />
    </param>
    <param>
      <match />
    </param>
  </hook>
  <hook hook="false" priority="3">
    <function displayName="StrStr" />
    <param>
      <match />
    </param>
    <param>
      <match />
    </param>
  </hook>
  <hook hook="false" priority="3">
    <function displayName="StrStrI" />
    <param>
      <match />
    </param>
    <param>
      <match />
    </param>
  </hook>
</hooks>