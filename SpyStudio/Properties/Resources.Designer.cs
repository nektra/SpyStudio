//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpyStudio.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SpyStudio.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap arrow_down {
            get {
                object obj = ResourceManager.GetObject("arrow_down", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap arrow_up {
            get {
                object obj = ResourceManager.GetObject("arrow_up", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap control_play {
            get {
                object obj = ResourceManager.GetObject("control_play", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Q29udHJvbCBQYW5lbFxEZXNrdG9w.
        /// </summary>
        internal static string CPD {
            get {
                return ResourceManager.GetString("CPD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LS0tLS1CRUdJTiBERVZJQVJFIExJQ0VOU0UtLS0tLQ0KUEdsdVptOCtQSEJ5YjJST1lXMWxQand2Y0hKdlpFNWhiV1UrUEhWelpYSk9ZVzFsUGxOd2VWTjBkV1JwYnp3dmRYTmxjazVoYldVKw0KUEhWelpYSkZUV0ZwYkQ1ellXeGxjMEJ1Wld0MGNtRXVZMjl0UEM5MWMyVnlSVTFoYVd3K1BHeHBZMVI1Y0dVK1EyOXRiV1Z5WTJsaA0KYkR3dmJHbGpWSGx3WlQ0OFpYaHdSR0YwWlQ0eU1ERTFNRGd4TWp3dlpYaHdSR0YwWlQ0OEwybHVabTgrfEd4VjVoNEZxT2ZON1Z2bw0KYkpMU3ZwV1VxZDZjU2dCN1pZbmh1ZmV2TmR6Ry81MDltWlNFTmNYOEQxa0t1Y1BtWGY0VGNNbWUxU2xCS0FZeEJGek1JOGxCZEV1Ng0KKzUvR2lUMkkzYWxpRkxhbUJkSktyaXNFMktVWHRRTU8rZkR6ZlBt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DevCla {
            get {
                return ResourceManager.GetString("DevCla", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to c3B5c3R1ZGlvQG5la3RyYS5jb20=.
        /// </summary>
        internal static string Dirpe {
            get {
                return ResourceManager.GetString("Dirpe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap exclude {
            get {
                object obj = ResourceManager.GetObject("exclude", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;messages&gt;
        ///  &lt;message value=&quot;1600&quot;&gt;
        ///    &lt;name&gt;BCM_FIRST&lt;/name&gt;
        ///    &lt;return value=&quot;&quot;&gt;
        ///      &lt;returninfo&gt;
        ///      &lt;/returninfo&gt;
        ///    &lt;/return&gt;
        ///    &lt;wparam value=&quot;&quot;&gt;
        ///      &lt;wname&gt;
        ///      &lt;/wname&gt;
        ///    &lt;/wparam&gt;
        ///    &lt;lparam value=&quot;&quot;&gt;
        ///      &lt;lname&gt;
        ///      &lt;/lname&gt;
        ///    &lt;/lparam&gt;
        ///  &lt;/message&gt;
        ///  &lt;message value=&quot;1601&quot;&gt;
        ///    &lt;name&gt;BCM_GETIDEALSIZE&lt;/name&gt;
        ///    &lt;return value=&quot;BOOL&quot;&gt;
        ///      &lt;returninfo&gt;returns LRESULT in lResult&lt;/returninfo&gt;
        ///    &lt;/return&gt;
        ///    &lt;wparam value=&quot;&quot;&gt;
        ///      &lt;wname&gt;wParam&lt;/wname&gt;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FunctionTypes {
            get {
                return ResourceManager.GetString("FunctionTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;hooks&gt;
        ///  &lt;context name=&quot;INTERNETFEATURELIST&quot; type=&quot;uint&quot;&gt;
        ///    &lt;value name=&quot;FEATURE_OBJECT_CACHING&quot;&gt;0&lt;/value&gt;
        ///    &lt;value name=&quot;FEATURE_ZONE_ELEVATION&quot;&gt;1&lt;/value&gt;
        ///    &lt;value name=&quot;FEATURE_MIME_HANDLING&quot;&gt;2&lt;/value&gt;
        ///    &lt;value name=&quot;FEATURE_MIME_SNIFFING&quot;&gt;3&lt;/value&gt;
        ///    &lt;value name=&quot;FEATURE_WINDOW_RESTRICTIONS&quot;&gt;4&lt;/value&gt;
        ///    &lt;value name=&quot;FEATURE_WEBOC_POPUPMANAGEMENT&quot;&gt;5&lt;/value&gt;
        ///    &lt;value name=&quot;FEATURE_BEHAVIORS&quot;&gt;6&lt;/value&gt;
        ///    &lt;value name=&quot;FEATURE_DISABLE_MK_PROTOC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Hooks {
            get {
                return ResourceManager.GetString("Hooks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap include {
            get {
                object obj = ResourceManager.GetObject("include", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UGF0dGVyblZlcnNpb24=.
        /// </summary>
        internal static string IsR {
            get {
                return ResourceManager.GetString("IsR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SpyStudio License Agreement
        ///
        ///This copy of SpyStudio (&quot;The Software Product&quot;) and accompanying documentation is licensed and not sold. This Software Product is protected by copyright laws and treaties, as well as laws and treaties related to other forms of intellectual property. Nektra LLC or its subsidiaries, affiliates, and suppliers own intellectual property rights in the Software Product. The Licensee&apos;s (&quot;you&quot; or &quot;your&quot;) license to download, use, copy, or change the Software Product is subject to these [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseCommercial {
            get {
                return ResourceManager.GetString("LicenseCommercial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nektra Non-Commercial License Agreement
        ///
        ///______________________________________________________________________
        ///Nektra LLC. license agreement (&quot;NKT-NCLS&quot;) is a legal agreement between you and Nektra LLC. (“Nektra” or “we”) for the software or data identified above, which may include source code, and any associated materials, text or speech files, associated media and &quot;online&quot; or electronic documentation and any updates we provide in our discretion (together, the &quot;Software&quot;). 
        ///
        ///By installing, copying, o [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseNonCommercial {
            get {
                return ResourceManager.GetString("LicenseNonCommercial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find Desired Access.
        /// </summary>
        internal static string LogStore_CompleteEvent_Cannot_find_Desired_Access {
            get {
                return ResourceManager.GetString("LogStore_CompleteEvent_Cannot_find_Desired_Access", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap main {
            get {
                object obj = ResourceManager.GetObject("main", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap nektra {
            get {
                object obj = ResourceManager.GetObject("nektra", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap nektra_logo_77x77 {
            get {
                object obj = ResourceManager.GetObject("nektra_logo_77x77", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Play {
            get {
                object obj = ResourceManager.GetObject("Play", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap play_no_frame {
            get {
                object obj = ResourceManager.GetObject("play_no_frame", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;operations&gt;
        ///	&lt;operation name=&quot;CancelRemoveDevice&quot; type=&quot;Custom&quot; priority=&quot;2&quot;&gt;
        ///		&lt;match index=&quot;0&quot;/&gt;
        ///	&lt;/operation&gt;
        ///	&lt;operation name=&quot;CancelStopDevice&quot; type=&quot;Custom&quot; priority=&quot;2&quot;&gt;
        ///		&lt;match index=&quot;0&quot;/&gt;
        ///	&lt;/operation&gt;
        ///	&lt;operation name=&quot;CloseFile&quot; type=&quot;CloseFile&quot; priority=&quot;3&quot;&gt;
        ///		&lt;match index=&quot;0&quot; case=&quot;False&quot;/&gt;
        ///	&lt;/operation&gt;
        ///	&lt;operation name=&quot;CreateFile&quot; type=&quot;CreateFile&quot; priority=&quot;3&quot;&gt;
        ///		&lt;match index=&quot;0&quot; case=&quot;False&quot;/&gt;
        ///		&lt;match index=&quot;2&quot; case=&quot;False&quot;/&gt;
        ///	&lt;/operation&gt;
        ///	&lt;operation name=&quot;CreateFileMappi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProcMon {
            get {
                return ResourceManager.GetString("ProcMon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 72832121.
        /// </summary>
        internal static string RegVa {
            get {
                return ResourceManager.GetString("RegVa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symantec Workstation Virtualization™ SDK does not support 64 bits. Run 32 bits version of this application to use this feature..
        /// </summary>
        internal static string Swv_64bits_Error {
            get {
                return ResourceManager.GetString("Swv_64bits_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Run this application As Administrator to use the Export Wizard..
        /// </summary>
        internal static string Swv_Export_Wizard_Not_Admin_Error {
            get {
                return ResourceManager.GetString("Swv_Export_Wizard_Not_Admin_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading layer list .
        /// </summary>
        internal static string SymLayerListView_Error_loading_layer_list_ {
            get {
                return ResourceManager.GetString("SymLayerListView_Error_loading_layer_list_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error exporting data to layer .
        /// </summary>
        internal static string SymLayerSelect_ButtonOkLayerClick_Error_exporting_data_to_layer_ {
            get {
                return ResourceManager.GetString("SymLayerSelect_ButtonOkLayerClick_Error_exporting_data_to_layer_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap syncing {
            get {
                object obj = ResourceManager.GetObject("syncing", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap syncing2 {
            get {
                object obj = ResourceManager.GetObject("syncing2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///
        ///setlocal
        ///
        ///set PROJECT_DIR=%PROJECT_PATH%
        ///if exist %PROJECT_PATH% goto haspath
        ///set PROJECT_DIR=%~dp0
        ///:haspath
        ///
        ///Rem default is %PROJECT_DIR%\bin
        ///set TARGET_DIR=%PROJECT_DIR%\bin
        ///
        ///
        ///rem If Package.ini has an OutDir option, set TARGET_DIR to OutDir
        ///For /F &quot;tokens=* delims=&quot; %%A in (&apos;type &quot;%PROJECT_DIR%\Package.ini&quot; ^| findstr &quot;OutDir=&quot;&apos;) Do set IniOutDir=%%A
        ///if &quot;%IniOutDir:~0,7%&quot;==&quot;OutDir=&quot; set TARGET_DIR=%IniOutDir:~7%
        ///if NOT &quot;%TARGET_DIR:~1,2%&quot;==&quot;:\&quot; if NOT &quot;%TARGET_DIR:~0,2%&quot;==&quot;\\&quot;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ThinApp_build_bat {
            get {
                return ResourceManager.GetString("ThinApp_build_bat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;trace-info&gt;
        ///	&lt;hook-type function=&quot;RegistryOpenKey&quot; priority=&quot;5&quot;&gt;
        ///		&lt;match case=&quot;False&quot;&gt;path&lt;/match&gt;
        ///	&lt;/hook-type&gt;
        ///	&lt;hook-type function=&quot;RegistryCreateKey&quot; priority=&quot;5&quot;&gt;
        ///		&lt;match case=&quot;False&quot;&gt;path&lt;/match&gt;
        ///	&lt;/hook-type&gt;
        ///	&lt;hook-type function=&quot;RegistryQueryValue&quot; priority=&quot;5&quot;&gt;
        ///		&lt;match case=&quot;False&quot;&gt;path&lt;/match&gt;
        ///		&lt;match result=&quot;True&quot;&gt;detail&lt;/match&gt;
        ///	&lt;/hook-type&gt;
        ///	&lt;hook-type function=&quot;RegistrySetValue&quot; priority=&quot;5&quot;&gt;
        ///		&lt;match case=&quot;False&quot;&gt;path&lt;/match&gt;
        ///		&lt;match result=&quot;True&quot;&gt;detail&lt;/match&gt;
        ///	&lt;/hook-t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TraceInfo {
            get {
                return ResourceManager.GetString("TraceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to V2hlZWxTY3JvbGxMaW5lc0hvb3Zlck1heFRpbWVvdXQ=.
        /// </summary>
        internal static string TV {
            get {
                return ResourceManager.GetString("TV", resourceCulture);
            }
        }
    }
}
